manoj@INSPIRON-5415 MINGW64 ~/Downloads/kafka
$ docker-compose up --build
time="2025-06-17T11:27:07+05:30" level=warning msg="C:\\Users\\manoj\\Downloads\\kafka\\docker-compose.yml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion"
[+] Running 5/5
 ✔ Network kafka-network  Created                                                                                              0.2s
 ✔ Container zookeeper    Created                                                                                              0.5s
 ✔ Container kafka        Created                                                                                              0.2s
 ✔ Container connect      Created                                                                                              0.3s
 ✔ Container web-ui       Created                                                                                              0.3s
Attaching to connect, kafka, web-ui, zookeeper
zookeeper  | ===> User
zookeeper  | uid=1000(appuser) gid=1000(appuser) groups=1000(appuser)
zookeeper  | ===> Configuring ...
kafka      | ===> User
kafka      | uid=1000(appuser) gid=1000(appuser) groups=1000(appuser)
kafka      | ===> Configuring ...
connect    | ===> User
connect    | uid=1000(appuser) gid=1000(appuser) groups=1000(appuser)
connect    | ===> Configuring ...
zookeeper  | ===> Running preflight checks ...
zookeeper  | ===> Check if /var/lib/zookeeper/data is writable ...
web-ui     | 2025-06-17 05:57:17,078 WARN  main         o.a.c.security.JwtSecurityWarning
web-ui     | 2025-06-17 05:57:17,083 WARN  main         o.a.c.security.JwtSecurityWarning ##############################################################
web-ui     | 2025-06-17 05:57:17,084 WARN  main         o.a.c.security.JwtSecurityWarning #                      SECURITY WARNING                      #
web-ui     | 2025-06-17 05:57:17,084 WARN  main         o.a.c.security.JwtSecurityWarning ##############################################################
web-ui     | 2025-06-17 05:57:17,084 WARN  main         o.a.c.security.JwtSecurityWarning
web-ui     | 2025-06-17 05:57:17,085 WARN  main         o.a.c.security.JwtSecurityWarning You have set a security group config but did not set the jwt secret.
web-ui     | 2025-06-17 05:57:17,085 WARN  main         o.a.c.security.JwtSecurityWarning This means that the API request will not be checked against the security group config.
web-ui     | 2025-06-17 05:57:17,087 WARN  main         o.a.c.security.JwtSecurityWarning Please set the 'micronaut.security.token.jwt.signatures.secret.generator.secret' configuration, or ask your administrator to do it !
web-ui     | 2025-06-17 05:57:17,090 WARN  main         o.a.c.security.JwtSecurityWarning
zookeeper  | ===> Check if /var/lib/zookeeper/log is writable ...
web-ui     | 2025-06-17 05:57:17,091 WARN  main         o.a.c.security.JwtSecurityWarning ##############################################################
web-ui     | 2025-06-17 05:57:17,092 WARN  main         o.a.c.security.JwtSecurityWarning
kafka      | ===> Running preflight checks ...
kafka      | ===> Check if /var/lib/kafka/data is writable ...
zookeeper  | ===> Launching ...
zookeeper  | ===> Launching zookeeper ...
kafka      | ===> Check if Zookeeper is healthy ...
web-ui     | 2025-06-17 05:57:18,934 INFO  main         io.micronaut.runtime.Micronaut Startup completed in 5821ms. Server Running: http://web-ui:8080
kafka      | SLF4J: Class path contains multiple SLF4J bindings.
kafka      | SLF4J: Found binding in [jar:file:/usr/share/java/cp-base-new/slf4j-reload4j-1.7.36.jar!/org/slf4j/impl/StaticLoggerBinder.class]
kafka      | SLF4J: Found binding in [jar:file:/usr/share/java/cp-base-new/slf4j-simple-1.7.36.jar!/org/slf4j/impl/StaticLoggerBinder.class]
kafka      | SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
kafka      | SLF4J: Actual binding is of type [org.slf4j.impl.Reload4jLoggerFactory]
kafka      | 0 [main] DEBUG io.confluent.admin.utils.cli.ZookeeperReadyCommand  - Arguments Namespace(zookeeper_connect=zookeeper:2181, timeout=40000).
kafka      | 11 [main] DEBUG io.confluent.admin.utils.ClusterStatus  - Check if Zookeeper is ready: zookeeper:2181
kafka      | 56 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT
kafka      | 56 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:host.name=kafka
kafka      | 56 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.version=11.0.15
kafka      | 56 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.vendor=Azul Systems, Inc.
zookeeper  | [2025-06-17 05:57:19,554] INFO Reading configuration from: /etc/kafka/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
kafka      | 56 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.home=/usr/lib/jvm/zulu11-ca
kafka      | 56 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.class.path=/usr/share/java/cp-base-new/zstd-jni-1.5.2-1.jar:/usr/share/java/cp-base-new/jolokia-jvm-1.7.1.jar:/usr/share/java/cp-base-new/argparse4j-0.7.0.jar:/usr/share/java/cp-base-new/kafka-server-common-7.2.1-ccs.jar:/usr/share/java/cp-base-new/jackson-databind-2.13.2.2.jar:/usr/share/java/cp-base-new/audience-annotations-0.5.0.jar:/usr/share/java/cp-base-new/scala-java8-compat_2.13-1.0.2.jar:/usr/share/java/cp-base-new/common-utils-7.2.1.jar:/usr/share/java/cp-base-new/re2j-1.6.jar:/usr/share/java/cp-base-new/jose4j-0.7.9.jar:/usr/share/java/cp-base-new/jolokia-core-1.7.1.jar:/usr/share/java/cp-base-new/commons-cli-1.4.jar:/usr/share/java/cp-base-new/reload4j-1.2.19.jar:/usr/share/java/cp-base-new/kafka-raft-7.2.1-ccs.jar:/usr/share/java/cp-base-new/jackson-dataformat-yaml-2.13.2.jar:/usr/share/java/cp-base-new/json-simple-1.1.1.jar:/usr/share/java/cp-base-new/jackson-annotations-2.13.2.jar:/usr/share/java/cp-base-new/snakeyaml-1.30.jar:/usr/share/java/cp-base-new/lz4-java-1.8.0.jar:/usr/share/java/cp-base-new/metrics-core-2.2.0.jar:/usr/share/java/cp-base-new/kafka_2.13-7.2.1-ccs.jar:/usr/share/java/cp-base-new/slf4j-api-1.7.36.jar:/usr/share/java/cp-base-new/scala-reflect-2.13.5.jar:/usr/share/java/cp-base-new/slf4j-reload4j-1.7.36.jar:/usr/share/java/cp-base-new/jmx_prometheus_javaagent-0.14.0.jar:/usr/share/java/cp-base-new/kafka-metadata-7.2.1-ccs.jar:/usr/share/java/cp-base-new/gson-2.9.0.jar:/usr/share/java/cp-base-new/minimal-json-0.9.5.jar:/usr/share/java/cp-base-new/scala-logging_2.13-3.9.4.jar:/usr/share/java/cp-base-new/logredactor-1.0.10.jar:/usr/share/java/cp-base-new/scala-library-2.13.5.jar:/usr/share/java/cp-base-new/metrics-core-4.1.12.1.jar:/usr/share/java/cp-base-new/scala-collection-compat_2.13-2.6.0.jar:/usr/share/java/cp-base-new/jopt-simple-5.0.4.jar:/usr/share/java/cp-base-new/kafka-storage-7.2.1-ccs.jar:/usr/share/java/cp-base-new/jackson-dataformat-csv-2.13.2.jar:/usr/share/java/cp-base-new/zookeeper-3.6.3.jar:/usr/share/java/cp-base-new/slf4j-simple-1.7.36.jar:/usr/share/java/cp-base-new/jackson-module-scala_2.13-2.13.2.jar:/usr/share/java/cp-base-new/snappy-java-1.1.8.4.jar:/usr/share/java/cp-base-new/kafka-storage-api-7.2.1-ccs.jar:/usr/share/java/cp-base-new/disk-usage-agent-7.2.1.jar:/usr/share/java/cp-base-new/paranamer-2.8.jar:/usr/share/java/cp-base-new/jackson-datatype-jdk8-2.13.2.jar:/usr/share/java/cp-base-new/kafka-clients-7.2.1-ccs.jar:/usr/share/java/cp-base-new/zookeeper-jute-3.6.3.jar:/usr/share/java/cp-base-new/jackson-core-2.13.2.jar:/usr/share/java/cp-base-new/logredactor-metrics-1.0.10.jar:/usr/share/java/cp-base-new/utility-belt-7.2.1.jar
kafka      | 57 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib
zookeeper  | [2025-06-17 05:57:19,590] INFO clientPortAddress is 0.0.0.0:2181 (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
kafka      | 57 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.io.tmpdir=/tmp
zookeeper  | [2025-06-17 05:57:19,590] INFO secureClientPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
kafka      | 57 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.compiler=<NA>
zookeeper  | [2025-06-17 05:57:19,590] INFO observerMasterPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
kafka      | 58 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.name=Linux
zookeeper  | [2025-06-17 05:57:19,591] INFO metricsProvider.className is org.apache.zookeeper.metrics.impl.DefaultMetricsProvider (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
kafka      | 58 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.arch=amd64
zookeeper  | [2025-06-17 05:57:19,597] INFO autopurge.snapRetainCount set to 3 (org.apache.zookeeper.server.DatadirCleanupManager)
kafka      | 59 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.version=5.15.167.4-microsoft-standard-WSL2
zookeeper  | [2025-06-17 05:57:19,598] INFO autopurge.purgeInterval set to 0 (org.apache.zookeeper.server.DatadirCleanupManager)
kafka      | 59 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:user.name=appuser
zookeeper  | [2025-06-17 05:57:19,598] INFO Purge task is not scheduled. (org.apache.zookeeper.server.DatadirCleanupManager)
kafka      | 59 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:user.home=/home/appuser
zookeeper  | [2025-06-17 05:57:19,598] WARN Either no config or no quorum defined in config, running in standalone mode (org.apache.zookeeper.server.quorum.QuorumPeerMain)
kafka      | 59 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:user.dir=/home/appuser
zookeeper  | [2025-06-17 05:57:19,602] INFO Log4j 1.2 jmx support not found; jmx disabled. (org.apache.zookeeper.jmx.ManagedUtil)
kafka      | 59 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.memory.free=51MB
zookeeper  | [2025-06-17 05:57:19,604] INFO Reading configuration from: /etc/kafka/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
kafka      | 59 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.memory.max=914MB
zookeeper  | [2025-06-17 05:57:19,606] INFO clientPortAddress is 0.0.0.0:2181 (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
kafka      | 59 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.memory.total=58MB
zookeeper  | [2025-06-17 05:57:19,606] INFO secureClientPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
kafka      | 70 [main] INFO org.apache.zookeeper.ZooKeeper  - Initiating client connection, connectString=zookeeper:2181 sessionTimeout=40000 watcher=io.confluent.admin.utils.ZookeeperConnectionWatcher@396e2f39
zookeeper  | [2025-06-17 05:57:19,606] INFO observerMasterPort is not set (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
kafka      | 94 [main] INFO org.apache.zookeeper.common.X509Util  - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
zookeeper  | [2025-06-17 05:57:19,606] INFO metricsProvider.className is org.apache.zookeeper.metrics.impl.DefaultMetricsProvider (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
kafka      | 118 [main] INFO org.apache.zookeeper.ClientCnxnSocket  - jute.maxbuffer value is 1048575 Bytes
zookeeper  | [2025-06-17 05:57:19,606] INFO Starting server (org.apache.zookeeper.server.ZooKeeperServerMain)
kafka      | 140 [main] INFO org.apache.zookeeper.ClientCnxn  - zookeeper.request.timeout value is 0. feature enabled=false
zookeeper  | [2025-06-17 05:57:19,661] INFO ServerMetrics initialized with provider org.apache.zookeeper.metrics.impl.DefaultMetricsProvider@69fb6037 (org.apache.zookeeper.server.ServerMetrics)
kafka      | 195 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.SaslServerPrincipal  - Canonicalized address to zookeeper.kafka-network
zookeeper  | [2025-06-17 05:57:19,674] INFO zookeeper.snapshot.trust.empty : false (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
kafka      | 204 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Opening socket connection to server zookeeper/172.20.0.2:2181.
zookeeper  | [2025-06-17 05:57:19,707] INFO  (org.apache.zookeeper.server.ZooKeeperServer)
kafka      | 205 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - SASL config status: Will not attempt to authenticate using SASL (unknown error)
zookeeper  | [2025-06-17 05:57:19,707] INFO   ______                  _                                           (org.apache.zookeeper.server.ZooKeeperServer)
kafka      | 227 [main-SendThread(zookeeper:2181)] WARN org.apache.zookeeper.ClientCnxn  - Session 0x0 for sever zookeeper/172.20.0.2:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
zookeeper  | [2025-06-17 05:57:19,707] INFO  |___  /                 | |                                          (org.apache.zookeeper.server.ZooKeeperServer)
kafka      | java.net.ConnectException: Connection refused
zookeeper  | [2025-06-17 05:57:19,707] INFO     / /    ___     ___   | | __   ___    ___   _ __     ___   _ __    (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at java.base/sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
zookeeper  | [2025-06-17 05:57:19,707] INFO    / /    / _ \   / _ \  | |/ /  / _ \  / _ \ | '_ \   / _ \ | '__| (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:777)
zookeeper  | [2025-06-17 05:57:19,707] INFO   / /__  | (_) | | (_) | |   <  |  __/ |  __/ | |_) | |  __/ | |     (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
zookeeper  | [2025-06-17 05:57:19,707] INFO  /_____|  \___/   \___/  |_|\_\  \___|  \___| | .__/   \___| |_| (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1290)
zookeeper  | [2025-06-17 05:57:19,707] INFO                                               | |                      (org.apache.zookeeper.server.ZooKeeperServer)
kafka      | 237 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.ClientCnxnSocketNIO  - Ignoring exception during shutdown input
zookeeper  | [2025-06-17 05:57:19,707] INFO                                               |_|                      (org.apache.zookeeper.server.ZooKeeperServer)
kafka      | java.nio.channels.ClosedChannelException
zookeeper  | [2025-06-17 05:57:19,708] INFO  (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at java.base/sun.nio.ch.SocketChannelImpl.ensureOpen(SocketChannelImpl.java:160)
zookeeper  | [2025-06-17 05:57:19,712] INFO Server environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at java.base/sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:913)
zookeeper  | [2025-06-17 05:57:19,712] INFO Server environment:host.name=zookeeper (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at java.base/sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:398)
zookeeper  | [2025-06-17 05:57:19,712] INFO Server environment:java.version=11.0.15 (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:193)
zookeeper  | [2025-06-17 05:57:19,712] INFO Server environment:java.vendor=Azul Systems, Inc. (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1390)
zookeeper  | [2025-06-17 05:57:19,712] INFO Server environment:java.home=/usr/lib/jvm/zulu11-ca (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at org.apache.zookeeper.ClientCnxn$SendThread.cleanAndNotifyState(ClientCnxn.java:1331)
zookeeper  | [2025-06-17 05:57:19,712] INFO Server environment:java.class.path=/usr/bin/../share/java/kafka/zstd-jni-1.5.2-1.jar:/usr/bin/../share/java/kafka/argparse4j-0.7.0.jar:/usr/bin/../share/java/kafka/maven-artifact-3.8.4.jar:/usr/bin/../share/java/kafka/netty-transport-native-unix-common-4.1.73.Final.jar:/usr/bin/../share/java/kafka/kafka-server-common-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jackson-databind-2.13.2.2.jar:/usr/bin/../share/java/kafka/connect-runtime-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/audience-annotations-0.5.0.jar:/usr/bin/../share/java/kafka/scala-java8-compat_2.13-1.0.2.jar:/usr/bin/../share/java/kafka/commons-lang3-3.8.1.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-2.34.jar:/usr/bin/../share/java/kafka/javassist-3.27.0-GA.jar:/usr/bin/../share/java/kafka/connect-mirror-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/netty-buffer-4.1.73.Final.jar:/usr/bin/../share/java/kafka/kafka.jar:/usr/bin/../share/java/kafka/kafka-log4j-appender-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jose4j-0.7.9.jar:/usr/bin/../share/java/kafka/netty-resolver-4.1.73.Final.jar:/usr/bin/../share/java/kafka/commons-cli-1.4.jar:/usr/bin/../share/java/kafka/connect-mirror-client-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jersey-client-2.34.jar:/usr/bin/../share/java/kafka/netty-transport-native-epoll-4.1.73.Final.jar:/usr/bin/../share/java/kafka/reload4j-1.2.19.jar:/usr/bin/../share/java/kafka/kafka-raft-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jakarta.annotation-api-1.3.5.jar:/usr/bin/../share/java/kafka/osgi-resource-locator-1.0.3.jar:/usr/bin/../share/java/kafka/hk2-api-2.6.1.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-base-2.13.2.jar:/usr/bin/../share/java/kafka/jackson-annotations-2.13.2.jar:/usr/bin/../share/java/kafka/netty-transport-4.1.73.Final.jar:/usr/bin/../share/java/kafka/lz4-java-1.8.0.jar:/usr/bin/../share/java/kafka/metrics-core-2.2.0.jar:/usr/bin/../share/java/kafka/kafka_2.13-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jetty-servlets-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/netty-transport-classes-epoll-4.1.73.Final.jar:/usr/bin/../share/java/kafka/slf4j-api-1.7.36.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-json-provider-2.13.2.jar:/usr/bin/../share/java/kafka/jaxb-api-2.3.0.jar:/usr/bin/../share/java/kafka/jakarta.activation-api-1.2.2.jar:/usr/bin/../share/java/kafka/connect-api-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jetty-client-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jakarta.inject-2.6.1.jar:/usr/bin/../share/java/kafka/slf4j-reload4j-1.7.36.jar:/usr/bin/../share/java/kafka/jackson-module-jaxb-annotations-2.13.2.jar:/usr/bin/../share/java/kafka/netty-codec-4.1.73.Final.jar:/usr/bin/../share/java/kafka/kafka-metadata-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jetty-http-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/kafka-tools-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/scala-logging_2.13-3.9.4.jar:/usr/bin/../share/java/kafka/netty-tcnative-classes-2.0.46.Final.jar:/usr/bin/../share/java/kafka/activation-1.1.1.jar:/usr/bin/../share/java/kafka/trogdor-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-core-2.34.jar:/usr/bin/../share/java/kafka/kafka-streams-test-utils-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/metrics-core-4.1.12.1.jar:/usr/bin/../share/java/kafka/netty-common-4.1.73.Final.jar:/usr/bin/../share/java/kafka/scala-collection-compat_2.13-2.6.0.jar:/usr/bin/../share/java/kafka/connect-basic-auth-extension-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jopt-simple-5.0.4.jar:/usr/bin/../share/java/kafka/kafka-storage-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-shell-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-scala_2.13-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jetty-io-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/hk2-utils-2.6.1.jar:/usr/bin/../share/java/kafka/reflections-0.9.12.jar:/usr/bin/../share/java/kafka/javax.ws.rs-api-2.1.1.jar:/usr/bin/../share/java/kafka/jline-3.21.0.jar:/usr/bin/../share/java/kafka/hk2-locator-2.6.1.jar:/usr/bin/../share/java/kafka/jackson-dataformat-csv-2.13.2.jar:/usr/bin/../share/java/kafka/scala-reflect-2.13.8.jar:/usr/bin/../share/java/kafka/zookeeper-3.6.3.jar:/usr/bin/../share/java/kafka/jetty-continuation-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/javax.servlet-api-3.1.0.jar:/usr/bin/../share/java/kafka/jetty-util-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jackson-module-scala_2.13-2.13.2.jar:/usr/bin/../share/java/kafka/kafka-streams-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/snappy-java-1.1.8.4.jar:/usr/bin/../share/java/kafka/kafka-streams-examples-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jakarta.ws.rs-api-2.1.6.jar:/usr/bin/../share/java/kafka/jakarta.xml.bind-api-2.3.3.jar:/usr/bin/../share/java/kafka/kafka-storage-api-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/scala-library-2.13.8.jar:/usr/bin/../share/java/kafka/jetty-security-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jersey-server-2.34.jar:/usr/bin/../share/java/kafka/jetty-servlet-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/plexus-utils-3.3.0.jar:/usr/bin/../share/java/kafka/rocksdbjni-6.29.4.1.jar:/usr/bin/../share/java/kafka/aopalliance-repackaged-2.6.1.jar:/usr/bin/../share/java/kafka/jakarta.validation-api-2.0.2.jar:/usr/bin/../share/java/kafka/paranamer-2.8.jar:/usr/bin/../share/java/kafka/jackson-datatype-jdk8-2.13.2.jar:/usr/bin/../share/java/kafka/jersey-hk2-2.34.jar:/usr/bin/../share/java/kafka/connect-transforms-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-clients-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/netty-handler-4.1.73.Final.jar:/usr/bin/../share/java/kafka/zookeeper-jute-3.6.3.jar:/usr/bin/../share/java/kafka/jackson-core-2.13.2.jar:/usr/bin/../share/java/kafka/jetty-server-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jersey-common-2.34.jar:/usr/bin/../share/java/kafka/jetty-util-ajax-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/connect-json-7.2.1-ccs.jar:/usr/bin/../share/java/confluent-telemetry/* (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1309)
zookeeper  | [2025-06-17 05:57:19,713] INFO Server environment:java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib (org.apache.zookeeper.server.ZooKeeperServer)
kafka      | 238 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.ClientCnxnSocketNIO  - Ignoring exception during shutdown output
zookeeper  | [2025-06-17 05:57:19,713] INFO Server environment:java.io.tmpdir=/tmp (org.apache.zookeeper.server.ZooKeeperServer)
kafka      | java.nio.channels.ClosedChannelException
zookeeper  | [2025-06-17 05:57:19,713] INFO Server environment:java.compiler=<NA> (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at java.base/sun.nio.ch.SocketChannelImpl.ensureOpen(SocketChannelImpl.java:160)
zookeeper  | [2025-06-17 05:57:19,713] INFO Server environment:os.name=Linux (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at java.base/sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:930)
zookeeper  | [2025-06-17 05:57:19,713] INFO Server environment:os.arch=amd64 (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at java.base/sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:406)
zookeeper  | [2025-06-17 05:57:19,713] INFO Server environment:os.version=5.15.167.4-microsoft-standard-WSL2 (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:198)
zookeeper  | [2025-06-17 05:57:19,713] INFO Server environment:user.name=appuser (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1390)
zookeeper  | [2025-06-17 05:57:19,713] INFO Server environment:user.home=/home/appuser (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at org.apache.zookeeper.ClientCnxn$SendThread.cleanAndNotifyState(ClientCnxn.java:1331)
zookeeper  | [2025-06-17 05:57:19,713] INFO Server environment:user.dir=/home/appuser (org.apache.zookeeper.server.ZooKeeperServer)
kafka      |   at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1309)
zookeeper  | [2025-06-17 05:57:19,713] INFO Server environment:os.memory.free=493MB (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper  | [2025-06-17 05:57:19,713] INFO Server environment:os.memory.max=512MB (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper  | [2025-06-17 05:57:19,713] INFO Server environment:os.memory.total=512MB (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper  | [2025-06-17 05:57:19,714] INFO zookeeper.enableEagerACLCheck = false (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper  | [2025-06-17 05:57:19,714] INFO zookeeper.digest.enabled = true (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper  | [2025-06-17 05:57:19,714] INFO zookeeper.closeSessionTxn.enabled = true (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper  | [2025-06-17 05:57:19,714] INFO zookeeper.flushDelay=0 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper  | [2025-06-17 05:57:19,714] INFO zookeeper.maxWriteQueuePollTime=0 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper  | [2025-06-17 05:57:19,715] INFO zookeeper.maxBatchSize=1000 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper  | [2025-06-17 05:57:19,715] INFO zookeeper.intBufferStartingSizeBytes = 1024 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper  | [2025-06-17 05:57:19,717] INFO Weighed connection throttling is disabled (org.apache.zookeeper.server.BlueThrottle)
zookeeper  | [2025-06-17 05:57:19,722] INFO minSessionTimeout set to 4000 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper  | [2025-06-17 05:57:19,722] INFO maxSessionTimeout set to 40000 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper  | [2025-06-17 05:57:19,725] INFO Response cache size is initialized with value 400. (org.apache.zookeeper.server.ResponseCache)
zookeeper  | [2025-06-17 05:57:19,726] INFO Response cache size is initialized with value 400. (org.apache.zookeeper.server.ResponseCache)
zookeeper  | [2025-06-17 05:57:19,728] INFO zookeeper.pathStats.slotCapacity = 60 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
zookeeper  | [2025-06-17 05:57:19,728] INFO zookeeper.pathStats.slotDuration = 15 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
zookeeper  | [2025-06-17 05:57:19,728] INFO zookeeper.pathStats.maxDepth = 6 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
zookeeper  | [2025-06-17 05:57:19,728] INFO zookeeper.pathStats.initialDelay = 5 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
zookeeper  | [2025-06-17 05:57:19,728] INFO zookeeper.pathStats.delay = 5 (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
zookeeper  | [2025-06-17 05:57:19,728] INFO zookeeper.pathStats.enabled = false (org.apache.zookeeper.server.util.RequestPathMetricsCollector)
zookeeper  | [2025-06-17 05:57:19,734] INFO The max bytes for all large requests are set to 104857600 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper  | [2025-06-17 05:57:19,735] INFO The large request threshold is set to -1 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper  | [2025-06-17 05:57:19,735] INFO Created server with tickTime 2000 minSessionTimeout 4000 maxSessionTimeout 40000 clientPortListenBacklog -1 datadir /var/lib/zookeeper/log/version-2 snapdir /var/lib/zookeeper/data/version-2 (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper  | [2025-06-17 05:57:19,777] INFO Logging initialized @1230ms to org.eclipse.jetty.util.log.Slf4jLog (org.eclipse.jetty.util.log)
zookeeper  | [2025-06-17 05:57:19,923] WARN o.e.j.s.ServletContextHandler@4b520ea8{/,null,STOPPED} contextPath ends with /* (org.eclipse.jetty.server.handler.ContextHandler)
zookeeper  | [2025-06-17 05:57:19,923] WARN Empty contextPath (org.eclipse.jetty.server.handler.ContextHandler)
zookeeper  | [2025-06-17 05:57:19,968] INFO jetty-9.4.44.v20210927; built: 2021-09-27T23:02:44.612Z; git: 8da83308eeca865e495e53ef315a249d63ba9332; jvm 11.0.15+10-LTS (org.eclipse.jetty.server.Server)
zookeeper  | [2025-06-17 05:57:20,051] INFO DefaultSessionIdManager workerName=node0 (org.eclipse.jetty.server.session)
zookeeper  | [2025-06-17 05:57:20,052] INFO No SessionScavenger set, using defaults (org.eclipse.jetty.server.session)
zookeeper  | [2025-06-17 05:57:20,055] INFO node0 Scavenging every 600000ms (org.eclipse.jetty.server.session)
zookeeper  | [2025-06-17 05:57:20,069] WARN ServletContext@o.e.j.s.ServletContextHandler@4b520ea8{/,null,STARTING} has uncovered http methods for path: /* (org.eclipse.jetty.security.SecurityHandler)
zookeeper  | [2025-06-17 05:57:20,099] INFO Started o.e.j.s.ServletContextHandler@4b520ea8{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
zookeeper  | [2025-06-17 05:57:20,140] INFO Started ServerConnector@5524cca1{HTTP/1.1, (http/1.1)}{0.0.0.0:8080} (org.eclipse.jetty.server.AbstractConnector)
zookeeper  | [2025-06-17 05:57:20,141] INFO Started @1595ms (org.eclipse.jetty.server.Server)
zookeeper  | [2025-06-17 05:57:20,142] INFO Started AdminServer on address 0.0.0.0, port 8080 and command URL /commands (org.apache.zookeeper.server.admin.JettyAdminServer)
zookeeper  | [2025-06-17 05:57:20,156] INFO Using org.apache.zookeeper.server.NIOServerCnxnFactory as server connection factory (org.apache.zookeeper.server.ServerCnxnFactory)
zookeeper  | [2025-06-17 05:57:20,158] WARN maxCnxns is not configured, using default value 0. (org.apache.zookeeper.server.ServerCnxnFactory)
zookeeper  | [2025-06-17 05:57:20,162] INFO Configuring NIO connection handler with 10s sessionless connection timeout, 2 selector thread(s), 24 worker threads, and 64 kB direct buffers. (org.apache.zookeeper.server.NIOServerCnxnFactory)
zookeeper  | [2025-06-17 05:57:20,168] INFO binding to port 0.0.0.0/0.0.0.0:2181 (org.apache.zookeeper.server.NIOServerCnxnFactory)
zookeeper  | [2025-06-17 05:57:20,200] INFO Using org.apache.zookeeper.server.watch.WatchManager as watch manager (org.apache.zookeeper.server.watch.WatchManagerFactory)
zookeeper  | [2025-06-17 05:57:20,200] INFO Using org.apache.zookeeper.server.watch.WatchManager as watch manager (org.apache.zookeeper.server.watch.WatchManagerFactory)
zookeeper  | [2025-06-17 05:57:20,203] INFO zookeeper.snapshotSizeFactor = 0.33 (org.apache.zookeeper.server.ZKDatabase)
zookeeper  | [2025-06-17 05:57:20,204] INFO zookeeper.commitLogCount=500 (org.apache.zookeeper.server.ZKDatabase)
zookeeper  | [2025-06-17 05:57:20,219] INFO zookeeper.snapshot.compression.method = CHECKED (org.apache.zookeeper.server.persistence.SnapStream)
zookeeper  | [2025-06-17 05:57:20,219] INFO Snapshotting: 0x0 to /var/lib/zookeeper/data/version-2/snapshot.0 (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
zookeeper  | [2025-06-17 05:57:20,227] INFO Snapshot loaded in 23 ms, highest zxid is 0x0, digest is 1371985504 (org.apache.zookeeper.server.ZKDatabase)
zookeeper  | [2025-06-17 05:57:20,227] INFO Snapshotting: 0x0 to /var/lib/zookeeper/data/version-2/snapshot.0 (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
zookeeper  | [2025-06-17 05:57:20,228] INFO Snapshot taken in 1 ms (org.apache.zookeeper.server.ZooKeeperServer)
zookeeper  | [2025-06-17 05:57:20,245] INFO PrepRequestProcessor (sid:0) started, reconfigEnabled=false (org.apache.zookeeper.server.PrepRequestProcessor)
zookeeper  | [2025-06-17 05:57:20,247] INFO zookeeper.request_throttler.shutdownTimeout = 10000 (org.apache.zookeeper.server.RequestThrottler)
zookeeper  | [2025-06-17 05:57:20,274] INFO Using checkIntervalMs=60000 maxPerMinute=10000 maxNeverUsedIntervalMs=0 (org.apache.zookeeper.server.ContainerManager)
zookeeper  | [2025-06-17 05:57:20,276] INFO ZooKeeper audit is disabled. (org.apache.zookeeper.audit.ZKAuditProvider)
kafka      | 1345 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.SaslServerPrincipal  - Canonicalized address to zookeeper.kafka-network
kafka      | 1345 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Opening socket connection to server zookeeper/172.20.0.2:2181.
kafka      | 1345 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - SASL config status: Will not attempt to authenticate using SASL (unknown error)
kafka      | 1347 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Socket connection established, initiating session, client: /172.20.0.3:58020, server: zookeeper/172.20.0.2:2181
kafka      | 1353 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.ClientCnxn  - Session establishment request sent on zookeeper/172.20.0.2:2181
zookeeper  | [2025-06-17 05:57:20,839] INFO Creating new log file: log.1 (org.apache.zookeeper.server.persistence.FileTxnLog)
kafka      | 1395 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Session establishment complete on server zookeeper/172.20.0.2:2181, session id = 0x10000420e760000, negotiated timeout = 40000
kafka      | 1404 [main] DEBUG org.apache.zookeeper.ZooKeeper  - Closing session: 0x10000420e760000
kafka      | 1405 [main] DEBUG org.apache.zookeeper.ClientCnxn  - Closing client for session: 0x10000420e760000
kafka      | 1422 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.ClientCnxn  - Reading reply session id: 0x10000420e760000, packet:: clientPath:null serverPath:null finished:false header:: 1,-11  replyHeader:: 1,2,0  request:: null response:: null
kafka      | 1423 [main-SendThread(zookeeper:2181)] WARN org.apache.zookeeper.ClientCnxn  - An exception was thrown while closing send thread for session 0x10000420e760000.
kafka      | EndOfStreamException: Unable to read additional data from server sessionid 0x10000420e760000, likely server has closed socket
kafka      |   at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:77)
kafka      |   at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:350)
kafka      |   at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1290)
kafka      | 1427 [main] DEBUG org.apache.zookeeper.ClientCnxn  - Disconnecting client for session: 0x10000420e760000
kafka      | 1536 [main] INFO org.apache.zookeeper.ZooKeeper  - Session: 0x10000420e760000 closed
kafka      | 1536 [main-EventThread] INFO org.apache.zookeeper.ClientCnxn  - EventThread shut down for session: 0x10000420e760000
kafka      | ===> Launching ...
kafka      | ===> Launching kafka ...
connect    | ===> Running preflight checks ...
connect    | ===> Check if Kafka is healthy ...
kafka      | [2025-06-17 05:57:21,278] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
kafka      | [2025-06-17 05:57:20,394] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
kafka      | [2025-06-17 05:57:20,521] INFO Registered signal handlers for TERM, INT, HUP (org.apache.kafka.common.utils.LoggingSignalHandler)
kafka      | [2025-06-17 05:57:20,531] INFO starting (kafka.server.KafkaServer)
kafka      | [2025-06-17 05:57:20,532] INFO Connecting to zookeeper on zookeeper:2181 (kafka.server.KafkaServer)
kafka      | [2025-06-17 05:57:20,554] INFO [ZooKeeperClient Kafka server] Initializing a new session to zookeeper:2181. (kafka.zookeeper.ZooKeeperClient)
connect    | SLF4J: Class path contains multiple SLF4J bindings.
connect    | SLF4J: Found binding in [jar:file:/usr/share/java/cp-base-new/slf4j-reload4j-1.7.36.jar!/org/slf4j/impl/StaticLoggerBinder.class]
kafka      | [2025-06-17 05:57:20,571] INFO Client environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT (org.apache.zookeeper.ZooKeeper)
connect    | SLF4J: Found binding in [jar:file:/usr/share/java/cp-base-new/slf4j-simple-1.7.36.jar!/org/slf4j/impl/StaticLoggerBinder.class]
kafka      | [2025-06-17 05:57:20,571] INFO Client environment:host.name=kafka (org.apache.zookeeper.ZooKeeper)
connect    | SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
kafka      | [2025-06-17 05:57:20,571] INFO Client environment:java.version=11.0.15 (org.apache.zookeeper.ZooKeeper)
kafka      | [2025-06-17 05:57:20,571] INFO Client environment:java.vendor=Azul Systems, Inc. (org.apache.zookeeper.ZooKeeper)
connect    | SLF4J: Actual binding is of type [org.slf4j.impl.Reload4jLoggerFactory]
kafka      | [2025-06-17 05:57:20,571] INFO Client environment:java.home=/usr/lib/jvm/zulu11-ca (org.apache.zookeeper.ZooKeeper)
kafka      | [2025-06-17 05:57:20,571] INFO Client environment:java.class.path=/usr/bin/../share/java/kafka/zstd-jni-1.5.2-1.jar:/usr/bin/../share/java/kafka/argparse4j-0.7.0.jar:/usr/bin/../share/java/kafka/maven-artifact-3.8.4.jar:/usr/bin/../share/java/kafka/netty-transport-native-unix-common-4.1.73.Final.jar:/usr/bin/../share/java/kafka/kafka-server-common-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jackson-databind-2.13.2.2.jar:/usr/bin/../share/java/kafka/connect-runtime-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/audience-annotations-0.5.0.jar:/usr/bin/../share/java/kafka/scala-java8-compat_2.13-1.0.2.jar:/usr/bin/../share/java/kafka/commons-lang3-3.8.1.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-2.34.jar:/usr/bin/../share/java/kafka/javassist-3.27.0-GA.jar:/usr/bin/../share/java/kafka/connect-mirror-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/netty-buffer-4.1.73.Final.jar:/usr/bin/../share/java/kafka/kafka.jar:/usr/bin/../share/java/kafka/kafka-log4j-appender-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jose4j-0.7.9.jar:/usr/bin/../share/java/kafka/netty-resolver-4.1.73.Final.jar:/usr/bin/../share/java/kafka/commons-cli-1.4.jar:/usr/bin/../share/java/kafka/connect-mirror-client-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jersey-client-2.34.jar:/usr/bin/../share/java/kafka/netty-transport-native-epoll-4.1.73.Final.jar:/usr/bin/../share/java/kafka/reload4j-1.2.19.jar:/usr/bin/../share/java/kafka/kafka-raft-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jakarta.annotation-api-1.3.5.jar:/usr/bin/../share/java/kafka/osgi-resource-locator-1.0.3.jar:/usr/bin/../share/java/kafka/hk2-api-2.6.1.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-base-2.13.2.jar:/usr/bin/../share/java/kafka/jackson-annotations-2.13.2.jar:/usr/bin/../share/java/kafka/netty-transport-4.1.73.Final.jar:/usr/bin/../share/java/kafka/lz4-java-1.8.0.jar:/usr/bin/../share/java/kafka/metrics-core-2.2.0.jar:/usr/bin/../share/java/kafka/kafka_2.13-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jetty-servlets-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/netty-transport-classes-epoll-4.1.73.Final.jar:/usr/bin/../share/java/kafka/slf4j-api-1.7.36.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-json-provider-2.13.2.jar:/usr/bin/../share/java/kafka/jaxb-api-2.3.0.jar:/usr/bin/../share/java/kafka/jakarta.activation-api-1.2.2.jar:/usr/bin/../share/java/kafka/connect-api-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jetty-client-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jakarta.inject-2.6.1.jar:/usr/bin/../share/java/kafka/slf4j-reload4j-1.7.36.jar:/usr/bin/../share/java/kafka/jackson-module-jaxb-annotations-2.13.2.jar:/usr/bin/../share/java/kafka/netty-codec-4.1.73.Final.jar:/usr/bin/../share/java/kafka/kafka-metadata-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jetty-http-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/kafka-tools-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/scala-logging_2.13-3.9.4.jar:/usr/bin/../share/java/kafka/netty-tcnative-classes-2.0.46.Final.jar:/usr/bin/../share/java/kafka/activation-1.1.1.jar:/usr/bin/../share/java/kafka/trogdor-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-core-2.34.jar:/usr/bin/../share/java/kafka/kafka-streams-test-utils-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/metrics-core-4.1.12.1.jar:/usr/bin/../share/java/kafka/netty-common-4.1.73.Final.jar:/usr/bin/../share/java/kafka/scala-collection-compat_2.13-2.6.0.jar:/usr/bin/../share/java/kafka/connect-basic-auth-extension-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jopt-simple-5.0.4.jar:/usr/bin/../share/java/kafka/kafka-storage-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-shell-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-scala_2.13-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jetty-io-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/hk2-utils-2.6.1.jar:/usr/bin/../share/java/kafka/reflections-0.9.12.jar:/usr/bin/../share/java/kafka/javax.ws.rs-api-2.1.1.jar:/usr/bin/../share/java/kafka/jline-3.21.0.jar:/usr/bin/../share/java/kafka/hk2-locator-2.6.1.jar:/usr/bin/../share/java/kafka/jackson-dataformat-csv-2.13.2.jar:/usr/bin/../share/java/kafka/scala-reflect-2.13.8.jar:/usr/bin/../share/java/kafka/zookeeper-3.6.3.jar:/usr/bin/../share/java/kafka/jetty-continuation-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/javax.servlet-api-3.1.0.jar:/usr/bin/../share/java/kafka/jetty-util-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jackson-module-scala_2.13-2.13.2.jar:/usr/bin/../share/java/kafka/kafka-streams-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/snappy-java-1.1.8.4.jar:/usr/bin/../share/java/kafka/kafka-streams-examples-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jakarta.ws.rs-api-2.1.6.jar:/usr/bin/../share/java/kafka/jakarta.xml.bind-api-2.3.3.jar:/usr/bin/../share/java/kafka/kafka-storage-api-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/scala-library-2.13.8.jar:/usr/bin/../share/java/kafka/jetty-security-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jersey-server-2.34.jar:/usr/bin/../share/java/kafka/jetty-servlet-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/plexus-utils-3.3.0.jar:/usr/bin/../share/java/kafka/rocksdbjni-6.29.4.1.jar:/usr/bin/../share/java/kafka/aopalliance-repackaged-2.6.1.jar:/usr/bin/../share/java/kafka/jakarta.validation-api-2.0.2.jar:/usr/bin/../share/java/kafka/paranamer-2.8.jar:/usr/bin/../share/java/kafka/jackson-datatype-jdk8-2.13.2.jar:/usr/bin/../share/java/kafka/jersey-hk2-2.34.jar:/usr/bin/../share/java/kafka/connect-transforms-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-clients-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/netty-handler-4.1.73.Final.jar:/usr/bin/../share/java/kafka/zookeeper-jute-3.6.3.jar:/usr/bin/../share/java/kafka/jackson-core-2.13.2.jar:/usr/bin/../share/java/kafka/jetty-server-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jersey-common-2.34.jar:/usr/bin/../share/java/kafka/jetty-util-ajax-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/connect-json-7.2.1-ccs.jar:/usr/bin/../share/java/confluent-telemetry/* (org.apache.zookeeper.ZooKeeper)
kafka      | [2025-06-17 05:57:20,571] INFO Client environment:java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
kafka      | [2025-06-17 05:57:20,571] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
kafka      | [2025-06-17 05:57:20,571] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
kafka      | [2025-06-17 05:57:20,571] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
kafka      | [2025-06-17 05:57:20,571] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
kafka      | [2025-06-17 05:57:20,571] INFO Client environment:os.version=5.15.167.4-microsoft-standard-WSL2 (org.apache.zookeeper.ZooKeeper)
kafka      | [2025-06-17 05:57:20,571] INFO Client environment:user.name=appuser (org.apache.zookeeper.ZooKeeper)
kafka      | [2025-06-17 05:57:20,572] INFO Client environment:user.home=/home/appuser (org.apache.zookeeper.ZooKeeper)
kafka      | [2025-06-17 05:57:20,572] INFO Client environment:user.dir=/home/appuser (org.apache.zookeeper.ZooKeeper)
kafka      | [2025-06-17 05:57:20,572] INFO Client environment:os.memory.free=1009MB (org.apache.zookeeper.ZooKeeper)
kafka      | [2025-06-17 05:57:20,572] INFO Client environment:os.memory.max=1024MB (org.apache.zookeeper.ZooKeeper)
kafka      | [2025-06-17 05:57:20,572] INFO Client environment:os.memory.total=1024MB (org.apache.zookeeper.ZooKeeper)
kafka      | [2025-06-17 05:57:20,576] INFO Initiating client connection, connectString=zookeeper:2181 sessionTimeout=18000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@17a1e4ca (org.apache.zookeeper.ZooKeeper)
connect    | 0 [main] DEBUG io.confluent.admin.utils.cli.KafkaReadyCommand  - Arguments Namespace(zookeeper_connect=null, min_expected_brokers=1, security_protocol=PLAINTEXT, config=null, bootstrap_servers=kafka:29092, timeout=40000).
kafka      | [2025-06-17 05:57:20,588] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
kafka      | [2025-06-17 05:57:20,596] INFO zookeeper.request.timeout value is 0. feature enabled=false (org.apache.zookeeper.ClientCnxn)
kafka      | [2025-06-17 05:57:20,604] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
kafka      | [2025-06-17 05:57:20,608] INFO Opening socket connection to server zookeeper/172.20.0.2:2181. (org.apache.zookeeper.ClientCnxn)
kafka      | [2025-06-17 05:57:20,623] INFO Socket connection established, initiating session, client: /172.20.0.3:58022, server: zookeeper/172.20.0.2:2181 (org.apache.zookeeper.ClientCnxn)
kafka      | [2025-06-17 05:57:20,643] INFO Session establishment complete on server zookeeper/172.20.0.2:2181, session id = 0x10000420e760001, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn)
kafka      | [2025-06-17 05:57:20,649] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
connect    | 99 [main] INFO org.apache.kafka.clients.admin.AdminClientConfig  - AdminClientConfig values:
connect    |   bootstrap.servers = [kafka:29092]
connect    |   client.dns.lookup = use_all_dns_ips
connect    |   client.id =
connect    |   connections.max.idle.ms = 300000
connect    |   default.api.timeout.ms = 60000
connect    |   metadata.max.age.ms = 300000
connect    |   metric.reporters = []
connect    |   metrics.num.samples = 2
connect    |   metrics.recording.level = INFO
connect    |   metrics.sample.window.ms = 30000
connect    |   receive.buffer.bytes = 65536
connect    |   reconnect.backoff.max.ms = 1000
connect    |   reconnect.backoff.ms = 50
kafka      | [2025-06-17 05:57:20,915] INFO [feature-zk-node-event-process-thread]: Starting (kafka.server.FinalizedFeatureChangeListener$ChangeNotificationProcessorThread)
connect    |   request.timeout.ms = 30000
connect    |   retries = 2147483647
kafka      | [2025-06-17 05:57:20,943] INFO Feature ZK node at path: /feature does not exist (kafka.server.FinalizedFeatureChangeListener)
connect    |   retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:20,944] INFO Cleared cache (kafka.server.FinalizedFeatureCache)
connect    |   sasl.client.callback.handler.class = null
connect    |   sasl.jaas.config = null
connect    |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
connect    |   sasl.kerberos.min.time.before.relogin = 60000
connect    |   sasl.kerberos.service.name = null
connect    |   sasl.kerberos.ticket.renew.jitter = 0.05
connect    |   sasl.kerberos.ticket.renew.window.factor = 0.8
connect    |   sasl.login.callback.handler.class = null
connect    |   sasl.login.class = null
connect    |   sasl.login.connect.timeout.ms = null
connect    |   sasl.login.read.timeout.ms = null
connect    |   sasl.login.refresh.buffer.seconds = 300
connect    |   sasl.login.refresh.min.period.seconds = 60
connect    |   sasl.login.refresh.window.factor = 0.8
connect    |   sasl.login.refresh.window.jitter = 0.05
connect    |   sasl.login.retry.backoff.max.ms = 10000
connect    |   sasl.login.retry.backoff.ms = 100
connect    |   sasl.mechanism = GSSAPI
connect    |   sasl.oauthbearer.clock.skew.seconds = 30
connect    |   sasl.oauthbearer.expected.audience = null
connect    |   sasl.oauthbearer.expected.issuer = null
connect    |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
connect    |   sasl.oauthbearer.jwks.endpoint.url = null
connect    |   sasl.oauthbearer.scope.claim.name = scope
connect    |   sasl.oauthbearer.sub.claim.name = sub
connect    |   sasl.oauthbearer.token.endpoint.url = null
connect    |   security.protocol = PLAINTEXT
connect    |   security.providers = null
connect    |   send.buffer.bytes = 131072
connect    |   socket.connection.setup.timeout.max.ms = 30000
connect    |   socket.connection.setup.timeout.ms = 10000
connect    |   ssl.cipher.suites = null
connect    |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
connect    |   ssl.endpoint.identification.algorithm = https
connect    |   ssl.engine.factory.class = null
connect    |   ssl.key.password = null
connect    |   ssl.keymanager.algorithm = SunX509
connect    |   ssl.keystore.certificate.chain = null
connect    |   ssl.keystore.key = null
connect    |   ssl.keystore.location = null
connect    |   ssl.keystore.password = null
connect    |   ssl.keystore.type = JKS
connect    |   ssl.protocol = TLSv1.3
connect    |   ssl.provider = null
connect    |   ssl.secure.random.implementation = null
connect    |   ssl.trustmanager.algorithm = PKIX
connect    |   ssl.truststore.certificates = null
kafka      | [2025-06-17 05:57:21,297] INFO Cluster ID = giJkw9-kTvOOXXJyYfUXQw (kafka.server.KafkaServer)
connect    |   ssl.truststore.location = null
kafka      | [2025-06-17 05:57:21,305] WARN No meta.properties file under dir /var/lib/kafka/data/meta.properties (kafka.server.BrokerMetadataCheckpoint)
connect    |   ssl.truststore.password = null
connect    |   ssl.truststore.type = JKS
connect    |
connect    | 192 [main] DEBUG org.apache.kafka.clients.admin.internals.AdminMetadataManager  - [AdminClient clientId=adminclient-1] Setting bootstrap cluster metadata Cluster(id = null, nodes = [kafka:29092 (id: -1 rack: null)], partitions = [], controller = null).
connect    | 566 [main] INFO org.apache.kafka.common.utils.AppInfoParser  - Kafka version: 7.2.1-ccs
connect    | 566 [main] INFO org.apache.kafka.common.utils.AppInfoParser  - Kafka commitId: 80334008361592c1
connect    | 566 [main] INFO org.apache.kafka.common.utils.AppInfoParser  - Kafka startTimeMs: 1750139841283
connect    | 574 [main] DEBUG org.apache.kafka.clients.admin.KafkaAdminClient  - [AdminClient clientId=adminclient-1] Kafka admin client initialized
connect    | 575 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.admin.KafkaAdminClient  - [AdminClient clientId=adminclient-1] Thread starting
connect    | 610 [main] DEBUG org.apache.kafka.clients.admin.KafkaAdminClient  - [AdminClient clientId=adminclient-1] Queueing Call(callName=listNodes, deadlineMs=1750139881320, tries=0, nextAllowedTryMs=0) with a timeout 30000 ms from now.
connect    | 615 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.ClientUtils  - Resolved host kafka as 172.20.0.3
connect    | 615 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Initiating connection to node kafka:29092 (id: -1 rack: null) using address kafka/172.20.0.3
kafka      | [2025-06-17 05:57:21,407] INFO KafkaConfig values:
connect    | 656 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.common.network.Selector  - [AdminClient clientId=adminclient-1] Connection with kafka/172.20.0.3 (channelId=-1) disconnected
kafka      |   advertised.listeners = PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
connect    | java.net.ConnectException: Connection refused
kafka      |   alter.config.policy.class.name = null
connect    |   at java.base/sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
kafka      |   alter.log.dirs.replication.quota.window.num = 11
connect    |   at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:777)
kafka      |   alter.log.dirs.replication.quota.window.size.seconds = 1
connect    |   at org.apache.kafka.common.network.PlaintextTransportLayer.finishConnect(PlaintextTransportLayer.java:50)
kafka      |   authorizer.class.name =
connect    |   at org.apache.kafka.common.network.KafkaChannel.finishConnect(KafkaChannel.java:224)
kafka      |   auto.create.topics.enable = true
connect    |   at org.apache.kafka.common.network.Selector.pollSelectionKeys(Selector.java:526)
kafka      |   auto.leader.rebalance.enable = true
connect    |   at org.apache.kafka.common.network.Selector.poll(Selector.java:481)
kafka      |   background.threads = 10
connect    |   at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:560)
kafka      |   broker.heartbeat.interval.ms = 2000
connect    |   at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.processRequests(KafkaAdminClient.java:1407)
kafka      |   broker.id = 1
connect    |   at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run(KafkaAdminClient.java:1338)
kafka      |   broker.id.generation.enable = true
connect    |   at java.base/java.lang.Thread.run(Thread.java:829)
kafka      |   broker.rack = null
connect    | 661 [kafka-admin-client-thread | adminclient-1] INFO org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Node -1 disconnected.
kafka      |   broker.session.timeout.ms = 9000
connect    | 667 [kafka-admin-client-thread | adminclient-1] WARN org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Connection to node -1 (kafka/172.20.0.3:29092) could not be established. Broker may not be available.
kafka      |   client.quota.callback.class = null
connect    | 773 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.ClientUtils  - Resolved host kafka as 172.20.0.3
kafka      |   compression.type = producer
connect    | 773 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Initiating connection to node kafka:29092 (id: -1 rack: null) using address kafka/172.20.0.3
kafka      |   connection.failed.authentication.delay.ms = 100
connect    | 774 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.common.network.Selector  - [AdminClient clientId=adminclient-1] Connection with kafka/172.20.0.3 (channelId=-1) disconnected
kafka      |   connections.max.idle.ms = 600000
connect    | java.net.ConnectException: Connection refused
kafka      |   connections.max.reauth.ms = 0
connect    |   at java.base/sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
kafka      |   control.plane.listener.name = null
connect    |   at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:777)
kafka      |   controlled.shutdown.enable = true
connect    |   at org.apache.kafka.common.network.PlaintextTransportLayer.finishConnect(PlaintextTransportLayer.java:50)
kafka      |   controlled.shutdown.max.retries = 3
connect    |   at org.apache.kafka.common.network.KafkaChannel.finishConnect(KafkaChannel.java:224)
kafka      |   controlled.shutdown.retry.backoff.ms = 5000
connect    |   at org.apache.kafka.common.network.Selector.pollSelectionKeys(Selector.java:526)
kafka      |   controller.listener.names = null
connect    |   at org.apache.kafka.common.network.Selector.poll(Selector.java:481)
kafka      |   controller.quorum.append.linger.ms = 25
connect    |   at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:560)
kafka      |   controller.quorum.election.backoff.max.ms = 1000
connect    |   at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.processRequests(KafkaAdminClient.java:1407)
kafka      |   controller.quorum.election.timeout.ms = 1000
connect    |   at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run(KafkaAdminClient.java:1338)
kafka      |   controller.quorum.fetch.timeout.ms = 2000
connect    |   at java.base/java.lang.Thread.run(Thread.java:829)
kafka      |   controller.quorum.request.timeout.ms = 2000
connect    | 775 [kafka-admin-client-thread | adminclient-1] INFO org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Node -1 disconnected.
kafka      |   controller.quorum.retry.backoff.ms = 20
connect    | 775 [kafka-admin-client-thread | adminclient-1] WARN org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Connection to node -1 (kafka/172.20.0.3:29092) could not be established. Broker may not be available.
kafka      |   controller.quorum.voters = []
connect    | 879 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.ClientUtils  - Resolved host kafka as 172.20.0.3
kafka      |   controller.quota.window.num = 11
connect    | 879 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Initiating connection to node kafka:29092 (id: -1 rack: null) using address kafka/172.20.0.3
kafka      |   controller.quota.window.size.seconds = 1
connect    | 880 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.common.network.Selector  - [AdminClient clientId=adminclient-1] Connection with kafka/172.20.0.3 (channelId=-1) disconnected
kafka      |   controller.socket.timeout.ms = 30000
connect    | java.net.ConnectException: Connection refused
kafka      |   create.topic.policy.class.name = null
connect    |   at java.base/sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
kafka      |   default.replication.factor = 1
connect    |   at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:777)
kafka      |   delegation.token.expiry.check.interval.ms = 3600000
connect    |   at org.apache.kafka.common.network.PlaintextTransportLayer.finishConnect(PlaintextTransportLayer.java:50)
kafka      |   delegation.token.expiry.time.ms = 86400000
connect    |   at org.apache.kafka.common.network.KafkaChannel.finishConnect(KafkaChannel.java:224)
kafka      |   delegation.token.master.key = null
connect    |   at org.apache.kafka.common.network.Selector.pollSelectionKeys(Selector.java:526)
kafka      |   delegation.token.max.lifetime.ms = 604800000
connect    |   at org.apache.kafka.common.network.Selector.poll(Selector.java:481)
kafka      |   delegation.token.secret.key = null
connect    |   at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:560)
kafka      |   delete.records.purgatory.purge.interval.requests = 1
connect    |   at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.processRequests(KafkaAdminClient.java:1407)
kafka      |   delete.topic.enable = true
connect    |   at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run(KafkaAdminClient.java:1338)
kafka      |   fetch.max.bytes = 57671680
connect    |   at java.base/java.lang.Thread.run(Thread.java:829)
kafka      |   fetch.purgatory.purge.interval.requests = 1000
connect    | 881 [kafka-admin-client-thread | adminclient-1] INFO org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Node -1 disconnected.
kafka      |   group.initial.rebalance.delay.ms = 0
connect    | 881 [kafka-admin-client-thread | adminclient-1] WARN org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Connection to node -1 (kafka/172.20.0.3:29092) could not be established. Broker may not be available.
kafka      |   group.max.session.timeout.ms = 1800000
connect    | 1184 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.ClientUtils  - Resolved host kafka as 172.20.0.3
kafka      |   group.max.size = 2147483647
connect    | 1184 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Initiating connection to node kafka:29092 (id: -1 rack: null) using address kafka/172.20.0.3
kafka      |   group.min.session.timeout.ms = 6000
connect    | 1186 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.common.network.Selector  - [AdminClient clientId=adminclient-1] Connection with kafka/172.20.0.3 (channelId=-1) disconnected
kafka      |   initial.broker.registration.timeout.ms = 60000
connect    | java.net.ConnectException: Connection refused
kafka      |   inter.broker.listener.name = null
connect    |   at java.base/sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
kafka      |   inter.broker.protocol.version = 3.2-IV0
connect    |   at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:777)
kafka      |   kafka.metrics.polling.interval.secs = 10
connect    |   at org.apache.kafka.common.network.PlaintextTransportLayer.finishConnect(PlaintextTransportLayer.java:50)
kafka      |   kafka.metrics.reporters = []
connect    |   at org.apache.kafka.common.network.KafkaChannel.finishConnect(KafkaChannel.java:224)
kafka      |   leader.imbalance.check.interval.seconds = 300
connect    |   at org.apache.kafka.common.network.Selector.pollSelectionKeys(Selector.java:526)
kafka      |   leader.imbalance.per.broker.percentage = 10
connect    |   at org.apache.kafka.common.network.Selector.poll(Selector.java:481)
kafka      |   listener.security.protocol.map = PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
connect    |   at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:560)
kafka      |   listeners = PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092
connect    |   at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.processRequests(KafkaAdminClient.java:1407)
kafka      |   log.cleaner.backoff.ms = 15000
connect    |   at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run(KafkaAdminClient.java:1338)
kafka      |   log.cleaner.dedupe.buffer.size = 134217728
connect    |   at java.base/java.lang.Thread.run(Thread.java:829)
kafka      |   log.cleaner.delete.retention.ms = 86400000
connect    | 1186 [kafka-admin-client-thread | adminclient-1] INFO org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Node -1 disconnected.
kafka      |   log.cleaner.enable = true
connect    | 1187 [kafka-admin-client-thread | adminclient-1] WARN org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Connection to node -1 (kafka/172.20.0.3:29092) could not be established. Broker may not be available.
kafka      |   log.cleaner.io.buffer.load.factor = 0.9
kafka      |   log.cleaner.io.buffer.size = 524288
kafka      |   log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
kafka      |   log.cleaner.max.compaction.lag.ms = 9223372036854775807
kafka      |   log.cleaner.min.cleanable.ratio = 0.5
kafka      |   log.cleaner.min.compaction.lag.ms = 0
kafka      |   log.cleaner.threads = 1
kafka      |   log.cleanup.policy = [delete]
kafka      |   log.dir = /tmp/kafka-logs
kafka      |   log.dirs = /var/lib/kafka/data
kafka      |   log.flush.interval.messages = 9223372036854775807
kafka      |   log.flush.interval.ms = null
kafka      |   log.flush.offset.checkpoint.interval.ms = 60000
kafka      |   log.flush.scheduler.interval.ms = 9223372036854775807
kafka      |   log.flush.start.offset.checkpoint.interval.ms = 60000
kafka      |   log.index.interval.bytes = 4096
kafka      |   log.index.size.max.bytes = 10485760
kafka      |   log.message.downconversion.enable = true
kafka      |   log.message.format.version = 3.0-IV1
kafka      |   log.message.timestamp.difference.max.ms = 9223372036854775807
kafka      |   log.message.timestamp.type = CreateTime
kafka      |   log.preallocate = false
kafka      |   log.retention.bytes = -1
kafka      |   log.retention.check.interval.ms = 300000
kafka      |   log.retention.hours = 168
kafka      |   log.retention.minutes = null
kafka      |   log.retention.ms = null
kafka      |   log.roll.hours = 168
kafka      |   log.roll.jitter.hours = 0
connect    | 1591 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.ClientUtils  - Resolved host kafka as 172.20.0.3
kafka      |   log.roll.jitter.ms = null
connect    | 1592 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Initiating connection to node kafka:29092 (id: -1 rack: null) using address kafka/172.20.0.3
kafka      |   log.roll.ms = null
connect    | 1593 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.common.network.Selector  - [AdminClient clientId=adminclient-1] Connection with kafka/172.20.0.3 (channelId=-1) disconnected
kafka      |   log.segment.bytes = 1073741824
connect    | java.net.ConnectException: Connection refused
kafka      |   log.segment.delete.delay.ms = 60000
connect    |   at java.base/sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
kafka      |   max.connection.creation.rate = 2147483647
connect    |   at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:777)
kafka      |   max.connections = 2147483647
connect    |   at org.apache.kafka.common.network.PlaintextTransportLayer.finishConnect(PlaintextTransportLayer.java:50)
kafka      |   max.connections.per.ip = 2147483647
connect    |   at org.apache.kafka.common.network.KafkaChannel.finishConnect(KafkaChannel.java:224)
kafka      |   max.connections.per.ip.overrides =
connect    |   at org.apache.kafka.common.network.Selector.pollSelectionKeys(Selector.java:526)
kafka      |   max.incremental.fetch.session.cache.slots = 1000
connect    |   at org.apache.kafka.common.network.Selector.poll(Selector.java:481)
kafka      |   message.max.bytes = 1048588
connect    |   at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:560)
kafka      |   metadata.log.dir = null
connect    |   at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.processRequests(KafkaAdminClient.java:1407)
kafka      |   metadata.log.max.record.bytes.between.snapshots = 20971520
connect    |   at org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run(KafkaAdminClient.java:1338)
kafka      |   metadata.log.segment.bytes = 1073741824
connect    |   at java.base/java.lang.Thread.run(Thread.java:829)
kafka      |   metadata.log.segment.min.bytes = 8388608
connect    | 1594 [kafka-admin-client-thread | adminclient-1] INFO org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Node -1 disconnected.
kafka      |   metadata.log.segment.ms = 604800000
connect    | 1595 [kafka-admin-client-thread | adminclient-1] WARN org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Connection to node -1 (kafka/172.20.0.3:29092) could not be established. Broker may not be available.
kafka      |   metadata.max.retention.bytes = -1
kafka      |   metadata.max.retention.ms = 604800000
kafka      |   metric.reporters = []
kafka      |   metrics.num.samples = 2
kafka      |   metrics.recording.level = INFO
kafka      |   metrics.sample.window.ms = 30000
kafka      |   min.insync.replicas = 1
kafka      |   node.id = 1
kafka      |   num.io.threads = 8
kafka      |   num.network.threads = 3
kafka      |   num.partitions = 1
kafka      |   num.recovery.threads.per.data.dir = 1
kafka      |   num.replica.alter.log.dirs.threads = null
kafka      |   num.replica.fetchers = 1
kafka      |   offset.metadata.max.bytes = 4096
kafka      |   offsets.commit.required.acks = -1
kafka      |   offsets.commit.timeout.ms = 5000
kafka      |   offsets.load.buffer.size = 5242880
kafka      |   offsets.retention.check.interval.ms = 600000
kafka      |   offsets.retention.minutes = 10080
kafka      |   offsets.topic.compression.codec = 0
kafka      |   offsets.topic.num.partitions = 50
kafka      |   offsets.topic.replication.factor = 1
kafka      |   offsets.topic.segment.bytes = 104857600
kafka      |   password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
kafka      |   password.encoder.iterations = 4096
kafka      |   password.encoder.key.length = 128
kafka      |   password.encoder.keyfactory.algorithm = null
kafka      |   password.encoder.old.secret = null
kafka      |   password.encoder.secret = null
kafka      |   principal.builder.class = class org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder
kafka      |   process.roles = []
kafka      |   producer.purgatory.purge.interval.requests = 1000
kafka      |   queued.max.request.bytes = -1
kafka      |   queued.max.requests = 500
kafka      |   quota.window.num = 11
kafka      |   quota.window.size.seconds = 1
kafka      |   remote.log.index.file.cache.total.size.bytes = 1073741824
kafka      |   remote.log.manager.task.interval.ms = 30000
kafka      |   remote.log.manager.task.retry.backoff.max.ms = 30000
kafka      |   remote.log.manager.task.retry.backoff.ms = 500
kafka      |   remote.log.manager.task.retry.jitter = 0.2
kafka      |   remote.log.manager.thread.pool.size = 10
kafka      |   remote.log.metadata.manager.class.name = null
kafka      |   remote.log.metadata.manager.class.path = null
kafka      |   remote.log.metadata.manager.impl.prefix = null
kafka      |   remote.log.metadata.manager.listener.name = null
kafka      |   remote.log.reader.max.pending.tasks = 100
kafka      |   remote.log.reader.threads = 10
kafka      |   remote.log.storage.manager.class.name = null
kafka      |   remote.log.storage.manager.class.path = null
kafka      |   remote.log.storage.manager.impl.prefix = null
kafka      |   remote.log.storage.system.enable = false
kafka      |   replica.fetch.backoff.ms = 1000
kafka      |   replica.fetch.max.bytes = 1048576
kafka      |   replica.fetch.min.bytes = 1
kafka      |   replica.fetch.response.max.bytes = 10485760
kafka      |   replica.fetch.wait.max.ms = 500
kafka      |   replica.high.watermark.checkpoint.interval.ms = 5000
kafka      |   replica.lag.time.max.ms = 30000
kafka      |   replica.selector.class = null
kafka      |   replica.socket.receive.buffer.bytes = 65536
kafka      |   replica.socket.timeout.ms = 30000
kafka      |   replication.quota.window.num = 11
kafka      |   replication.quota.window.size.seconds = 1
kafka      |   request.timeout.ms = 30000
kafka      |   reserved.broker.max.id = 1000
kafka      |   sasl.client.callback.handler.class = null
kafka      |   sasl.enabled.mechanisms = [GSSAPI]
kafka      |   sasl.jaas.config = null
kafka      |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
kafka      |   sasl.kerberos.min.time.before.relogin = 60000
kafka      |   sasl.kerberos.principal.to.local.rules = [DEFAULT]
kafka      |   sasl.kerberos.service.name = null
kafka      |   sasl.kerberos.ticket.renew.jitter = 0.05
kafka      |   sasl.kerberos.ticket.renew.window.factor = 0.8
kafka      |   sasl.login.callback.handler.class = null
kafka      |   sasl.login.class = null
kafka      |   sasl.login.connect.timeout.ms = null
kafka      |   sasl.login.read.timeout.ms = null
kafka      |   sasl.login.refresh.buffer.seconds = 300
kafka      |   sasl.login.refresh.min.period.seconds = 60
kafka      |   sasl.login.refresh.window.factor = 0.8
kafka      |   sasl.login.refresh.window.jitter = 0.05
kafka      |   sasl.login.retry.backoff.max.ms = 10000
kafka      |   sasl.login.retry.backoff.ms = 100
kafka      |   sasl.mechanism.controller.protocol = GSSAPI
kafka      |   sasl.mechanism.inter.broker.protocol = GSSAPI
kafka      |   sasl.oauthbearer.clock.skew.seconds = 30
kafka      |   sasl.oauthbearer.expected.audience = null
kafka      |   sasl.oauthbearer.expected.issuer = null
kafka      |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
kafka      |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
kafka      |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
kafka      |   sasl.oauthbearer.jwks.endpoint.url = null
kafka      |   sasl.oauthbearer.scope.claim.name = scope
kafka      |   sasl.oauthbearer.sub.claim.name = sub
kafka      |   sasl.oauthbearer.token.endpoint.url = null
kafka      |   sasl.server.callback.handler.class = null
kafka      |   security.inter.broker.protocol = PLAINTEXT
kafka      |   security.providers = null
kafka      |   socket.connection.setup.timeout.max.ms = 30000
kafka      |   socket.connection.setup.timeout.ms = 10000
connect    | 2505 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.ClientUtils  - Resolved host kafka as 172.20.0.3
kafka      |   socket.listen.backlog.size = 50
connect    | 2505 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Initiating connection to node kafka:29092 (id: -1 rack: null) using address kafka/172.20.0.3
kafka      |   socket.receive.buffer.bytes = 102400
connect    | 2507 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.common.network.Selector  - [AdminClient clientId=adminclient-1] Created socket with SO_RCVBUF = 65536, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node -1
kafka      |   socket.request.max.bytes = 104857600
kafka      |   socket.send.buffer.bytes = 102400
kafka      |   ssl.cipher.suites = []
kafka      |   ssl.client.auth = none
kafka      |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
kafka      |   ssl.endpoint.identification.algorithm = https
kafka      |   ssl.engine.factory.class = null
kafka      |   ssl.key.password = null
kafka      |   ssl.keymanager.algorithm = SunX509
kafka      |   ssl.keystore.certificate.chain = null
kafka      |   ssl.keystore.key = null
kafka      |   ssl.keystore.location = null
kafka      |   ssl.keystore.password = null
kafka      |   ssl.keystore.type = JKS
kafka      |   ssl.principal.mapping.rules = DEFAULT
kafka      |   ssl.protocol = TLSv1.3
kafka      |   ssl.provider = null
kafka      |   ssl.secure.random.implementation = null
kafka      |   ssl.trustmanager.algorithm = PKIX
kafka      |   ssl.truststore.certificates = null
kafka      |   ssl.truststore.location = null
kafka      |   ssl.truststore.password = null
kafka      |   ssl.truststore.type = JKS
kafka      |   transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
kafka      |   transaction.max.timeout.ms = 900000
kafka      |   transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
kafka      |   transaction.state.log.load.buffer.size = 5242880
kafka      |   transaction.state.log.min.isr = 1
kafka      |   transaction.state.log.num.partitions = 50
kafka      |   transaction.state.log.replication.factor = 1
kafka      |   transaction.state.log.segment.bytes = 104857600
kafka      |   transactional.id.expiration.ms = 604800000
kafka      |   unclean.leader.election.enable = false
kafka      |   zookeeper.clientCnxnSocket = null
kafka      |   zookeeper.connect = zookeeper:2181
kafka      |   zookeeper.connection.timeout.ms = null
kafka      |   zookeeper.max.in.flight.requests = 10
kafka      |   zookeeper.session.timeout.ms = 18000
kafka      |   zookeeper.set.acl = false
kafka      |   zookeeper.ssl.cipher.suites = null
kafka      |   zookeeper.ssl.client.enable = false
kafka      |   zookeeper.ssl.crl.enable = false
kafka      |   zookeeper.ssl.enabled.protocols = null
kafka      |   zookeeper.ssl.endpoint.identification.algorithm = HTTPS
kafka      |   zookeeper.ssl.keystore.location = null
kafka      |   zookeeper.ssl.keystore.password = null
kafka      |   zookeeper.ssl.keystore.type = null
kafka      |   zookeeper.ssl.ocsp.enable = false
kafka      |   zookeeper.ssl.protocol = TLSv1.2
kafka      |   zookeeper.ssl.truststore.location = null
kafka      |   zookeeper.ssl.truststore.password = null
kafka      |   zookeeper.ssl.truststore.type = null
kafka      |  (kafka.server.KafkaConfig)
kafka      | [2025-06-17 05:57:21,473] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
kafka      | [2025-06-17 05:57:21,474] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
kafka      | [2025-06-17 05:57:21,477] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
connect    | 2864 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Completed connection to node -1. Fetching API versions.
kafka      | [2025-06-17 05:57:21,481] INFO [ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
connect    | 2865 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Initiating API versions fetch from node -1.
kafka      | [2025-06-17 05:57:21,548] INFO Loading logs from log dirs ArraySeq(/var/lib/kafka/data) (kafka.log.LogManager)
kafka      | [2025-06-17 05:57:21,553] INFO Attempting recovery for all logs in /var/lib/kafka/data since no clean shutdown file was found (kafka.log.LogManager)
kafka      | [2025-06-17 05:57:21,563] INFO Loaded 0 logs in 15ms. (kafka.log.LogManager)
kafka      | [2025-06-17 05:57:21,565] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
kafka      | [2025-06-17 05:57:21,569] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
kafka      | [2025-06-17 05:57:21,592] INFO Starting the log cleaner (kafka.log.LogCleaner)
connect    | 2913 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=adminclient-1, correlationId=0) and timeout 3600000 to node -1: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='7.2.1-ccs')
kafka      | [2025-06-17 05:57:21,740] INFO [kafka-log-cleaner-thread-0]: Starting (kafka.log.LogCleaner)
kafka      | [2025-06-17 05:57:22,189] INFO [BrokerToControllerChannelManager broker=1 name=forwarding]: Starting (kafka.server.BrokerToControllerRequestThread)
kafka      | [2025-06-17 05:57:22,448] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
kafka      | [2025-06-17 05:57:22,452] INFO Awaiting socket connections on kafka:29092. (kafka.network.DataPlaneAcceptor)
kafka      | [2025-06-17 05:57:22,498] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Created data-plane acceptor and processors for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
kafka      | [2025-06-17 05:57:22,500] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
kafka      | [2025-06-17 05:57:22,501] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.DataPlaneAcceptor)
connect    | 2961 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Received API_VERSIONS response from node -1 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=adminclient-1, correlationId=0): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=13), ApiVersion(apiKey=2, minVersion=0, maxVersion=7), ApiVersion(apiKey=3, minVersion=0, maxVersion=12), ApiVersion(apiKey=4, minVersion=0, maxVersion=6), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=8), ApiVersion(apiKey=10, minVersion=0, maxVersion=4), ApiVersion(apiKey=11, minVersion=0, maxVersion=9), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=5), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=3), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=1), ApiVersion(apiKey=57, minVersion=0, maxVersion=0), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0), ApiVersion(apiKey=65, minVersion=0, maxVersion=0), ApiVersion(apiKey=66, minVersion=0, maxVersion=0), ApiVersion(apiKey=67, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
kafka      | [2025-06-17 05:57:22,514] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Created data-plane acceptor and processors for endpoint : ListenerName(PLAINTEXT_HOST) (kafka.network.SocketServer)
kafka      | [2025-06-17 05:57:22,529] INFO [BrokerToControllerChannelManager broker=1 name=alterPartition]: Starting (kafka.server.BrokerToControllerRequestThread)
kafka      | [2025-06-17 05:57:22,573] INFO [ExpirationReaper-1-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
kafka      | [2025-06-17 05:57:22,576] INFO [ExpirationReaper-1-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
kafka      | [2025-06-17 05:57:22,579] INFO [ExpirationReaper-1-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
kafka      | [2025-06-17 05:57:22,582] INFO [ExpirationReaper-1-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
kafka      | [2025-06-17 05:57:22,614] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
kafka      | [2025-06-17 05:57:22,663] INFO Creating /brokers/ids/1 (is it secure? false) (kafka.zk.KafkaZkClient)
kafka      | [2025-06-17 05:57:22,713] INFO Stat of the created znode at /brokers/ids/1 is: 27,27,1750139842694,1750139842694,1,0,0,72057877748383745,261,0,27
kafka      |  (kafka.zk.KafkaZkClient)
kafka      | [2025-06-17 05:57:22,714] INFO Registered broker 1 at path /brokers/ids/1 with addresses: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092, czxid (broker epoch): 27 (kafka.zk.KafkaZkClient)
kafka      | [2025-06-17 05:57:22,800] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
connect    | 3044 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Node -1 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 13 [usable: 13], ListOffsets(2): 0 to 7 [usable: 7], Metadata(3): 0 to 12 [usable: 12], LeaderAndIsr(4): 0 to 6 [usable: 6], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 8 [usable: 8], FindCoordinator(10): 0 to 4 [usable: 4], JoinGroup(11): 0 to 9 [usable: 9], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 5 [usable: 5], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 3 [usable: 3], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterPartition(56): 0 to 1 [usable: 1], UpdateFeatures(57): 0 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0], DescribeTransactions(65): 0 [usable: 0], ListTransactions(66): 0 [usable: 0], AllocateProducerIds(67): 0 [usable: 0]).
kafka      | [2025-06-17 05:57:22,812] INFO [ExpirationReaper-1-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
connect    | 3045 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.admin.KafkaAdminClient  - [AdminClient clientId=adminclient-1] Sending MetadataRequestData(topics=[], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false) to kafka:29092 (id: -1 rack: null). correlationId=1, timeoutMs=27536
kafka      | [2025-06-17 05:57:22,822] INFO [ExpirationReaper-1-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
connect    | 3047 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Sending METADATA request with header RequestHeader(apiKey=METADATA, apiVersion=12, clientId=adminclient-1, correlationId=1) and timeout 27536 to node -1: MetadataRequestData(topics=[], allowAutoTopicCreation=true, includeClusterAuthorizedOperations=false, includeTopicAuthorizedOperations=false)
kafka      | [2025-06-17 05:57:22,824] INFO [ExpirationReaper-1-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
connect    | 3065 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Received METADATA response from node -1 for request with header RequestHeader(apiKey=METADATA, apiVersion=12, clientId=adminclient-1, correlationId=1): MetadataResponseData(throttleTimeMs=0, brokers=[MetadataResponseBroker(nodeId=1, host='kafka', port=29092, rack=null)], clusterId='giJkw9-kTvOOXXJyYfUXQw', controllerId=1, topics=[], clusterAuthorizedOperations=-2147483648)
kafka      | [2025-06-17 05:57:22,836] INFO Successfully created /controller_epoch with initial epoch 0 (kafka.zk.KafkaZkClient)
connect    | 3072 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.admin.internals.AdminMetadataManager  - [AdminClient clientId=adminclient-1] Updating cluster metadata to Cluster(id = giJkw9-kTvOOXXJyYfUXQw, nodes = [kafka:29092 (id: 1 rack: null)], partitions = [], controller = kafka:29092 (id: 1 rack: null))
kafka      | [2025-06-17 05:57:22,854] INFO [GroupCoordinator 1]: Starting up. (kafka.coordinator.group.GroupCoordinator)
connect    | 3073 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.ClientUtils  - Resolved host kafka as 172.20.0.3
kafka      | [2025-06-17 05:57:22,857] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
connect    | 3073 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Initiating connection to node kafka:29092 (id: 1 rack: null) using address kafka/172.20.0.3
kafka      | [2025-06-17 05:57:22,865] INFO [GroupCoordinator 1]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
connect    | 3077 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.common.network.Selector  - [AdminClient clientId=adminclient-1] Created socket with SO_RCVBUF = 65536, SO_SNDBUF = 131072, SO_TIMEOUT = 0 to node 1
kafka      | [2025-06-17 05:57:22,871] INFO [Controller id=1] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
connect    | 3077 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Completed connection to node 1. Fetching API versions.
kafka      | [2025-06-17 05:57:22,878] INFO Feature ZK node created at path: /feature (kafka.server.FinalizedFeatureChangeListener)
connect    | 3077 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Initiating API versions fetch from node 1.
kafka      | [2025-06-17 05:57:22,897] INFO [TransactionCoordinator id=1] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
connect    | 3077 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Sending API_VERSIONS request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=adminclient-1, correlationId=2) and timeout 3600000 to node 1: ApiVersionsRequestData(clientSoftwareName='apache-kafka-java', clientSoftwareVersion='7.2.1-ccs')
kafka      | [2025-06-17 05:57:22,907] INFO [TransactionCoordinator id=1] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
connect    | 3084 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Received API_VERSIONS response from node 1 for request with header RequestHeader(apiKey=API_VERSIONS, apiVersion=3, clientId=adminclient-1, correlationId=2): ApiVersionsResponseData(errorCode=0, apiKeys=[ApiVersion(apiKey=0, minVersion=0, maxVersion=9), ApiVersion(apiKey=1, minVersion=0, maxVersion=13), ApiVersion(apiKey=2, minVersion=0, maxVersion=7), ApiVersion(apiKey=3, minVersion=0, maxVersion=12), ApiVersion(apiKey=4, minVersion=0, maxVersion=6), ApiVersion(apiKey=5, minVersion=0, maxVersion=3), ApiVersion(apiKey=6, minVersion=0, maxVersion=7), ApiVersion(apiKey=7, minVersion=0, maxVersion=3), ApiVersion(apiKey=8, minVersion=0, maxVersion=8), ApiVersion(apiKey=9, minVersion=0, maxVersion=8), ApiVersion(apiKey=10, minVersion=0, maxVersion=4), ApiVersion(apiKey=11, minVersion=0, maxVersion=9), ApiVersion(apiKey=12, minVersion=0, maxVersion=4), ApiVersion(apiKey=13, minVersion=0, maxVersion=5), ApiVersion(apiKey=14, minVersion=0, maxVersion=5), ApiVersion(apiKey=15, minVersion=0, maxVersion=5), ApiVersion(apiKey=16, minVersion=0, maxVersion=4), ApiVersion(apiKey=17, minVersion=0, maxVersion=1), ApiVersion(apiKey=18, minVersion=0, maxVersion=3), ApiVersion(apiKey=19, minVersion=0, maxVersion=7), ApiVersion(apiKey=20, minVersion=0, maxVersion=6), ApiVersion(apiKey=21, minVersion=0, maxVersion=2), ApiVersion(apiKey=22, minVersion=0, maxVersion=4), ApiVersion(apiKey=23, minVersion=0, maxVersion=4), ApiVersion(apiKey=24, minVersion=0, maxVersion=3), ApiVersion(apiKey=25, minVersion=0, maxVersion=3), ApiVersion(apiKey=26, minVersion=0, maxVersion=3), ApiVersion(apiKey=27, minVersion=0, maxVersion=1), ApiVersion(apiKey=28, minVersion=0, maxVersion=3), ApiVersion(apiKey=29, minVersion=0, maxVersion=2), ApiVersion(apiKey=30, minVersion=0, maxVersion=2), ApiVersion(apiKey=31, minVersion=0, maxVersion=2), ApiVersion(apiKey=32, minVersion=0, maxVersion=4), ApiVersion(apiKey=33, minVersion=0, maxVersion=2), ApiVersion(apiKey=34, minVersion=0, maxVersion=2), ApiVersion(apiKey=35, minVersion=0, maxVersion=3), ApiVersion(apiKey=36, minVersion=0, maxVersion=2), ApiVersion(apiKey=37, minVersion=0, maxVersion=3), ApiVersion(apiKey=38, minVersion=0, maxVersion=2), ApiVersion(apiKey=39, minVersion=0, maxVersion=2), ApiVersion(apiKey=40, minVersion=0, maxVersion=2), ApiVersion(apiKey=41, minVersion=0, maxVersion=2), ApiVersion(apiKey=42, minVersion=0, maxVersion=2), ApiVersion(apiKey=43, minVersion=0, maxVersion=2), ApiVersion(apiKey=44, minVersion=0, maxVersion=1), ApiVersion(apiKey=45, minVersion=0, maxVersion=0), ApiVersion(apiKey=46, minVersion=0, maxVersion=0), ApiVersion(apiKey=47, minVersion=0, maxVersion=0), ApiVersion(apiKey=48, minVersion=0, maxVersion=1), ApiVersion(apiKey=49, minVersion=0, maxVersion=1), ApiVersion(apiKey=50, minVersion=0, maxVersion=0), ApiVersion(apiKey=51, minVersion=0, maxVersion=0), ApiVersion(apiKey=56, minVersion=0, maxVersion=1), ApiVersion(apiKey=57, minVersion=0, maxVersion=0), ApiVersion(apiKey=60, minVersion=0, maxVersion=0), ApiVersion(apiKey=61, minVersion=0, maxVersion=0), ApiVersion(apiKey=65, minVersion=0, maxVersion=0), ApiVersion(apiKey=66, minVersion=0, maxVersion=0), ApiVersion(apiKey=67, minVersion=0, maxVersion=0)], throttleTimeMs=0, supportedFeatures=[], finalizedFeaturesEpoch=0, finalizedFeatures=[])
kafka      | [2025-06-17 05:57:22,910] INFO [Transaction Marker Channel Manager 1]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
connect    | 3086 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Node 1 has finalized features epoch: 0, finalized features: [], supported features: [], API versions: (Produce(0): 0 to 9 [usable: 9], Fetch(1): 0 to 13 [usable: 13], ListOffsets(2): 0 to 7 [usable: 7], Metadata(3): 0 to 12 [usable: 12], LeaderAndIsr(4): 0 to 6 [usable: 6], StopReplica(5): 0 to 3 [usable: 3], UpdateMetadata(6): 0 to 7 [usable: 7], ControlledShutdown(7): 0 to 3 [usable: 3], OffsetCommit(8): 0 to 8 [usable: 8], OffsetFetch(9): 0 to 8 [usable: 8], FindCoordinator(10): 0 to 4 [usable: 4], JoinGroup(11): 0 to 9 [usable: 9], Heartbeat(12): 0 to 4 [usable: 4], LeaveGroup(13): 0 to 5 [usable: 5], SyncGroup(14): 0 to 5 [usable: 5], DescribeGroups(15): 0 to 5 [usable: 5], ListGroups(16): 0 to 4 [usable: 4], SaslHandshake(17): 0 to 1 [usable: 1], ApiVersions(18): 0 to 3 [usable: 3], CreateTopics(19): 0 to 7 [usable: 7], DeleteTopics(20): 0 to 6 [usable: 6], DeleteRecords(21): 0 to 2 [usable: 2], InitProducerId(22): 0 to 4 [usable: 4], OffsetForLeaderEpoch(23): 0 to 4 [usable: 4], AddPartitionsToTxn(24): 0 to 3 [usable: 3], AddOffsetsToTxn(25): 0 to 3 [usable: 3], EndTxn(26): 0 to 3 [usable: 3], WriteTxnMarkers(27): 0 to 1 [usable: 1], TxnOffsetCommit(28): 0 to 3 [usable: 3], DescribeAcls(29): 0 to 2 [usable: 2], CreateAcls(30): 0 to 2 [usable: 2], DeleteAcls(31): 0 to 2 [usable: 2], DescribeConfigs(32): 0 to 4 [usable: 4], AlterConfigs(33): 0 to 2 [usable: 2], AlterReplicaLogDirs(34): 0 to 2 [usable: 2], DescribeLogDirs(35): 0 to 3 [usable: 3], SaslAuthenticate(36): 0 to 2 [usable: 2], CreatePartitions(37): 0 to 3 [usable: 3], CreateDelegationToken(38): 0 to 2 [usable: 2], RenewDelegationToken(39): 0 to 2 [usable: 2], ExpireDelegationToken(40): 0 to 2 [usable: 2], DescribeDelegationToken(41): 0 to 2 [usable: 2], DeleteGroups(42): 0 to 2 [usable: 2], ElectLeaders(43): 0 to 2 [usable: 2], IncrementalAlterConfigs(44): 0 to 1 [usable: 1], AlterPartitionReassignments(45): 0 [usable: 0], ListPartitionReassignments(46): 0 [usable: 0], OffsetDelete(47): 0 [usable: 0], DescribeClientQuotas(48): 0 to 1 [usable: 1], AlterClientQuotas(49): 0 to 1 [usable: 1], DescribeUserScramCredentials(50): 0 [usable: 0], AlterUserScramCredentials(51): 0 [usable: 0], AlterPartition(56): 0 to 1 [usable: 1], UpdateFeatures(57): 0 [usable: 0], DescribeCluster(60): 0 [usable: 0], DescribeProducers(61): 0 [usable: 0], DescribeTransactions(65): 0 [usable: 0], ListTransactions(66): 0 [usable: 0], AllocateProducerIds(67): 0 [usable: 0]).
kafka      | [2025-06-17 05:57:22,938] INFO Updated cache from existing <empty> to latest FinalizedFeaturesAndEpoch(features=Features{}, epoch=0). (kafka.server.FinalizedFeatureCache)
connect    | 3087 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.admin.KafkaAdminClient  - [AdminClient clientId=adminclient-1] Sending DescribeClusterRequestData(includeClusterAuthorizedOperations=false) to kafka:29092 (id: 1 rack: null). correlationId=3, timeoutMs=29981
kafka      | [2025-06-17 05:57:22,938] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
connect    | 3088 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Sending DESCRIBE_CLUSTER request with header RequestHeader(apiKey=DESCRIBE_CLUSTER, apiVersion=0, clientId=adminclient-1, correlationId=3) and timeout 29981 to node 1: DescribeClusterRequestData(includeClusterAuthorizedOperations=false)
kafka      | [2025-06-17 05:57:22,948] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
connect    | 3097 [kafka-admin-client-thread | adminclient-1] DEBUG org.apache.kafka.clients.NetworkClient  - [AdminClient clientId=adminclient-1] Received DESCRIBE_CLUSTER response from node 1 for request with header RequestHeader(apiKey=DESCRIBE_CLUSTER, apiVersion=0, clientId=adminclient-1, correlationId=3): DescribeClusterResponseData(throttleTimeMs=0, errorCode=0, errorMessage=null, clusterId='giJkw9-kTvOOXXJyYfUXQw', controllerId=1, brokers=[DescribeClusterBroker(brokerId=1, host='kafka', port=29092, rack=null)], clusterAuthorizedOperations=-2147483648)
kafka      | [2025-06-17 05:57:22,954] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
connect    | 3107 [main] DEBUG io.confluent.admin.utils.ClusterStatus  - Broker list: [kafka:29092 (id: 1 rack: null)]
kafka      | [2025-06-17 05:57:22,962] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:22,969] INFO [ExpirationReaper-1-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
kafka      | [2025-06-17 05:57:22,993] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 27) (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,007] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,012] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
kafka      | [2025-06-17 05:57:23,025] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
kafka      | [2025-06-17 05:57:23,048] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
kafka      | [2025-06-17 05:57:23,050] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Starting socket server acceptors and processors (kafka.network.SocketServer)
kafka      | [2025-06-17 05:57:23,053] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,055] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,056] INFO [Controller id=1] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,057] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,068] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,068] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Started data-plane acceptor and processor(s) for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
kafka      | [2025-06-17 05:57:23,068] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,071] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,073] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
kafka      | [2025-06-17 05:57:23,073] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Started data-plane acceptor and processor(s) for endpoint : ListenerName(PLAINTEXT_HOST) (kafka.network.SocketServer)
kafka      | [2025-06-17 05:57:23,074] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Started socket server acceptors and processors (kafka.network.SocketServer)
kafka      | [2025-06-17 05:57:23,076] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,084] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:23,085] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:23,085] INFO Kafka startTimeMs: 1750139843074 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:23,085] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
kafka      | [2025-06-17 05:57:23,089] INFO [KafkaServer id=1] started (kafka.server.KafkaServer)
kafka      | [2025-06-17 05:57:23,101] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
kafka      | [2025-06-17 05:57:23,105] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
kafka      | [2025-06-17 05:57:23,112] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
kafka      | [2025-06-17 05:57:23,113] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
kafka      | [2025-06-17 05:57:23,115] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
kafka      | [2025-06-17 05:57:23,117] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
kafka      | [2025-06-17 05:57:23,125] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
kafka      | [2025-06-17 05:57:23,126] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,126] INFO [RequestSendThread controllerId=1] Controller 1 connected to kafka:29092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
kafka      | [2025-06-17 05:57:23,139] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,141] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,142] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,143] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,146] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,182] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:23,241] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 0 sent to broker kafka:29092 (id: 1 rack: null) (state.change.logger)
kafka      | [2025-06-17 05:57:23,243] INFO [BrokerToControllerChannelManager broker=1 name=alterPartition]: Recorded new controller, from now on will use broker kafka:29092 (id: 1 rack: null) (kafka.server.BrokerToControllerRequestThread)
kafka      | [2025-06-17 05:57:23,330] INFO [BrokerToControllerChannelManager broker=1 name=forwarding]: Recorded new controller, from now on will use broker kafka:29092 (id: 1 rack: null) (kafka.server.BrokerToControllerRequestThread)
connect    | ===> Launching ...
connect    | ===> Launching kafka-connect ...
connect    | [2025-06-17 05:57:25,068] INFO WorkerInfo values:
connect    |   jvm.args = -Xms256M, -Xmx2G, -XX:+UseG1GC, -XX:MaxGCPauseMillis=20, -XX:InitiatingHeapOccupancyPercent=35, -XX:+ExplicitGCInvokesConcurrent, -XX:MaxInlineLevel=15, -Djava.awt.headless=true, -Dcom.sun.management.jmxremote=true, -Dcom.sun.management.jmxremote.authenticate=false, -Dcom.sun.management.jmxremote.ssl=false, -Dkafka.logs.dir=/var/log/kafka, -Dlog4j.configuration=file:/etc/kafka/connect-log4j.properties
connect    |   jvm.spec = Azul Systems, Inc., OpenJDK 64-Bit Server VM, 11.0.15, 11.0.15+10-LTS
connect    |   jvm.classpath = /etc/kafka-connect/jars/*:/usr/share/java/kafka/zstd-jni-1.5.2-1.jar:/usr/share/java/kafka/argparse4j-0.7.0.jar:/usr/share/java/kafka/maven-artifact-3.8.4.jar:/usr/share/java/kafka/netty-transport-native-unix-common-4.1.73.Final.jar:/usr/share/java/kafka/kafka-server-common-7.2.1-ccs.jar:/usr/share/java/kafka/jackson-databind-2.13.2.2.jar:/usr/share/java/kafka/connect-runtime-7.2.1-ccs.jar:/usr/share/java/kafka/audience-annotations-0.5.0.jar:/usr/share/java/kafka/scala-java8-compat_2.13-1.0.2.jar:/usr/share/java/kafka/commons-lang3-3.8.1.jar:/usr/share/java/kafka/jersey-container-servlet-2.34.jar:/usr/share/java/kafka/javassist-3.27.0-GA.jar:/usr/share/java/kafka/connect-mirror-7.2.1-ccs.jar:/usr/share/java/kafka/netty-buffer-4.1.73.Final.jar:/usr/share/java/kafka/kafka.jar:/usr/share/java/kafka/kafka-log4j-appender-7.2.1-ccs.jar:/usr/share/java/kafka/jose4j-0.7.9.jar:/usr/share/java/kafka/netty-resolver-4.1.73.Final.jar:/usr/share/java/kafka/commons-cli-1.4.jar:/usr/share/java/kafka/connect-mirror-client-7.2.1-ccs.jar:/usr/share/java/kafka/jersey-client-2.34.jar:/usr/share/java/kafka/netty-transport-native-epoll-4.1.73.Final.jar:/usr/share/java/kafka/reload4j-1.2.19.jar:/usr/share/java/kafka/kafka-raft-7.2.1-ccs.jar:/usr/share/java/kafka/jakarta.annotation-api-1.3.5.jar:/usr/share/java/kafka/osgi-resource-locator-1.0.3.jar:/usr/share/java/kafka/hk2-api-2.6.1.jar:/usr/share/java/kafka/jackson-jaxrs-base-2.13.2.jar:/usr/share/java/kafka/jackson-annotations-2.13.2.jar:/usr/share/java/kafka/netty-transport-4.1.73.Final.jar:/usr/share/java/kafka/lz4-java-1.8.0.jar:/usr/share/java/kafka/metrics-core-2.2.0.jar:/usr/share/java/kafka/kafka_2.13-7.2.1-ccs.jar:/usr/share/java/kafka/jetty-servlets-9.4.44.v20210927.jar:/usr/share/java/kafka/netty-transport-classes-epoll-4.1.73.Final.jar:/usr/share/java/kafka/slf4j-api-1.7.36.jar:/usr/share/java/kafka/jackson-jaxrs-json-provider-2.13.2.jar:/usr/share/java/kafka/jaxb-api-2.3.0.jar:/usr/share/java/kafka/jakarta.activation-api-1.2.2.jar:/usr/share/java/kafka/connect-api-7.2.1-ccs.jar:/usr/share/java/kafka/jetty-client-9.4.44.v20210927.jar:/usr/share/java/kafka/jakarta.inject-2.6.1.jar:/usr/share/java/kafka/slf4j-reload4j-1.7.36.jar:/usr/share/java/kafka/jackson-module-jaxb-annotations-2.13.2.jar:/usr/share/java/kafka/netty-codec-4.1.73.Final.jar:/usr/share/java/kafka/kafka-metadata-7.2.1-ccs.jar:/usr/share/java/kafka/jetty-http-9.4.44.v20210927.jar:/usr/share/java/kafka/kafka-tools-7.2.1-ccs.jar:/usr/share/java/kafka/scala-logging_2.13-3.9.4.jar:/usr/share/java/kafka/netty-tcnative-classes-2.0.46.Final.jar:/usr/share/java/kafka/activation-1.1.1.jar:/usr/share/java/kafka/trogdor-7.2.1-ccs.jar:/usr/share/java/kafka/jersey-container-servlet-core-2.34.jar:/usr/share/java/kafka/kafka-streams-test-utils-7.2.1-ccs.jar:/usr/share/java/kafka/metrics-core-4.1.12.1.jar:/usr/share/java/kafka/netty-common-4.1.73.Final.jar:/usr/share/java/kafka/scala-collection-compat_2.13-2.6.0.jar:/usr/share/java/kafka/connect-basic-auth-extension-7.2.1-ccs.jar:/usr/share/java/kafka/jopt-simple-5.0.4.jar:/usr/share/java/kafka/kafka-storage-7.2.1-ccs.jar:/usr/share/java/kafka/kafka-shell-7.2.1-ccs.jar:/usr/share/java/kafka/kafka-streams-scala_2.13-7.2.1-ccs.jar:/usr/share/java/kafka/jetty-io-9.4.44.v20210927.jar:/usr/share/java/kafka/hk2-utils-2.6.1.jar:/usr/share/java/kafka/reflections-0.9.12.jar:/usr/share/java/kafka/javax.ws.rs-api-2.1.1.jar:/usr/share/java/kafka/jline-3.21.0.jar:/usr/share/java/kafka/hk2-locator-2.6.1.jar:/usr/share/java/kafka/jackson-dataformat-csv-2.13.2.jar:/usr/share/java/kafka/scala-reflect-2.13.8.jar:/usr/share/java/kafka/zookeeper-3.6.3.jar:/usr/share/java/kafka/jetty-continuation-9.4.44.v20210927.jar:/usr/share/java/kafka/javax.servlet-api-3.1.0.jar:/usr/share/java/kafka/jetty-util-9.4.44.v20210927.jar:/usr/share/java/kafka/jackson-module-scala_2.13-2.13.2.jar:/usr/share/java/kafka/kafka-streams-7.2.1-ccs.jar:/usr/share/java/kafka/snappy-java-1.1.8.4.jar:/usr/share/java/kafka/kafka-streams-examples-7.2.1-ccs.jar:/usr/share/java/kafka/jakarta.ws.rs-api-2.1.6.jar:/usr/share/java/kafka/jakarta.xml.bind-api-2.3.3.jar:/usr/share/java/kafka/kafka-storage-api-7.2.1-ccs.jar:/usr/share/java/kafka/scala-library-2.13.8.jar:/usr/share/java/kafka/jetty-security-9.4.44.v20210927.jar:/usr/share/java/kafka/jersey-server-2.34.jar:/usr/share/java/kafka/jetty-servlet-9.4.44.v20210927.jar:/usr/share/java/kafka/plexus-utils-3.3.0.jar:/usr/share/java/kafka/rocksdbjni-6.29.4.1.jar:/usr/share/java/kafka/aopalliance-repackaged-2.6.1.jar:/usr/share/java/kafka/jakarta.validation-api-2.0.2.jar:/usr/share/java/kafka/paranamer-2.8.jar:/usr/share/java/kafka/jackson-datatype-jdk8-2.13.2.jar:/usr/share/java/kafka/jersey-hk2-2.34.jar:/usr/share/java/kafka/connect-transforms-7.2.1-ccs.jar:/usr/share/java/kafka/kafka-clients-7.2.1-ccs.jar:/usr/share/java/kafka/netty-handler-4.1.73.Final.jar:/usr/share/java/kafka/zookeeper-jute-3.6.3.jar:/usr/share/java/kafka/jackson-core-2.13.2.jar:/usr/share/java/kafka/jetty-server-9.4.44.v20210927.jar:/usr/share/java/kafka/jersey-common-2.34.jar:/usr/share/java/kafka/jetty-util-ajax-9.4.44.v20210927.jar:/usr/share/java/kafka/connect-json-7.2.1-ccs.jar:/usr/share/java/confluent-common/common-utils-7.2.1.jar:/usr/share/java/confluent-common/slf4j-api-1.7.36.jar:/usr/share/java/confluent-common/common-config-7.2.1.jar:/usr/share/java/confluent-common/build-tools-7.2.1.jar:/usr/share/java/confluent-common/common-metrics-7.2.1.jar:/usr/share/java/kafka-serde-tools/jackson-databind-2.13.2.2.jar:/usr/share/java/kafka-serde-tools/classgraph-4.8.21.jar:/usr/share/java/kafka-serde-tools/jackson-datatype-jsr310-2.13.2.jar:/usr/share/java/kafka-serde-tools/okio-3.0.0.jar:/usr/share/java/kafka-serde-tools/swagger-annotations-2.1.10.jar:/usr/share/java/kafka-serde-tools/re2j-1.6.jar:/usr/share/java/kafka-serde-tools/kotlin-stdlib-jdk7-1.6.10.jar:/usr/share/java/kafka-serde-tools/kafka-protobuf-provider-7.2.1.jar:/usr/share/java/kafka-serde-tools/kafka-connect-protobuf-converter-7.2.1.jar:/usr/share/java/kafka-serde-tools/avro-1.11.0.jar:/usr/share/java/kafka-serde-tools/kotlin-stdlib-common-1.6.10.jar:/usr/share/java/kafka-serde-tools/joda-time-2.10.8.jar:/usr/share/java/kafka-serde-tools/kotlin-stdlib-1.6.0.jar:/usr/share/java/kafka-serde-tools/kafka-connect-avro-data-7.2.1.jar:/usr/share/java/kafka-serde-tools/kafka-json-schema-provider-7.2.1.jar:/usr/share/java/kafka-serde-tools/everit-json-schema-1.14.1.jar:/usr/share/java/kafka-serde-tools/annotations-13.0.jar:/usr/share/java/kafka-serde-tools/jackson-annotations-2.13.2.jar:/usr/share/java/kafka-serde-tools/slf4j-api-1.7.36.jar:/usr/share/java/kafka-serde-tools/kafka-json-serializer-7.2.1.jar:/usr/share/java/kafka-serde-tools/kafka-schema-converter-7.2.1.jar:/usr/share/java/kafka-serde-tools/kafka-schema-registry-client-7.2.1.jar:/usr/share/java/kafka-serde-tools/failureaccess-1.0.1.jar:/usr/share/java/kafka-serde-tools/kafka-protobuf-types-7.2.1.jar:/usr/share/java/kafka-serde-tools/kotlin-scripting-compiler-embeddable-1.6.0.jar:/usr/share/java/kafka-serde-tools/commons-collections-3.2.2.jar:/usr/share/java/kafka-serde-tools/jackson-datatype-joda-2.13.2.jar:/usr/share/java/kafka-serde-tools/gson-2.9.0.jar:/usr/share/java/kafka-serde-tools/minimal-json-0.9.5.jar:/usr/share/java/kafka-serde-tools/commons-compress-1.21.jar:/usr/share/java/kafka-serde-tools/j2objc-annotations-1.3.jar:/usr/share/java/kafka-serde-tools/kafka-protobuf-serializer-7.2.1.jar:/usr/share/java/kafka-serde-tools/logredactor-1.0.10.jar:/usr/share/java/kafka-serde-tools/wire-runtime-jvm-4.3.0.jar:/usr/share/java/kafka-serde-tools/commons-logging-1.2.jar:/usr/share/java/kafka-serde-tools/scala-library-2.13.5.jar:/usr/share/java/kafka-serde-tools/jsr305-3.0.2.jar:/usr/share/java/kafka-serde-tools/error_prone_annotations-2.5.1.jar:/usr/share/java/kafka-serde-tools/kafka-connect-avro-converter-7.2.1.jar:/usr/share/java/kafka-serde-tools/kafka-streams-json-schema-serde-7.2.1.jar:/usr/share/java/kafka-serde-tools/kotlin-stdlib-jdk8-1.6.10.jar:/usr/share/java/kafka-serde-tools/kotlin-scripting-common-1.6.0.jar:/usr/share/java/kafka-serde-tools/kotlin-scripting-jvm-1.6.0.jar:/usr/share/java/kafka-serde-tools/kafka-json-schema-serializer-7.2.1.jar:/usr/share/java/kafka-serde-tools/validation-api-2.0.1.Final.jar:/usr/share/java/kafka-serde-tools/proto-google-common-protos-2.5.1.jar:/usr/share/java/kafka-serde-tools/protobuf-java-3.19.4.jar:/usr/share/java/kafka-serde-tools/json-20220320.jar:/usr/share/java/kafka-serde-tools/jackson-datatype-guava-2.13.2.jar:/usr/share/java/kafka-serde-tools/jackson-module-parameter-names-2.13.2.jar:/usr/share/java/kafka-serde-tools/kafka-schema-serializer-7.2.1.jar:/usr/share/java/kafka-serde-tools/kafka-streams-7.2.1-ccs.jar:/usr/share/java/kafka-serde-tools/checker-qual-3.8.0.jar:/usr/share/java/kafka-serde-tools/guava-30.1.1-jre.jar:/usr/share/java/kafka-serde-tools/handy-uri-templates-2.1.8.jar:/usr/share/java/kafka-serde-tools/wire-schema-jvm-4.3.0.jar:/usr/share/java/kafka-serde-tools/okio-jvm-3.0.0.jar:/usr/share/java/kafka-serde-tools/kafka-avro-serializer-7.2.1.jar:/usr/share/java/kafka-serde-tools/kafka-streams-protobuf-serde-7.2.1.jar:/usr/share/java/kafka-serde-tools/rocksdbjni-6.29.4.1.jar:/usr/share/java/kafka-serde-tools/kafka-connect-json-schema-converter-7.2.1.jar:/usr/share/java/kafka-serde-tools/kafka-streams-avro-serde-7.2.1.jar:/usr/share/java/kafka-serde-tools/jackson-datatype-jdk8-2.13.2.jar:/usr/share/java/kafka-serde-tools/commons-validator-1.7.jar:/usr/share/java/kafka-serde-tools/kotlin-script-runtime-1.6.0.jar:/usr/share/java/kafka-serde-tools/mbknor-jackson-jsonschema_2.13-1.0.39.jar:/usr/share/java/kafka-serde-tools/jackson-core-2.13.2.jar:/usr/share/java/kafka-serde-tools/protobuf-java-util-3.19.4.jar:/usr/share/java/kafka-serde-tools/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/usr/share/java/kafka-serde-tools/logredactor-metrics-1.0.10.jar:/usr/share/java/kafka-serde-tools/commons-digester-2.1.jar:/usr/share/java/kafka-serde-tools/kotlin-scripting-compiler-impl-embeddable-1.6.0.jar:/usr/share/java/monitoring-interceptors/monitoring-interceptors-7.2.1.jar:/usr/bin/../share/java/kafka/zstd-jni-1.5.2-1.jar:/usr/bin/../share/java/kafka/argparse4j-0.7.0.jar:/usr/bin/../share/java/kafka/maven-artifact-3.8.4.jar:/usr/bin/../share/java/kafka/netty-transport-native-unix-common-4.1.73.Final.jar:/usr/bin/../share/java/kafka/kafka-server-common-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jackson-databind-2.13.2.2.jar:/usr/bin/../share/java/kafka/connect-runtime-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/audience-annotations-0.5.0.jar:/usr/bin/../share/java/kafka/scala-java8-compat_2.13-1.0.2.jar:/usr/bin/../share/java/kafka/commons-lang3-3.8.1.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-2.34.jar:/usr/bin/../share/java/kafka/javassist-3.27.0-GA.jar:/usr/bin/../share/java/kafka/connect-mirror-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/netty-buffer-4.1.73.Final.jar:/usr/bin/../share/java/kafka/kafka.jar:/usr/bin/../share/java/kafka/kafka-log4j-appender-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jose4j-0.7.9.jar:/usr/bin/../share/java/kafka/netty-resolver-4.1.73.Final.jar:/usr/bin/../share/java/kafka/commons-cli-1.4.jar:/usr/bin/../share/java/kafka/connect-mirror-client-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jersey-client-2.34.jar:/usr/bin/../share/java/kafka/netty-transport-native-epoll-4.1.73.Final.jar:/usr/bin/../share/java/kafka/reload4j-1.2.19.jar:/usr/bin/../share/java/kafka/kafka-raft-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jakarta.annotation-api-1.3.5.jar:/usr/bin/../share/java/kafka/osgi-resource-locator-1.0.3.jar:/usr/bin/../share/java/kafka/hk2-api-2.6.1.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-base-2.13.2.jar:/usr/bin/../share/java/kafka/jackson-annotations-2.13.2.jar:/usr/bin/../share/java/kafka/netty-transport-4.1.73.Final.jar:/usr/bin/../share/java/kafka/lz4-java-1.8.0.jar:/usr/bin/../share/java/kafka/metrics-core-2.2.0.jar:/usr/bin/../share/java/kafka/kafka_2.13-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jetty-servlets-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/netty-transport-classes-epoll-4.1.73.Final.jar:/usr/bin/../share/java/kafka/slf4j-api-1.7.36.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-json-provider-2.13.2.jar:/usr/bin/../share/java/kafka/jaxb-api-2.3.0.jar:/usr/bin/../share/java/kafka/jakarta.activation-api-1.2.2.jar:/usr/bin/../share/java/kafka/connect-api-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jetty-client-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jakarta.inject-2.6.1.jar:/usr/bin/../share/java/kafka/slf4j-reload4j-1.7.36.jar:/usr/bin/../share/java/kafka/jackson-module-jaxb-annotations-2.13.2.jar:/usr/bin/../share/java/kafka/netty-codec-4.1.73.Final.jar:/usr/bin/../share/java/kafka/kafka-metadata-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jetty-http-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/kafka-tools-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/scala-logging_2.13-3.9.4.jar:/usr/bin/../share/java/kafka/netty-tcnative-classes-2.0.46.Final.jar:/usr/bin/../share/java/kafka/activation-1.1.1.jar:/usr/bin/../share/java/kafka/trogdor-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-core-2.34.jar:/usr/bin/../share/java/kafka/kafka-streams-test-utils-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/metrics-core-4.1.12.1.jar:/usr/bin/../share/java/kafka/netty-common-4.1.73.Final.jar:/usr/bin/../share/java/kafka/scala-collection-compat_2.13-2.6.0.jar:/usr/bin/../share/java/kafka/connect-basic-auth-extension-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jopt-simple-5.0.4.jar:/usr/bin/../share/java/kafka/kafka-storage-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-shell-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-scala_2.13-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jetty-io-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/hk2-utils-2.6.1.jar:/usr/bin/../share/java/kafka/reflections-0.9.12.jar:/usr/bin/../share/java/kafka/javax.ws.rs-api-2.1.1.jar:/usr/bin/../share/java/kafka/jline-3.21.0.jar:/usr/bin/../share/java/kafka/hk2-locator-2.6.1.jar:/usr/bin/../share/java/kafka/jackson-dataformat-csv-2.13.2.jar:/usr/bin/../share/java/kafka/scala-reflect-2.13.8.jar:/usr/bin/../share/java/kafka/zookeeper-3.6.3.jar:/usr/bin/../share/java/kafka/jetty-continuation-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/javax.servlet-api-3.1.0.jar:/usr/bin/../share/java/kafka/jetty-util-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jackson-module-scala_2.13-2.13.2.jar:/usr/bin/../share/java/kafka/kafka-streams-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/snappy-java-1.1.8.4.jar:/usr/bin/../share/java/kafka/kafka-streams-examples-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/jakarta.ws.rs-api-2.1.6.jar:/usr/bin/../share/java/kafka/jakarta.xml.bind-api-2.3.3.jar:/usr/bin/../share/java/kafka/kafka-storage-api-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/scala-library-2.13.8.jar:/usr/bin/../share/java/kafka/jetty-security-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jersey-server-2.34.jar:/usr/bin/../share/java/kafka/jetty-servlet-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/plexus-utils-3.3.0.jar:/usr/bin/../share/java/kafka/rocksdbjni-6.29.4.1.jar:/usr/bin/../share/java/kafka/aopalliance-repackaged-2.6.1.jar:/usr/bin/../share/java/kafka/jakarta.validation-api-2.0.2.jar:/usr/bin/../share/java/kafka/paranamer-2.8.jar:/usr/bin/../share/java/kafka/jackson-datatype-jdk8-2.13.2.jar:/usr/bin/../share/java/kafka/jersey-hk2-2.34.jar:/usr/bin/../share/java/kafka/connect-transforms-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-clients-7.2.1-ccs.jar:/usr/bin/../share/java/kafka/netty-handler-4.1.73.Final.jar:/usr/bin/../share/java/kafka/zookeeper-jute-3.6.3.jar:/usr/bin/../share/java/kafka/jackson-core-2.13.2.jar:/usr/bin/../share/java/kafka/jetty-server-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jersey-common-2.34.jar:/usr/bin/../share/java/kafka/jetty-util-ajax-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/connect-json-7.2.1-ccs.jar:/usr/bin/../share/java/confluent-telemetry/confluent-metrics-7.2.1-ce.jar
connect    |   os.spec = Linux, amd64, 5.15.167.4-microsoft-standard-WSL2
connect    |   os.vcpus = 12
connect    |  (org.apache.kafka.connect.runtime.WorkerInfo)
connect    | [2025-06-17 05:57:25,073] INFO Scanning for plugin classes. This might take a moment ... (org.apache.kafka.connect.cli.ConnectDistributed)
connect    | [2025-06-17 05:57:25,104] INFO Loading plugin from: /usr/share/java/cp-base-new (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:26,391] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/cp-base-new/} (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:26,391] INFO Added plugin 'org.apache.kafka.common.config.provider.FileConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:26,391] INFO Added plugin 'org.apache.kafka.common.config.provider.DirectoryConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:26,391] INFO Added plugin 'org.apache.kafka.connect.connector.policy.AllConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:26,392] INFO Added plugin 'org.apache.kafka.connect.connector.policy.PrincipalConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:26,392] INFO Added plugin 'org.apache.kafka.connect.connector.policy.NoneConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:26,396] INFO Loading plugin from: /usr/share/java/confluent-common (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:26,413] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-common/} (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:26,414] INFO Loading plugin from: /usr/share/java/confluent-telemetry (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:27,134] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-telemetry/} (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:27,134] INFO Loading plugin from: /usr/share/java/confluent-hub-client (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:27,408] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-hub-client/} (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:27,409] INFO Loading plugin from: /usr/share/java/acl (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
kafka      | [2025-06-17 05:57:28,187] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
kafka      | [2025-06-17 05:57:28,188] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
connect    | [2025-06-17 05:57:34,119] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/acl/} (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,119] INFO Added plugin 'org.apache.kafka.connect.tools.VerifiableSinkConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,120] INFO Added plugin 'org.apache.kafka.connect.tools.MockSinkConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,120] INFO Added plugin 'org.apache.kafka.connect.tools.VerifiableSourceConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,120] INFO Added plugin 'org.apache.kafka.connect.tools.MockSourceConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,120] INFO Added plugin 'org.apache.kafka.connect.tools.SchemaSourceConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,120] INFO Added plugin 'org.apache.kafka.connect.converters.DoubleConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,120] INFO Added plugin 'org.apache.kafka.connect.converters.FloatConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,120] INFO Added plugin 'io.confluent.connect.avro.AvroConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,120] INFO Added plugin 'org.apache.kafka.connect.converters.ByteArrayConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,121] INFO Added plugin 'org.apache.kafka.connect.converters.IntegerConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,121] INFO Added plugin 'org.apache.kafka.connect.converters.LongConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,122] INFO Added plugin 'io.confluent.connect.json.JsonSchemaConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,122] INFO Added plugin 'io.confluent.connect.protobuf.ProtobufConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,122] INFO Added plugin 'org.apache.kafka.connect.json.JsonConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,122] INFO Added plugin 'org.apache.kafka.connect.storage.StringConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,122] INFO Added plugin 'org.apache.kafka.connect.converters.ShortConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,122] INFO Added plugin 'org.apache.kafka.connect.storage.SimpleHeaderConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,123] INFO Added plugin 'org.apache.kafka.connect.transforms.ReplaceField$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,123] INFO Added plugin 'org.apache.kafka.connect.transforms.ReplaceField$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,123] INFO Added plugin 'org.apache.kafka.connect.transforms.SetSchemaMetadata$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,123] INFO Added plugin 'org.apache.kafka.connect.transforms.Filter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,123] INFO Added plugin 'org.apache.kafka.connect.transforms.HeaderFrom$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,123] INFO Added plugin 'org.apache.kafka.connect.transforms.InsertField$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,123] INFO Added plugin 'org.apache.kafka.connect.transforms.TimestampConverter$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,124] INFO Added plugin 'org.apache.kafka.connect.transforms.MaskField$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,124] INFO Added plugin 'org.apache.kafka.connect.transforms.TimestampRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,124] INFO Added plugin 'org.apache.kafka.connect.transforms.RegexRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,124] INFO Added plugin 'org.apache.kafka.connect.transforms.HoistField$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,125] INFO Added plugin 'org.apache.kafka.connect.transforms.ValueToKey' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,125] INFO Added plugin 'org.apache.kafka.connect.transforms.MaskField$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,126] INFO Added plugin 'org.apache.kafka.connect.transforms.DropHeaders' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,126] INFO Added plugin 'org.apache.kafka.connect.transforms.Cast$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,126] INFO Added plugin 'org.apache.kafka.connect.transforms.Cast$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,126] INFO Added plugin 'org.apache.kafka.connect.runtime.PredicatedTransformation' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,126] INFO Added plugin 'org.apache.kafka.connect.transforms.ExtractField$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,126] INFO Added plugin 'org.apache.kafka.connect.transforms.Flatten$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,126] INFO Added plugin 'org.apache.kafka.connect.transforms.InsertHeader' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,126] INFO Added plugin 'org.apache.kafka.connect.transforms.InsertField$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,126] INFO Added plugin 'org.apache.kafka.connect.transforms.Flatten$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,127] INFO Added plugin 'org.apache.kafka.connect.transforms.HeaderFrom$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,127] INFO Added plugin 'org.apache.kafka.connect.transforms.SetSchemaMetadata$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,127] INFO Added plugin 'org.apache.kafka.connect.transforms.ExtractField$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,127] INFO Added plugin 'org.apache.kafka.connect.transforms.TimestampConverter$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,127] INFO Added plugin 'org.apache.kafka.connect.transforms.HoistField$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,127] INFO Added plugin 'org.apache.kafka.connect.transforms.predicates.HasHeaderKey' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,127] INFO Added plugin 'org.apache.kafka.connect.transforms.predicates.RecordIsTombstone' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,128] INFO Added plugin 'org.apache.kafka.connect.transforms.predicates.TopicNameMatches' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,128] INFO Added plugin 'io.confluent.kafka.secretregistry.client.config.provider.SecretConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,128] INFO Added plugin 'io.confluent.connect.security.ConnectSecurityExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:34,146] INFO Loading plugin from: /usr/share/java/schema-registry (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:35,110] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/schema-registry/} (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:35,111] INFO Loading plugin from: /usr/share/java/rest-utils (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:35,514] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/rest-utils/} (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:35,515] INFO Loading plugin from: /usr/share/java/kafka-serde-tools (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:35,997] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/kafka-serde-tools/} (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:35,997] INFO Loading plugin from: /usr/share/java/monitoring-interceptors (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:36,221] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/monitoring-interceptors/} (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:36,222] INFO Loading plugin from: /usr/share/java/confluent-control-center (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:40,737] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-control-center/} (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:40,752] INFO Loading plugin from: /usr/share/java/kafka (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:41,816] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/kafka/} (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:41,816] INFO Added plugin 'org.apache.kafka.connect.mirror.MirrorSourceConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:41,816] INFO Added plugin 'org.apache.kafka.connect.mirror.MirrorHeartbeatConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:41,816] INFO Added plugin 'org.apache.kafka.connect.mirror.MirrorCheckpointConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:41,816] INFO Added plugin 'org.apache.kafka.connect.rest.basic.auth.extension.BasicAuthSecurityRestExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,618] INFO Registered loader: jdk.internal.loader.ClassLoaders$AppClassLoader@2c13da15 (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,620] INFO Added aliases 'MirrorCheckpointConnector' and 'MirrorCheckpoint' to plugin 'org.apache.kafka.connect.mirror.MirrorCheckpointConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,621] INFO Added aliases 'MirrorHeartbeatConnector' and 'MirrorHeartbeat' to plugin 'org.apache.kafka.connect.mirror.MirrorHeartbeatConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,621] INFO Added aliases 'MirrorSourceConnector' and 'MirrorSource' to plugin 'org.apache.kafka.connect.mirror.MirrorSourceConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,621] INFO Added aliases 'MockSinkConnector' and 'MockSink' to plugin 'org.apache.kafka.connect.tools.MockSinkConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,621] INFO Added aliases 'MockSourceConnector' and 'MockSource' to plugin 'org.apache.kafka.connect.tools.MockSourceConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,622] INFO Added aliases 'SchemaSourceConnector' and 'SchemaSource' to plugin 'org.apache.kafka.connect.tools.SchemaSourceConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,622] INFO Added aliases 'VerifiableSinkConnector' and 'VerifiableSink' to plugin 'org.apache.kafka.connect.tools.VerifiableSinkConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,622] INFO Added aliases 'VerifiableSourceConnector' and 'VerifiableSource' to plugin 'org.apache.kafka.connect.tools.VerifiableSourceConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,622] INFO Added aliases 'AvroConverter' and 'Avro' to plugin 'io.confluent.connect.avro.AvroConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,623] INFO Added aliases 'JsonSchemaConverter' and 'JsonSchema' to plugin 'io.confluent.connect.json.JsonSchemaConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,623] INFO Added aliases 'ProtobufConverter' and 'Protobuf' to plugin 'io.confluent.connect.protobuf.ProtobufConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,623] INFO Added aliases 'ByteArrayConverter' and 'ByteArray' to plugin 'org.apache.kafka.connect.converters.ByteArrayConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,623] INFO Added aliases 'DoubleConverter' and 'Double' to plugin 'org.apache.kafka.connect.converters.DoubleConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,623] INFO Added aliases 'FloatConverter' and 'Float' to plugin 'org.apache.kafka.connect.converters.FloatConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,623] INFO Added aliases 'IntegerConverter' and 'Integer' to plugin 'org.apache.kafka.connect.converters.IntegerConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,623] INFO Added aliases 'LongConverter' and 'Long' to plugin 'org.apache.kafka.connect.converters.LongConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,624] INFO Added aliases 'ShortConverter' and 'Short' to plugin 'org.apache.kafka.connect.converters.ShortConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,624] INFO Added aliases 'JsonConverter' and 'Json' to plugin 'org.apache.kafka.connect.json.JsonConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,624] INFO Added aliases 'StringConverter' and 'String' to plugin 'org.apache.kafka.connect.storage.StringConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,624] INFO Added aliases 'ByteArrayConverter' and 'ByteArray' to plugin 'org.apache.kafka.connect.converters.ByteArrayConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,624] INFO Added aliases 'DoubleConverter' and 'Double' to plugin 'org.apache.kafka.connect.converters.DoubleConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,624] INFO Added aliases 'FloatConverter' and 'Float' to plugin 'org.apache.kafka.connect.converters.FloatConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,625] INFO Added aliases 'IntegerConverter' and 'Integer' to plugin 'org.apache.kafka.connect.converters.IntegerConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,625] INFO Added aliases 'LongConverter' and 'Long' to plugin 'org.apache.kafka.connect.converters.LongConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,625] INFO Added aliases 'ShortConverter' and 'Short' to plugin 'org.apache.kafka.connect.converters.ShortConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,625] INFO Added aliases 'JsonConverter' and 'Json' to plugin 'org.apache.kafka.connect.json.JsonConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,625] INFO Added aliases 'SimpleHeaderConverter' and 'Simple' to plugin 'org.apache.kafka.connect.storage.SimpleHeaderConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,625] INFO Added aliases 'StringConverter' and 'String' to plugin 'org.apache.kafka.connect.storage.StringConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,626] INFO Added aliases 'PredicatedTransformation' and 'Predicated' to plugin 'org.apache.kafka.connect.runtime.PredicatedTransformation' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,626] INFO Added alias 'DropHeaders' to plugin 'org.apache.kafka.connect.transforms.DropHeaders' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,627] INFO Added alias 'Filter' to plugin 'org.apache.kafka.connect.transforms.Filter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,627] INFO Added alias 'InsertHeader' to plugin 'org.apache.kafka.connect.transforms.InsertHeader' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,627] INFO Added alias 'RegexRouter' to plugin 'org.apache.kafka.connect.transforms.RegexRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,627] INFO Added alias 'TimestampRouter' to plugin 'org.apache.kafka.connect.transforms.TimestampRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,628] INFO Added alias 'ValueToKey' to plugin 'org.apache.kafka.connect.transforms.ValueToKey' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,628] INFO Added alias 'HasHeaderKey' to plugin 'org.apache.kafka.connect.transforms.predicates.HasHeaderKey' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,628] INFO Added alias 'RecordIsTombstone' to plugin 'org.apache.kafka.connect.transforms.predicates.RecordIsTombstone' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,628] INFO Added alias 'TopicNameMatches' to plugin 'org.apache.kafka.connect.transforms.predicates.TopicNameMatches' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,628] INFO Added alias 'ConnectSecurityExtension' to plugin 'io.confluent.connect.security.ConnectSecurityExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,628] INFO Added alias 'BasicAuthSecurityRestExtension' to plugin 'org.apache.kafka.connect.rest.basic.auth.extension.BasicAuthSecurityRestExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,628] INFO Added aliases 'AllConnectorClientConfigOverridePolicy' and 'All' to plugin 'org.apache.kafka.connect.connector.policy.AllConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,629] INFO Added aliases 'NoneConnectorClientConfigOverridePolicy' and 'None' to plugin 'org.apache.kafka.connect.connector.policy.NoneConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,629] INFO Added aliases 'PrincipalConnectorClientConfigOverridePolicy' and 'Principal' to plugin 'org.apache.kafka.connect.connector.policy.PrincipalConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
connect    | [2025-06-17 05:57:44,739] INFO DistributedConfig values:
connect    |   access.control.allow.methods =
connect    |   access.control.allow.origin =
connect    |   admin.listeners = null
connect    |   bootstrap.servers = [kafka:29092]
connect    |   client.dns.lookup = use_all_dns_ips
connect    |   client.id =
connect    |   config.providers = []
connect    |   config.storage.replication.factor = 1
connect    |   config.storage.topic = docker-connect-configs
connect    |   connect.protocol = sessioned
connect    |   connections.max.idle.ms = 540000
connect    |   connector.client.config.override.policy = All
connect    |   group.id = compose-connect-group
connect    |   header.converter = class org.apache.kafka.connect.storage.SimpleHeaderConverter
connect    |   heartbeat.interval.ms = 3000
connect    |   inter.worker.key.generation.algorithm = HmacSHA256
connect    |   inter.worker.key.size = null
connect    |   inter.worker.key.ttl.ms = 3600000
connect    |   inter.worker.signature.algorithm = HmacSHA256
connect    |   inter.worker.verification.algorithms = [HmacSHA256]
connect    |   key.converter = class org.apache.kafka.connect.json.JsonConverter
connect    |   listeners = [http://:8083]
connect    |   metadata.max.age.ms = 300000
connect    |   metric.reporters = []
connect    |   metrics.num.samples = 2
connect    |   metrics.recording.level = INFO
connect    |   metrics.sample.window.ms = 30000
connect    |   offset.flush.interval.ms = 10000
connect    |   offset.flush.timeout.ms = 5000
connect    |   offset.storage.partitions = 25
connect    |   offset.storage.replication.factor = 1
connect    |   offset.storage.topic = docker-connect-offsets
connect    |   plugin.path = [/usr/share/java, /usr/share/confluent-hub-components]
connect    |   rebalance.timeout.ms = 60000
connect    |   receive.buffer.bytes = 32768
connect    |   reconnect.backoff.max.ms = 1000
connect    |   reconnect.backoff.ms = 50
connect    |   request.timeout.ms = 40000
connect    |   response.http.headers.config =
connect    |   rest.advertised.host.name = connect
connect    |   rest.advertised.listener = null
connect    |   rest.advertised.port = null
connect    |   rest.extension.classes = []
connect    |   retry.backoff.ms = 100
connect    |   sasl.client.callback.handler.class = null
connect    |   sasl.jaas.config = null
connect    |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
connect    |   sasl.kerberos.min.time.before.relogin = 60000
connect    |   sasl.kerberos.service.name = null
connect    |   sasl.kerberos.ticket.renew.jitter = 0.05
connect    |   sasl.kerberos.ticket.renew.window.factor = 0.8
connect    |   sasl.login.callback.handler.class = null
connect    |   sasl.login.class = null
connect    |   sasl.login.connect.timeout.ms = null
connect    |   sasl.login.read.timeout.ms = null
connect    |   sasl.login.refresh.buffer.seconds = 300
connect    |   sasl.login.refresh.min.period.seconds = 60
connect    |   sasl.login.refresh.window.factor = 0.8
connect    |   sasl.login.refresh.window.jitter = 0.05
connect    |   sasl.login.retry.backoff.max.ms = 10000
connect    |   sasl.login.retry.backoff.ms = 100
connect    |   sasl.mechanism = GSSAPI
connect    |   sasl.oauthbearer.clock.skew.seconds = 30
connect    |   sasl.oauthbearer.expected.audience = null
connect    |   sasl.oauthbearer.expected.issuer = null
connect    |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
connect    |   sasl.oauthbearer.jwks.endpoint.url = null
connect    |   sasl.oauthbearer.scope.claim.name = scope
connect    |   sasl.oauthbearer.sub.claim.name = sub
connect    |   sasl.oauthbearer.token.endpoint.url = null
connect    |   scheduled.rebalance.max.delay.ms = 300000
connect    |   security.protocol = PLAINTEXT
connect    |   send.buffer.bytes = 131072
connect    |   session.timeout.ms = 10000
connect    |   socket.connection.setup.timeout.max.ms = 30000
connect    |   socket.connection.setup.timeout.ms = 10000
connect    |   ssl.cipher.suites = null
connect    |   ssl.client.auth = none
connect    |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
connect    |   ssl.endpoint.identification.algorithm = https
connect    |   ssl.engine.factory.class = null
connect    |   ssl.key.password = null
connect    |   ssl.keymanager.algorithm = SunX509
connect    |   ssl.keystore.certificate.chain = null
connect    |   ssl.keystore.key = null
connect    |   ssl.keystore.location = null
connect    |   ssl.keystore.password = null
connect    |   ssl.keystore.type = JKS
connect    |   ssl.protocol = TLSv1.3
connect    |   ssl.provider = null
connect    |   ssl.secure.random.implementation = null
connect    |   ssl.trustmanager.algorithm = PKIX
connect    |   ssl.truststore.certificates = null
connect    |   ssl.truststore.location = null
connect    |   ssl.truststore.password = null
connect    |   ssl.truststore.type = JKS
connect    |   status.storage.partitions = 5
connect    |   status.storage.replication.factor = 1
connect    |   status.storage.topic = docker-connect-status
connect    |   task.shutdown.graceful.timeout.ms = 5000
connect    |   topic.creation.enable = true
connect    |   topic.tracking.allow.reset = true
connect    |   topic.tracking.enable = true
connect    |   value.converter = class org.apache.kafka.connect.json.JsonConverter
connect    |   worker.sync.timeout.ms = 3000
connect    |   worker.unsync.backoff.ms = 300000
connect    |  (org.apache.kafka.connect.runtime.distributed.DistributedConfig)
connect    | [2025-06-17 05:57:44,746] INFO Creating Kafka admin client (org.apache.kafka.connect.util.ConnectUtils)
connect    | [2025-06-17 05:57:44,752] INFO AdminClientConfig values:
connect    |   bootstrap.servers = [kafka:29092]
connect    |   client.dns.lookup = use_all_dns_ips
connect    |   client.id =
connect    |   connections.max.idle.ms = 300000
connect    |   default.api.timeout.ms = 60000
connect    |   metadata.max.age.ms = 300000
connect    |   metric.reporters = []
connect    |   metrics.num.samples = 2
connect    |   metrics.recording.level = INFO
connect    |   metrics.sample.window.ms = 30000
connect    |   receive.buffer.bytes = 65536
connect    |   reconnect.backoff.max.ms = 1000
connect    |   reconnect.backoff.ms = 50
connect    |   request.timeout.ms = 30000
connect    |   retries = 2147483647
connect    |   retry.backoff.ms = 100
connect    |   sasl.client.callback.handler.class = null
connect    |   sasl.jaas.config = null
connect    |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
connect    |   sasl.kerberos.min.time.before.relogin = 60000
connect    |   sasl.kerberos.service.name = null
connect    |   sasl.kerberos.ticket.renew.jitter = 0.05
connect    |   sasl.kerberos.ticket.renew.window.factor = 0.8
connect    |   sasl.login.callback.handler.class = null
connect    |   sasl.login.class = null
connect    |   sasl.login.connect.timeout.ms = null
connect    |   sasl.login.read.timeout.ms = null
connect    |   sasl.login.refresh.buffer.seconds = 300
connect    |   sasl.login.refresh.min.period.seconds = 60
connect    |   sasl.login.refresh.window.factor = 0.8
connect    |   sasl.login.refresh.window.jitter = 0.05
connect    |   sasl.login.retry.backoff.max.ms = 10000
connect    |   sasl.login.retry.backoff.ms = 100
connect    |   sasl.mechanism = GSSAPI
connect    |   sasl.oauthbearer.clock.skew.seconds = 30
connect    |   sasl.oauthbearer.expected.audience = null
connect    |   sasl.oauthbearer.expected.issuer = null
connect    |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
connect    |   sasl.oauthbearer.jwks.endpoint.url = null
connect    |   sasl.oauthbearer.scope.claim.name = scope
connect    |   sasl.oauthbearer.sub.claim.name = sub
connect    |   sasl.oauthbearer.token.endpoint.url = null
connect    |   security.protocol = PLAINTEXT
connect    |   security.providers = null
connect    |   send.buffer.bytes = 131072
connect    |   socket.connection.setup.timeout.max.ms = 30000
connect    |   socket.connection.setup.timeout.ms = 10000
connect    |   ssl.cipher.suites = null
connect    |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
connect    |   ssl.endpoint.identification.algorithm = https
connect    |   ssl.engine.factory.class = null
connect    |   ssl.key.password = null
connect    |   ssl.keymanager.algorithm = SunX509
connect    |   ssl.keystore.certificate.chain = null
connect    |   ssl.keystore.key = null
connect    |   ssl.keystore.location = null
connect    |   ssl.keystore.password = null
connect    |   ssl.keystore.type = JKS
connect    |   ssl.protocol = TLSv1.3
connect    |   ssl.provider = null
connect    |   ssl.secure.random.implementation = null
connect    |   ssl.trustmanager.algorithm = PKIX
connect    |   ssl.truststore.certificates = null
connect    |   ssl.truststore.location = null
connect    |   ssl.truststore.password = null
connect    |   ssl.truststore.type = JKS
connect    |  (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,893] WARN The configuration 'config.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,893] WARN The configuration 'rest.advertised.host.name' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,893] WARN The configuration 'group.id' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,893] WARN The configuration 'status.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,893] WARN The configuration 'plugin.path' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,893] WARN The configuration 'offset.flush.interval.ms' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,893] WARN The configuration 'rest.port' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,893] WARN The configuration 'config.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,893] WARN The configuration 'key.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,894] WARN The configuration 'zookeeper.connect' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,894] WARN The configuration 'status.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,894] WARN The configuration 'value.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,894] WARN The configuration 'offset.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,894] WARN The configuration 'offset.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,894] WARN The configuration 'value.converter' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,894] WARN The configuration 'key.converter' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
connect    | [2025-06-17 05:57:44,895] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
connect    | [2025-06-17 05:57:44,895] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
connect    | [2025-06-17 05:57:44,895] INFO Kafka startTimeMs: 1750139864894 (org.apache.kafka.common.utils.AppInfoParser)
connect    | [2025-06-17 05:57:45,706] INFO Kafka cluster ID: giJkw9-kTvOOXXJyYfUXQw (org.apache.kafka.connect.util.ConnectUtils)
connect    | [2025-06-17 05:57:45,708] INFO App info kafka.admin.client for adminclient-1 unregistered (org.apache.kafka.common.utils.AppInfoParser)
connect    | [2025-06-17 05:57:45,722] INFO Metrics scheduler closed (org.apache.kafka.common.metrics.Metrics)
connect    | [2025-06-17 05:57:45,722] INFO Closing reporter org.apache.kafka.common.metrics.JmxReporter (org.apache.kafka.common.metrics.Metrics)
connect    | [2025-06-17 05:57:45,723] INFO Metrics reporters closed (org.apache.kafka.common.metrics.Metrics)
connect    | [2025-06-17 05:57:45,737] INFO Logging initialized @21368ms to org.eclipse.jetty.util.log.Slf4jLog (org.eclipse.jetty.util.log)
connect    | [2025-06-17 05:57:45,814] INFO Added connector for http://:8083 (org.apache.kafka.connect.runtime.rest.RestServer)
connect    | [2025-06-17 05:57:45,816] INFO Initializing REST server (org.apache.kafka.connect.runtime.rest.RestServer)
connect    | [2025-06-17 05:57:45,828] INFO jetty-9.4.44.v20210927; built: 2021-09-27T23:02:44.612Z; git: 8da83308eeca865e495e53ef315a249d63ba9332; jvm 11.0.15+10-LTS (org.eclipse.jetty.server.Server)
connect    | [2025-06-17 05:57:45,875] INFO Started http_8083@7c83aa9a{HTTP/1.1, (http/1.1)}{0.0.0.0:8083} (org.eclipse.jetty.server.AbstractConnector)
connect    | [2025-06-17 05:57:45,875] INFO Started @21506ms (org.eclipse.jetty.server.Server)
connect    | [2025-06-17 05:57:45,919] INFO Advertised URI: http://connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
connect    | [2025-06-17 05:57:45,920] INFO REST server listening at http://172.20.0.4:8083/, advertising URL http://connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
connect    | [2025-06-17 05:57:45,920] INFO Advertised URI: http://connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
connect    | [2025-06-17 05:57:45,921] INFO REST admin endpoints at http://connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
connect    | [2025-06-17 05:57:45,921] INFO Advertised URI: http://connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
connect    | [2025-06-17 05:57:45,930] INFO Creating Kafka admin client (org.apache.kafka.connect.util.ConnectUtils)
connect    | [2025-06-17 05:57:45,931] INFO AdminClientConfig values:
connect    |   bootstrap.servers = [kafka:29092]
connect    |   client.dns.lookup = use_all_dns_ips
connect    |   client.id =
connect    |   connections.max.idle.ms = 300000
connect    |   default.api.timeout.ms = 60000
connect    |   metadata.max.age.ms = 300000
connect    |   metric.reporters = []
connect    |   metrics.num.samples = 2
connect    |   metrics.recording.level = INFO
connect    |   metrics.sample.window.ms = 30000
connect    |   receive.buffer.bytes = 65536
connect    |   reconnect.backoff.max.ms = 1000
connect    |   reconnect.backoff.ms = 50
connect    |   request.timeout.ms = 30000
connect    |   retries = 2147483647
connect    |   retry.backoff.ms = 100
connect    |   sasl.client.callback.handler.class = null
connect    |   sasl.jaas.config = null
connect    |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
connect    |   sasl.kerberos.min.time.before.relogin = 60000
connect    |   sasl.kerberos.service.name = null
connect    |   sasl.kerberos.ticket.renew.jitter = 0.05
connect    |   sasl.kerberos.ticket.renew.window.factor = 0.8
connect    |   sasl.login.callback.handler.class = null
connect    |   sasl.login.class = null
connect    |   sasl.login.connect.timeout.ms = null
connect    |   sasl.login.read.timeout.ms = null
connect    |   sasl.login.refresh.buffer.seconds = 300
kafka      | [2025-06-17 05:57:46,857] INFO Creating topic docker-connect-offsets with configuration {cleanup.policy=compact} and initial partition assignment HashMap(0 -> ArrayBuffer(1), 1 -> ArrayBuffer(1), 2 -> ArrayBuffer(1), 3 -> ArrayBuffer(1), 4 -> ArrayBuffer(1), 5 -> ArrayBuffer(1), 6 -> ArrayBuffer(1), 7 -> ArrayBuffer(1), 8 -> ArrayBuffer(1), 9 -> ArrayBuffer(1), 10 -> ArrayBuffer(1), 11 -> ArrayBuffer(1), 12 -> ArrayBuffer(1), 13 -> ArrayBuffer(1), 14 -> ArrayBuffer(1), 15 -> ArrayBuffer(1), 16 -> ArrayBuffer(1), 17 -> ArrayBuffer(1), 18 -> ArrayBuffer(1), 19 -> ArrayBuffer(1), 20 -> ArrayBuffer(1), 21 -> ArrayBuffer(1), 22 -> ArrayBuffer(1), 23 -> ArrayBuffer(1), 24 -> ArrayBuffer(1)) (kafka.zk.AdminZkClient)
connect    |   sasl.login.refresh.min.period.seconds = 60
connect    |   sasl.login.refresh.window.factor = 0.8
connect    |   sasl.login.refresh.window.jitter = 0.05
connect    |   sasl.login.retry.backoff.max.ms = 10000
connect    |   sasl.login.retry.backoff.ms = 100
connect    |   sasl.mechanism = GSSAPI
connect    |   sasl.oauthbearer.clock.skew.seconds = 30
connect    |   sasl.oauthbearer.expected.audience = null
connect    |   sasl.oauthbearer.expected.issuer = null
kafka      | [2025-06-17 05:57:46,989] INFO [Controller id=1] New topics: [Set(docker-connect-offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(docker-connect-offsets,Some(EEtvj3MmSFm8qT8N2dU9Gw),HashMap(docker-connect-offsets-5 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-12 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-21 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-23 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-24 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-11 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-20 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-17 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-14 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-15 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-6 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-9 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-8 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-18 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
connect    |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
kafka      | [2025-06-17 05:57:47,001] INFO [Controller id=1] New partition creation callback for docker-connect-offsets-5,docker-connect-offsets-13,docker-connect-offsets-12,docker-connect-offsets-2,docker-connect-offsets-0,docker-connect-offsets-3,docker-connect-offsets-21,docker-connect-offsets-23,docker-connect-offsets-4,docker-connect-offsets-16,docker-connect-offsets-24,docker-connect-offsets-11,docker-connect-offsets-20,docker-connect-offsets-17,docker-connect-offsets-14,docker-connect-offsets-15,docker-connect-offsets-6,docker-connect-offsets-1,docker-connect-offsets-9,docker-connect-offsets-7,docker-connect-offsets-10,docker-connect-offsets-8,docker-connect-offsets-18,docker-connect-offsets-22,docker-connect-offsets-19 (kafka.controller.KafkaController)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:47,012] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-5 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:47,015] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-13 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.url = null
kafka      | [2025-06-17 05:57:47,016] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-12 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.oauthbearer.scope.claim.name = scope
kafka      | [2025-06-17 05:57:47,016] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-2 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.oauthbearer.sub.claim.name = sub
kafka      | [2025-06-17 05:57:47,016] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.oauthbearer.token.endpoint.url = null
kafka      | [2025-06-17 05:57:47,018] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-3 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   security.protocol = PLAINTEXT
kafka      | [2025-06-17 05:57:47,019] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-21 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   security.providers = null
kafka      | [2025-06-17 05:57:47,019] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-23 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   send.buffer.bytes = 131072
kafka      | [2025-06-17 05:57:47,019] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-4 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   socket.connection.setup.timeout.max.ms = 30000
kafka      | [2025-06-17 05:57:47,019] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-16 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   socket.connection.setup.timeout.ms = 10000
kafka      | [2025-06-17 05:57:47,020] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-24 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.cipher.suites = null
kafka      | [2025-06-17 05:57:47,020] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-11 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
kafka      | [2025-06-17 05:57:47,020] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-20 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.endpoint.identification.algorithm = https
kafka      | [2025-06-17 05:57:47,020] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-17 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.engine.factory.class = null
kafka      | [2025-06-17 05:57:47,020] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-14 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.key.password = null
kafka      | [2025-06-17 05:57:47,020] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-15 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.keymanager.algorithm = SunX509
kafka      | [2025-06-17 05:57:47,020] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-6 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.keystore.certificate.chain = null
kafka      | [2025-06-17 05:57:47,020] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-1 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.keystore.key = null
kafka      | [2025-06-17 05:57:47,020] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-9 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.keystore.location = null
kafka      | [2025-06-17 05:57:47,021] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-7 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.keystore.password = null
kafka      | [2025-06-17 05:57:47,021] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-10 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.keystore.type = JKS
kafka      | [2025-06-17 05:57:47,021] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-8 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.protocol = TLSv1.3
kafka      | [2025-06-17 05:57:47,021] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-18 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.provider = null
kafka      | [2025-06-17 05:57:47,021] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-22 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.secure.random.implementation = null
kafka      | [2025-06-17 05:57:47,021] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-19 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.trustmanager.algorithm = PKIX
kafka      | [2025-06-17 05:57:47,021] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
connect    |   ssl.truststore.certificates = null
kafka      | [2025-06-17 05:57:47,042] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-15 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   ssl.truststore.location = null
kafka      | [2025-06-17 05:57:47,043] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-14 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   ssl.truststore.password = null
kafka      | [2025-06-17 05:57:47,043] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-9 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   ssl.truststore.type = JKS
kafka      | [2025-06-17 05:57:47,043] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-2 from NonExistentReplica to NewReplica (state.change.logger)
connect    |  (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,043] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-21 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,936] WARN The configuration 'config.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,043] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-20 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,936] WARN The configuration 'rest.advertised.host.name' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,044] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-13 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] WARN The configuration 'group.id' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,044] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-5 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] WARN The configuration 'status.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,044] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-12 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] WARN The configuration 'plugin.path' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,044] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-8 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] WARN The configuration 'offset.flush.interval.ms' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,044] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-11 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] WARN The configuration 'rest.port' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,044] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-23 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] WARN The configuration 'config.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,044] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-0 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] WARN The configuration 'key.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,044] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-17 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] WARN The configuration 'zookeeper.connect' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,044] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-24 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] WARN The configuration 'status.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,044] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-16 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] WARN The configuration 'value.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,044] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-4 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] WARN The configuration 'offset.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,045] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-19 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] WARN The configuration 'offset.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,045] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-22 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] WARN The configuration 'value.converter' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,045] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-18 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] WARN The configuration 'key.converter' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,045] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-1 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:47,045] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-3 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:47,045] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-7 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,937] INFO Kafka startTimeMs: 1750139865937 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:47,045] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-6 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,984] INFO Kafka cluster ID: giJkw9-kTvOOXXJyYfUXQw (org.apache.kafka.connect.util.ConnectUtils)
kafka      | [2025-06-17 05:57:47,045] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-10 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:45,985] INFO App info kafka.admin.client for adminclient-2 unregistered (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:47,045] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
connect    | [2025-06-17 05:57:45,994] INFO Metrics scheduler closed (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:47,460] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-5 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    | [2025-06-17 05:57:45,995] INFO Closing reporter org.apache.kafka.common.metrics.JmxReporter (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:47,462] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-13 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    | [2025-06-17 05:57:45,995] INFO Metrics reporters closed (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:47,465] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-12 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    | [2025-06-17 05:57:46,013] INFO Setting up All Policy for ConnectorClientConfigOverride. This will allow all client configurations to be overridden (org.apache.kafka.connect.connector.policy.AllConnectorClientConfigOverridePolicy)
kafka      | [2025-06-17 05:57:47,468] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    | [2025-06-17 05:57:46,027] INFO Creating Kafka admin client (org.apache.kafka.connect.util.ConnectUtils)
kafka      | [2025-06-17 05:57:47,469] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    | [2025-06-17 05:57:46,028] INFO AdminClientConfig values:
kafka      | [2025-06-17 05:57:47,469] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   bootstrap.servers = [kafka:29092]
kafka      | [2025-06-17 05:57:47,470] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-21 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   client.dns.lookup = use_all_dns_ips
kafka      | [2025-06-17 05:57:47,470] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-23 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   client.id =
kafka      | [2025-06-17 05:57:47,470] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   connections.max.idle.ms = 300000
kafka      | [2025-06-17 05:57:47,470] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-16 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   default.api.timeout.ms = 60000
kafka      | [2025-06-17 05:57:47,471] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-24 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   metadata.max.age.ms = 300000
kafka      | [2025-06-17 05:57:47,471] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-11 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   metric.reporters = []
kafka      | [2025-06-17 05:57:47,471] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-20 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   metrics.num.samples = 2
kafka      | [2025-06-17 05:57:47,471] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-17 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   metrics.recording.level = INFO
kafka      | [2025-06-17 05:57:47,471] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-14 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   metrics.sample.window.ms = 30000
kafka      | [2025-06-17 05:57:47,471] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-15 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   receive.buffer.bytes = 65536
kafka      | [2025-06-17 05:57:47,471] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-6 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   reconnect.backoff.max.ms = 1000
kafka      | [2025-06-17 05:57:47,471] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   reconnect.backoff.ms = 50
kafka      | [2025-06-17 05:57:47,471] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-9 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   request.timeout.ms = 30000
kafka      | [2025-06-17 05:57:47,472] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-7 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   retries = 2147483647
kafka      | [2025-06-17 05:57:47,472] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-10 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:47,472] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-8 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.client.callback.handler.class = null
kafka      | [2025-06-17 05:57:47,472] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-18 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.jaas.config = null
kafka      | [2025-06-17 05:57:47,472] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-22 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
kafka      | [2025-06-17 05:57:47,474] INFO [Controller id=1 epoch=1] Changed partition docker-connect-offsets-19 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.kerberos.min.time.before.relogin = 60000
kafka      | [2025-06-17 05:57:47,493] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-11 (state.change.logger)
connect    |   sasl.kerberos.service.name = null
kafka      | [2025-06-17 05:57:47,493] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-13 (state.change.logger)
connect    |   sasl.kerberos.ticket.renew.jitter = 0.05
kafka      | [2025-06-17 05:57:47,493] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-15 (state.change.logger)
connect    |   sasl.kerberos.ticket.renew.window.factor = 0.8
kafka      | [2025-06-17 05:57:47,493] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-17 (state.change.logger)
connect    |   sasl.login.callback.handler.class = null
kafka      | [2025-06-17 05:57:47,494] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-3 (state.change.logger)
connect    |   sasl.login.class = null
kafka      | [2025-06-17 05:57:47,494] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-5 (state.change.logger)
connect    |   sasl.login.connect.timeout.ms = null
kafka      | [2025-06-17 05:57:47,494] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-7 (state.change.logger)
connect    |   sasl.login.read.timeout.ms = null
kafka      | [2025-06-17 05:57:47,494] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-9 (state.change.logger)
connect    |   sasl.login.refresh.buffer.seconds = 300
kafka      | [2025-06-17 05:57:47,494] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-1 (state.change.logger)
connect    |   sasl.login.refresh.min.period.seconds = 60
kafka      | [2025-06-17 05:57:47,495] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=18, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-18 (state.change.logger)
connect    |   sasl.login.refresh.window.factor = 0.8
kafka      | [2025-06-17 05:57:47,495] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-20 (state.change.logger)
connect    |   sasl.login.refresh.window.jitter = 0.05
kafka      | [2025-06-17 05:57:47,495] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=22, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-22 (state.change.logger)
connect    |   sasl.login.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:47,497] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-24 (state.change.logger)
connect    |   sasl.login.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:47,498] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=10, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-10 (state.change.logger)
connect    |   sasl.mechanism = GSSAPI
kafka      | [2025-06-17 05:57:47,499] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-12 (state.change.logger)
connect    |   sasl.oauthbearer.clock.skew.seconds = 30
kafka      | [2025-06-17 05:57:47,501] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-14 (state.change.logger)
connect    |   sasl.oauthbearer.expected.audience = null
kafka      | [2025-06-17 05:57:47,502] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=16, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-16 (state.change.logger)
connect    |   sasl.oauthbearer.expected.issuer = null
kafka      | [2025-06-17 05:57:47,504] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-2 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
kafka      | [2025-06-17 05:57:47,507] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-4 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:47,508] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-6 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:47,509] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-8 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.url = null
kafka      | [2025-06-17 05:57:47,509] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-0 (state.change.logger)
connect    |   sasl.oauthbearer.scope.claim.name = scope
kafka      | [2025-06-17 05:57:47,509] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-19 (state.change.logger)
connect    |   sasl.oauthbearer.sub.claim.name = sub
kafka      | [2025-06-17 05:57:47,510] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-21 (state.change.logger)
connect    |   sasl.oauthbearer.token.endpoint.url = null
kafka      | [2025-06-17 05:57:47,510] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-offsets-23 (state.change.logger)
connect    |   security.protocol = PLAINTEXT
kafka      | [2025-06-17 05:57:47,516] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 25 become-leader and 0 become-follower partitions (state.change.logger)
connect    |   security.providers = null
kafka      | [2025-06-17 05:57:47,535] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 25 partitions (state.change.logger)
connect    |   send.buffer.bytes = 131072
kafka      | [2025-06-17 05:57:47,545] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-15 from NewReplica to OnlineReplica (state.change.logger)
connect    |   socket.connection.setup.timeout.max.ms = 30000
kafka      | [2025-06-17 05:57:47,546] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-14 from NewReplica to OnlineReplica (state.change.logger)
connect    |   socket.connection.setup.timeout.ms = 10000
kafka      | [2025-06-17 05:57:47,547] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-9 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.cipher.suites = null
kafka      | [2025-06-17 05:57:47,548] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-2 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
kafka      | [2025-06-17 05:57:47,549] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-21 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.endpoint.identification.algorithm = https
kafka      | [2025-06-17 05:57:47,549] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-20 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.engine.factory.class = null
kafka      | [2025-06-17 05:57:47,549] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-13 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.key.password = null
kafka      | [2025-06-17 05:57:47,549] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-5 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.keymanager.algorithm = SunX509
kafka      | [2025-06-17 05:57:47,549] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-12 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.keystore.certificate.chain = null
kafka      | [2025-06-17 05:57:47,549] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-8 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.keystore.key = null
kafka      | [2025-06-17 05:57:47,549] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-11 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.keystore.location = null
kafka      | [2025-06-17 05:57:47,550] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-23 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.keystore.password = null
kafka      | [2025-06-17 05:57:47,550] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-0 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.keystore.type = JKS
kafka      | [2025-06-17 05:57:47,550] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-17 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.protocol = TLSv1.3
kafka      | [2025-06-17 05:57:47,550] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-24 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.provider = null
kafka      | [2025-06-17 05:57:47,550] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-16 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.secure.random.implementation = null
kafka      | [2025-06-17 05:57:47,550] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-4 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.trustmanager.algorithm = PKIX
kafka      | [2025-06-17 05:57:47,550] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-19 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.truststore.certificates = null
kafka      | [2025-06-17 05:57:47,550] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-22 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.truststore.location = null
kafka      | [2025-06-17 05:57:47,550] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-18 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.truststore.password = null
kafka      | [2025-06-17 05:57:47,550] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-1 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.truststore.type = JKS
kafka      | [2025-06-17 05:57:47,550] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-3 from NewReplica to OnlineReplica (state.change.logger)
connect    |  (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,550] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-7 from NewReplica to OnlineReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,037] WARN The configuration 'config.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,550] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-6 from NewReplica to OnlineReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,038] WARN The configuration 'rest.advertised.host.name' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,550] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-offsets-10 from NewReplica to OnlineReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,038] WARN The configuration 'group.id' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,550] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
connect    | [2025-06-17 05:57:46,038] WARN The configuration 'status.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,562] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 25 partitions (state.change.logger)
connect    | [2025-06-17 05:57:46,038] WARN The configuration 'plugin.path' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,567] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,038] WARN The configuration 'offset.flush.interval.ms' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,567] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,038] WARN The configuration 'rest.port' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,567] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,038] WARN The configuration 'config.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,567] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,038] WARN The configuration 'key.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,567] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,038] WARN The configuration 'zookeeper.connect' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,567] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,038] WARN The configuration 'status.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,567] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,038] WARN The configuration 'value.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,568] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,038] WARN The configuration 'offset.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,568] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,038] WARN The configuration 'offset.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,568] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=18, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,038] WARN The configuration 'value.converter' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,568] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,038] WARN The configuration 'key.converter' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:47,568] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=22, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,038] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:47,568] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,039] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:47,568] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=10, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,039] INFO Kafka startTimeMs: 1750139866038 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:47,568] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,074] INFO Kafka cluster ID: giJkw9-kTvOOXXJyYfUXQw (org.apache.kafka.connect.util.ConnectUtils)
kafka      | [2025-06-17 05:57:47,569] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,075] INFO App info kafka.admin.client for adminclient-3 unregistered (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:47,569] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=16, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,080] INFO Metrics scheduler closed (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:47,569] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,080] INFO Closing reporter org.apache.kafka.common.metrics.JmxReporter (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:47,569] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,081] INFO Metrics reporters closed (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:47,569] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,091] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
web-ui     | 2025-06-17 05:57:49,503 INFO  default-nioEventLoopGroup-1-3 org.akhq.log.access [Date: 2025-06-17T05:57:49.35154404Z] [Duration: 208 ms] [Url: GET /] [Status: 307] [Ip: /172.20.0.1] [User: -]
kafka      | [2025-06-17 05:57:47,569] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,092] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:47,569] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,092] INFO Kafka startTimeMs: 1750139866091 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:47,569] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,377] INFO JsonConverterConfig values:
kafka      | [2025-06-17 05:57:47,569] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    |   converter.type = key
kafka      | [2025-06-17 05:57:47,569] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 1 from controller 1 epoch 1 (state.change.logger)
connect    |   decimal.format = BASE64
kafka      | [2025-06-17 05:57:47,793] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-7 (state.change.logger)
connect    |   schemas.cache.size = 1000
kafka      | [2025-06-17 05:57:47,794] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-22 (state.change.logger)
connect    |   schemas.enable = false
kafka      | [2025-06-17 05:57:47,794] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-3 (state.change.logger)
connect    |  (org.apache.kafka.connect.json.JsonConverterConfig)
kafka      | [2025-06-17 05:57:47,794] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-18 (state.change.logger)
connect    | [2025-06-17 05:57:46,379] INFO JsonConverterConfig values:
kafka      | [2025-06-17 05:57:47,794] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-0 (state.change.logger)
connect    |   converter.type = value
kafka      | [2025-06-17 05:57:47,794] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-15 (state.change.logger)
connect    |   decimal.format = BASE64
kafka      | [2025-06-17 05:57:47,794] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-11 (state.change.logger)
connect    |   schemas.cache.size = 1000
kafka      | [2025-06-17 05:57:47,794] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-8 (state.change.logger)
connect    |   schemas.enable = false
kafka      | [2025-06-17 05:57:47,794] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-23 (state.change.logger)
web-ui     | 2025-06-17 05:57:50,015 INFO  default-nioEventLoopGroup-1-3 org.akhq.log.access [Date: 2025-06-17T05:57:50.007925071Z] [Duration: 11 ms] [Url: GET /ui] [Status: 200] [Ip: /172.20.0.1] [User: -]
connect    |  (org.apache.kafka.connect.json.JsonConverterConfig)
kafka      | [2025-06-17 05:57:47,794] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-4 (state.change.logger)
connect    | [2025-06-17 05:57:46,379] INFO Creating Kafka admin client (org.apache.kafka.connect.util.ConnectUtils)
kafka      | [2025-06-17 05:57:47,794] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-19 (state.change.logger)
connect    | [2025-06-17 05:57:46,380] INFO AdminClientConfig values:
kafka      | [2025-06-17 05:57:47,794] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-16 (state.change.logger)
connect    |   bootstrap.servers = [kafka:29092]
kafka      | [2025-06-17 05:57:47,794] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-12 (state.change.logger)
connect    |   client.dns.lookup = use_all_dns_ips
kafka      | [2025-06-17 05:57:47,795] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-24 (state.change.logger)
connect    |   client.id =
kafka      | [2025-06-17 05:57:47,795] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-5 (state.change.logger)
connect    |   connections.max.idle.ms = 300000
kafka      | [2025-06-17 05:57:47,795] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-20 (state.change.logger)
connect    |   default.api.timeout.ms = 60000
kafka      | [2025-06-17 05:57:47,795] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-1 (state.change.logger)
connect    |   metadata.max.age.ms = 300000
kafka      | [2025-06-17 05:57:47,795] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-13 (state.change.logger)
connect    |   metric.reporters = []
kafka      | [2025-06-17 05:57:47,795] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-9 (state.change.logger)
connect    |   metrics.num.samples = 2
kafka      | [2025-06-17 05:57:47,795] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-6 (state.change.logger)
connect    |   metrics.recording.level = INFO
kafka      | [2025-06-17 05:57:47,795] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-21 (state.change.logger)
connect    |   metrics.sample.window.ms = 30000
kafka      | [2025-06-17 05:57:47,795] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-2 (state.change.logger)
connect    |   receive.buffer.bytes = 65536
kafka      | [2025-06-17 05:57:47,795] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-17 (state.change.logger)
connect    |   reconnect.backoff.max.ms = 1000
kafka      | [2025-06-17 05:57:47,795] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-14 (state.change.logger)
connect    |   reconnect.backoff.ms = 50
kafka      | [2025-06-17 05:57:47,796] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-offsets-10 (state.change.logger)
connect    |   request.timeout.ms = 30000
kafka      | [2025-06-17 05:57:47,800] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions HashSet(docker-connect-offsets-5, docker-connect-offsets-13, docker-connect-offsets-12, docker-connect-offsets-2, docker-connect-offsets-0, docker-connect-offsets-3, docker-connect-offsets-21, docker-connect-offsets-23, docker-connect-offsets-4, docker-connect-offsets-16, docker-connect-offsets-24, docker-connect-offsets-11, docker-connect-offsets-20, docker-connect-offsets-17, docker-connect-offsets-14, docker-connect-offsets-15, docker-connect-offsets-6, docker-connect-offsets-1, docker-connect-offsets-9, docker-connect-offsets-7, docker-connect-offsets-10, docker-connect-offsets-8, docker-connect-offsets-18, docker-connect-offsets-22, docker-connect-offsets-19) (kafka.server.ReplicaFetcherManager)
connect    |   retries = 2147483647
web-ui     | 2025-06-17 05:57:50,867 INFO  default-nioEventLoopGroup-1-3 org.akhq.log.access [Date: 2025-06-17T05:57:50.864408519Z] [Duration: 1 ms] [Url: GET /ui/assets/index-BdxSfnGT.js] [Status: 200] [Ip: /172.20.0.1] [User: -]
kafka      | [2025-06-17 05:57:47,803] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 1 epoch 1 as part of the become-leader transition for 25 partitions (state.change.logger)
connect    |   retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:48,042] INFO [LogLoader partition=docker-connect-offsets-7, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.client.callback.handler.class = null
kafka      | [2025-06-17 05:57:48,130] INFO Created log for partition docker-connect-offsets-7 in /var/lib/kafka/data/docker-connect-offsets-7 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   sasl.jaas.config = null
kafka      | [2025-06-17 05:57:48,155] INFO [Partition docker-connect-offsets-7 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-7 (kafka.cluster.Partition)
connect    |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
kafka      | [2025-06-17 05:57:48,167] INFO [Partition docker-connect-offsets-7 broker=1] Log loaded for partition docker-connect-offsets-7 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.kerberos.min.time.before.relogin = 60000
kafka      | [2025-06-17 05:57:48,193] INFO [Broker id=1] Leader docker-connect-offsets-7 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   sasl.kerberos.service.name = null
kafka      | [2025-06-17 05:57:48,297] INFO [LogLoader partition=docker-connect-offsets-22, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.kerberos.ticket.renew.jitter = 0.05
kafka      | [2025-06-17 05:57:48,315] INFO Created log for partition docker-connect-offsets-22 in /var/lib/kafka/data/docker-connect-offsets-22 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   sasl.kerberos.ticket.renew.window.factor = 0.8
kafka      | [2025-06-17 05:57:48,315] INFO [Partition docker-connect-offsets-22 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-22 (kafka.cluster.Partition)
connect    |   sasl.login.callback.handler.class = null
kafka      | [2025-06-17 05:57:48,316] INFO [Partition docker-connect-offsets-22 broker=1] Log loaded for partition docker-connect-offsets-22 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.login.class = null
kafka      | [2025-06-17 05:57:48,316] INFO [Broker id=1] Leader docker-connect-offsets-22 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   sasl.login.connect.timeout.ms = null
kafka      | [2025-06-17 05:57:48,350] INFO [LogLoader partition=docker-connect-offsets-3, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.login.read.timeout.ms = null
kafka      | [2025-06-17 05:57:48,354] INFO Created log for partition docker-connect-offsets-3 in /var/lib/kafka/data/docker-connect-offsets-3 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   sasl.login.refresh.buffer.seconds = 300
kafka      | [2025-06-17 05:57:48,354] INFO [Partition docker-connect-offsets-3 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-3 (kafka.cluster.Partition)
connect    |   sasl.login.refresh.min.period.seconds = 60
kafka      | [2025-06-17 05:57:48,354] INFO [Partition docker-connect-offsets-3 broker=1] Log loaded for partition docker-connect-offsets-3 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.login.refresh.window.factor = 0.8
kafka      | [2025-06-17 05:57:48,354] INFO [Broker id=1] Leader docker-connect-offsets-3 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   sasl.login.refresh.window.jitter = 0.05
kafka      | [2025-06-17 05:57:48,393] INFO [LogLoader partition=docker-connect-offsets-18, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.login.retry.backoff.max.ms = 10000
web-ui     | 2025-06-17 05:57:51,328 INFO  default-nioEventLoopGroup-1-8 org.akhq.log.access [Date: 2025-06-17T05:57:51.327486276Z] [Duration: 0 ms] [Url: GET /ui/assets/index-BFhiJV3a.css] [Status: 200] [Ip: /172.20.0.1] [User: -]
kafka      | [2025-06-17 05:57:48,397] INFO Created log for partition docker-connect-offsets-18 in /var/lib/kafka/data/docker-connect-offsets-18 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   sasl.login.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:48,397] INFO [Partition docker-connect-offsets-18 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-18 (kafka.cluster.Partition)
connect    |   sasl.mechanism = GSSAPI
kafka      | [2025-06-17 05:57:48,398] INFO [Partition docker-connect-offsets-18 broker=1] Log loaded for partition docker-connect-offsets-18 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.oauthbearer.clock.skew.seconds = 30
kafka      | [2025-06-17 05:57:48,398] INFO [Broker id=1] Leader docker-connect-offsets-18 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   sasl.oauthbearer.expected.audience = null
kafka      | [2025-06-17 05:57:48,442] INFO [LogLoader partition=docker-connect-offsets-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.oauthbearer.expected.issuer = null
kafka      | [2025-06-17 05:57:48,457] INFO Created log for partition docker-connect-offsets-0 in /var/lib/kafka/data/docker-connect-offsets-0 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
kafka      | [2025-06-17 05:57:48,458] INFO [Partition docker-connect-offsets-0 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-0 (kafka.cluster.Partition)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:48,458] INFO [Partition docker-connect-offsets-0 broker=1] Log loaded for partition docker-connect-offsets-0 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:48,459] INFO [Broker id=1] Leader docker-connect-offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.url = null
kafka      | [2025-06-17 05:57:48,496] INFO [LogLoader partition=docker-connect-offsets-15, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.oauthbearer.scope.claim.name = scope
kafka      | [2025-06-17 05:57:48,502] INFO Created log for partition docker-connect-offsets-15 in /var/lib/kafka/data/docker-connect-offsets-15 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   sasl.oauthbearer.sub.claim.name = sub
kafka      | [2025-06-17 05:57:48,502] INFO [Partition docker-connect-offsets-15 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-15 (kafka.cluster.Partition)
connect    |   sasl.oauthbearer.token.endpoint.url = null
kafka      | [2025-06-17 05:57:48,503] INFO [Partition docker-connect-offsets-15 broker=1] Log loaded for partition docker-connect-offsets-15 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   security.protocol = PLAINTEXT
kafka      | [2025-06-17 05:57:48,503] INFO [Broker id=1] Leader docker-connect-offsets-15 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   security.providers = null
kafka      | [2025-06-17 05:57:48,528] INFO [LogLoader partition=docker-connect-offsets-11, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   send.buffer.bytes = 131072
kafka      | [2025-06-17 05:57:48,537] INFO Created log for partition docker-connect-offsets-11 in /var/lib/kafka/data/docker-connect-offsets-11 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   socket.connection.setup.timeout.max.ms = 30000
kafka      | [2025-06-17 05:57:48,537] INFO [Partition docker-connect-offsets-11 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-11 (kafka.cluster.Partition)
connect    |   socket.connection.setup.timeout.ms = 10000
kafka      | [2025-06-17 05:57:48,537] INFO [Partition docker-connect-offsets-11 broker=1] Log loaded for partition docker-connect-offsets-11 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   ssl.cipher.suites = null
kafka      | [2025-06-17 05:57:48,538] INFO [Broker id=1] Leader docker-connect-offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
web-ui     | 2025-06-17 05:57:51,946 INFO  default-nioEventLoopGroup-1-7 org.akhq.log.access [Date: 2025-06-17T05:57:51.945042114Z] [Duration: 1 ms] [Url: GET /ui/assets/react-T744NkMr.css] [Status: 200] [Ip: /172.20.0.1] [User: -]
kafka      | [2025-06-17 05:57:48,578] INFO [LogLoader partition=docker-connect-offsets-8, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   ssl.endpoint.identification.algorithm = https
kafka      | [2025-06-17 05:57:48,595] INFO Created log for partition docker-connect-offsets-8 in /var/lib/kafka/data/docker-connect-offsets-8 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   ssl.engine.factory.class = null
kafka      | [2025-06-17 05:57:48,596] INFO [Partition docker-connect-offsets-8 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-8 (kafka.cluster.Partition)
connect    |   ssl.key.password = null
kafka      | [2025-06-17 05:57:48,597] INFO [Partition docker-connect-offsets-8 broker=1] Log loaded for partition docker-connect-offsets-8 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   ssl.keymanager.algorithm = SunX509
kafka      | [2025-06-17 05:57:48,597] INFO [Broker id=1] Leader docker-connect-offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   ssl.keystore.certificate.chain = null
kafka      | [2025-06-17 05:57:48,645] INFO [LogLoader partition=docker-connect-offsets-23, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   ssl.keystore.key = null
kafka      | [2025-06-17 05:57:48,654] INFO Created log for partition docker-connect-offsets-23 in /var/lib/kafka/data/docker-connect-offsets-23 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   ssl.keystore.location = null
kafka      | [2025-06-17 05:57:48,654] INFO [Partition docker-connect-offsets-23 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-23 (kafka.cluster.Partition)
connect    |   ssl.keystore.password = null
kafka      | [2025-06-17 05:57:48,655] INFO [Partition docker-connect-offsets-23 broker=1] Log loaded for partition docker-connect-offsets-23 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   ssl.keystore.type = JKS
kafka      | [2025-06-17 05:57:48,655] INFO [Broker id=1] Leader docker-connect-offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   ssl.protocol = TLSv1.3
kafka      | [2025-06-17 05:57:48,701] INFO [LogLoader partition=docker-connect-offsets-4, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   ssl.provider = null
kafka      | [2025-06-17 05:57:48,707] INFO Created log for partition docker-connect-offsets-4 in /var/lib/kafka/data/docker-connect-offsets-4 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   ssl.secure.random.implementation = null
web-ui     | 2025-06-17 05:57:52,255 INFO  default-nioEventLoopGroup-1-6 org.akhq.log.access [Date: 2025-06-17T05:57:52.253759424Z] [Duration: 1 ms] [Url: GET /ui/assets/react-CMjgpN1I.js] [Status: 200] [Ip: /172.20.0.1] [User: -]
kafka      | [2025-06-17 05:57:48,707] INFO [Partition docker-connect-offsets-4 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-4 (kafka.cluster.Partition)
connect    |   ssl.trustmanager.algorithm = PKIX
kafka      | [2025-06-17 05:57:48,711] INFO [Partition docker-connect-offsets-4 broker=1] Log loaded for partition docker-connect-offsets-4 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   ssl.truststore.certificates = null
kafka      | [2025-06-17 05:57:48,712] INFO [Broker id=1] Leader docker-connect-offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   ssl.truststore.location = null
kafka      | [2025-06-17 05:57:48,759] INFO [LogLoader partition=docker-connect-offsets-19, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   ssl.truststore.password = null
kafka      | [2025-06-17 05:57:48,774] INFO Created log for partition docker-connect-offsets-19 in /var/lib/kafka/data/docker-connect-offsets-19 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   ssl.truststore.type = JKS
kafka      | [2025-06-17 05:57:48,775] INFO [Partition docker-connect-offsets-19 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-19 (kafka.cluster.Partition)
connect    |  (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,775] INFO [Partition docker-connect-offsets-19 broker=1] Log loaded for partition docker-connect-offsets-19 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:46,384] WARN The configuration 'config.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,776] INFO [Broker id=1] Leader docker-connect-offsets-19 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:46,384] WARN The configuration 'rest.advertised.host.name' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,845] INFO [LogLoader partition=docker-connect-offsets-16, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:46,385] WARN The configuration 'group.id' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,863] INFO Created log for partition docker-connect-offsets-16 in /var/lib/kafka/data/docker-connect-offsets-16 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:46,385] WARN The configuration 'status.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,864] INFO [Partition docker-connect-offsets-16 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-16 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:46,385] WARN The configuration 'plugin.path' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,864] INFO [Partition docker-connect-offsets-16 broker=1] Log loaded for partition docker-connect-offsets-16 with initial high watermark 0 (kafka.cluster.Partition)
web-ui     | 2025-06-17 05:57:52,556 INFO  default-nioEventLoopGroup-1-5 org.akhq.log.access [Date: 2025-06-17T05:57:52.554506519Z] [Duration: 1 ms] [Url: GET /ui/assets/joi-BXZmcpof.js] [Status: 200] [Ip: /172.20.0.1] [User: -]
connect    | [2025-06-17 05:57:46,385] WARN The configuration 'offset.flush.interval.ms' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,864] INFO [Broker id=1] Leader docker-connect-offsets-16 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:46,385] WARN The configuration 'rest.port' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,917] INFO [LogLoader partition=docker-connect-offsets-12, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:46,385] WARN The configuration 'config.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,924] INFO Created log for partition docker-connect-offsets-12 in /var/lib/kafka/data/docker-connect-offsets-12 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:46,385] WARN The configuration 'key.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,924] INFO [Partition docker-connect-offsets-12 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-12 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:46,385] WARN The configuration 'zookeeper.connect' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,924] INFO [Partition docker-connect-offsets-12 broker=1] Log loaded for partition docker-connect-offsets-12 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:46,385] WARN The configuration 'status.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,925] INFO [Broker id=1] Leader docker-connect-offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:46,385] WARN The configuration 'value.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,974] INFO [LogLoader partition=docker-connect-offsets-24, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:46,385] WARN The configuration 'offset.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,982] INFO Created log for partition docker-connect-offsets-24 in /var/lib/kafka/data/docker-connect-offsets-24 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:46,385] WARN The configuration 'offset.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,984] INFO [Partition docker-connect-offsets-24 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-24 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:46,385] WARN The configuration 'value.converter' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,985] INFO [Partition docker-connect-offsets-24 broker=1] Log loaded for partition docker-connect-offsets-24 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:46,386] WARN The configuration 'key.converter' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:48,986] INFO [Broker id=1] Leader docker-connect-offsets-24 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:46,386] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,033] INFO [LogLoader partition=docker-connect-offsets-5, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:46,386] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,042] INFO Created log for partition docker-connect-offsets-5 in /var/lib/kafka/data/docker-connect-offsets-5 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:46,388] INFO Kafka startTimeMs: 1750139866386 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,042] INFO [Partition docker-connect-offsets-5 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-5 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:46,415] INFO Kafka cluster ID: giJkw9-kTvOOXXJyYfUXQw (org.apache.kafka.connect.util.ConnectUtils)
kafka      | [2025-06-17 05:57:49,043] INFO [Partition docker-connect-offsets-5 broker=1] Log loaded for partition docker-connect-offsets-5 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:46,416] INFO App info kafka.admin.client for adminclient-4 unregistered (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,044] INFO [Broker id=1] Leader docker-connect-offsets-5 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:46,420] INFO Metrics scheduler closed (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:49,075] INFO [LogLoader partition=docker-connect-offsets-20, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:46,420] INFO Closing reporter org.apache.kafka.common.metrics.JmxReporter (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:49,079] INFO Created log for partition docker-connect-offsets-20 in /var/lib/kafka/data/docker-connect-offsets-20 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:46,421] INFO Metrics reporters closed (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:49,080] INFO [Partition docker-connect-offsets-20 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-20 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:46,434] INFO Creating Kafka admin client (org.apache.kafka.connect.util.ConnectUtils)
kafka      | [2025-06-17 05:57:49,080] INFO [Partition docker-connect-offsets-20 broker=1] Log loaded for partition docker-connect-offsets-20 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:46,435] INFO AdminClientConfig values:
kafka      | [2025-06-17 05:57:49,080] INFO [Broker id=1] Leader docker-connect-offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   bootstrap.servers = [kafka:29092]
kafka      | [2025-06-17 05:57:49,122] INFO [LogLoader partition=docker-connect-offsets-1, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
web-ui     | 2025-06-17 05:57:53,316 INFO  io-executor-thread-1 org.akhq.log.access [Date: 2025-06-17T05:57:52.806857842Z] [Duration: 512 ms] [Url: GET /api/auths] [Status: 200] [Ip: /172.20.0.1] [User: -]
connect    |   client.dns.lookup = use_all_dns_ips
kafka      | [2025-06-17 05:57:49,137] INFO Created log for partition docker-connect-offsets-1 in /var/lib/kafka/data/docker-connect-offsets-1 with properties {cleanup.policy=compact} (kafka.log.LogManager)
web-ui     | 2025-06-17 05:57:53,326 INFO  io-executor-thread-2 org.akhq.log.access [Date: 2025-06-17T05:57:52.80994015Z] [Duration: 521 ms] [Url: GET /api/me] [Status: 200] [Ip: /172.20.0.1] [User: -]
connect    |   client.id =
kafka      | [2025-06-17 05:57:49,139] INFO [Partition docker-connect-offsets-1 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-1 (kafka.cluster.Partition)
connect    |   connections.max.idle.ms = 300000
kafka      | [2025-06-17 05:57:49,139] INFO [Partition docker-connect-offsets-1 broker=1] Log loaded for partition docker-connect-offsets-1 with initial high watermark 0 (kafka.cluster.Partition)
web-ui     | 2025-06-17 05:57:53,433 INFO  io-executor-thread-2 org.akhq.log.access [Date: 2025-06-17T05:57:53.422222499Z] [Duration: 11 ms] [Url: GET /api/cluster] [Status: 200] [Ip: /172.20.0.1] [User: -]
connect    |   default.api.timeout.ms = 60000
kafka      | [2025-06-17 05:57:49,140] INFO [Broker id=1] Leader docker-connect-offsets-1 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   metadata.max.age.ms = 300000
kafka      | [2025-06-17 05:57:49,190] INFO [LogLoader partition=docker-connect-offsets-13, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   metric.reporters = []
kafka      | [2025-06-17 05:57:49,194] INFO Created log for partition docker-connect-offsets-13 in /var/lib/kafka/data/docker-connect-offsets-13 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   metrics.num.samples = 2
kafka      | [2025-06-17 05:57:49,195] INFO [Partition docker-connect-offsets-13 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-13 (kafka.cluster.Partition)
connect    |   metrics.recording.level = INFO
kafka      | [2025-06-17 05:57:49,195] INFO [Partition docker-connect-offsets-13 broker=1] Log loaded for partition docker-connect-offsets-13 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   metrics.sample.window.ms = 30000
kafka      | [2025-06-17 05:57:49,195] INFO [Broker id=1] Leader docker-connect-offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   receive.buffer.bytes = 65536
web-ui     | 2025-06-17 05:57:53,654 INFO  default-nioEventLoopGroup-1-9 org.akhq.log.access [Date: 2025-06-17T05:57:53.651837529Z] [Duration: 1 ms] [Url: GET /ui/assets/manifest-Dv6CBoxH.json] [Status: 200] [Ip: /172.20.0.1] [User: -]
kafka      | [2025-06-17 05:57:49,236] INFO [LogLoader partition=docker-connect-offsets-9, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   reconnect.backoff.max.ms = 1000
kafka      | [2025-06-17 05:57:49,241] INFO Created log for partition docker-connect-offsets-9 in /var/lib/kafka/data/docker-connect-offsets-9 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   reconnect.backoff.ms = 50
kafka      | [2025-06-17 05:57:49,241] INFO [Partition docker-connect-offsets-9 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-9 (kafka.cluster.Partition)
connect    |   request.timeout.ms = 30000
kafka      | [2025-06-17 05:57:49,241] INFO [Partition docker-connect-offsets-9 broker=1] Log loaded for partition docker-connect-offsets-9 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   retries = 2147483647
kafka      | [2025-06-17 05:57:49,242] INFO [Broker id=1] Leader docker-connect-offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:49,272] INFO [LogLoader partition=docker-connect-offsets-6, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.client.callback.handler.class = null
kafka      | [2025-06-17 05:57:49,275] INFO Created log for partition docker-connect-offsets-6 in /var/lib/kafka/data/docker-connect-offsets-6 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   sasl.jaas.config = null
kafka      | [2025-06-17 05:57:49,276] INFO [Partition docker-connect-offsets-6 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-6 (kafka.cluster.Partition)
connect    |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
kafka      | [2025-06-17 05:57:49,276] INFO [Partition docker-connect-offsets-6 broker=1] Log loaded for partition docker-connect-offsets-6 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.kerberos.min.time.before.relogin = 60000
kafka      | [2025-06-17 05:57:49,276] INFO [Broker id=1] Leader docker-connect-offsets-6 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   sasl.kerberos.service.name = null
kafka      | [2025-06-17 05:57:49,313] INFO [LogLoader partition=docker-connect-offsets-21, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.kerberos.ticket.renew.jitter = 0.05
kafka      | [2025-06-17 05:57:49,326] INFO Created log for partition docker-connect-offsets-21 in /var/lib/kafka/data/docker-connect-offsets-21 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   sasl.kerberos.ticket.renew.window.factor = 0.8
kafka      | [2025-06-17 05:57:49,327] INFO [Partition docker-connect-offsets-21 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-21 (kafka.cluster.Partition)
connect    |   sasl.login.callback.handler.class = null
kafka      | [2025-06-17 05:57:49,327] INFO [Partition docker-connect-offsets-21 broker=1] Log loaded for partition docker-connect-offsets-21 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.login.class = null
kafka      | [2025-06-17 05:57:49,327] INFO [Broker id=1] Leader docker-connect-offsets-21 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   sasl.login.connect.timeout.ms = null
kafka      | [2025-06-17 05:57:49,360] INFO [LogLoader partition=docker-connect-offsets-2, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.login.read.timeout.ms = null
kafka      | [2025-06-17 05:57:49,363] INFO Created log for partition docker-connect-offsets-2 in /var/lib/kafka/data/docker-connect-offsets-2 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   sasl.login.refresh.buffer.seconds = 300
kafka      | [2025-06-17 05:57:49,363] INFO [Partition docker-connect-offsets-2 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-2 (kafka.cluster.Partition)
connect    |   sasl.login.refresh.min.period.seconds = 60
kafka      | [2025-06-17 05:57:49,363] INFO [Partition docker-connect-offsets-2 broker=1] Log loaded for partition docker-connect-offsets-2 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.login.refresh.window.factor = 0.8
kafka      | [2025-06-17 05:57:49,364] INFO [Broker id=1] Leader docker-connect-offsets-2 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   sasl.login.refresh.window.jitter = 0.05
kafka      | [2025-06-17 05:57:49,408] INFO [LogLoader partition=docker-connect-offsets-17, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.login.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:49,413] INFO Created log for partition docker-connect-offsets-17 in /var/lib/kafka/data/docker-connect-offsets-17 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   sasl.login.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:49,414] INFO [Partition docker-connect-offsets-17 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-17 (kafka.cluster.Partition)
connect    |   sasl.mechanism = GSSAPI
kafka      | [2025-06-17 05:57:49,414] INFO [Partition docker-connect-offsets-17 broker=1] Log loaded for partition docker-connect-offsets-17 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.oauthbearer.clock.skew.seconds = 30
kafka      | [2025-06-17 05:57:49,414] INFO [Broker id=1] Leader docker-connect-offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   sasl.oauthbearer.expected.audience = null
kafka      | [2025-06-17 05:57:49,451] INFO [LogLoader partition=docker-connect-offsets-14, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.oauthbearer.expected.issuer = null
kafka      | [2025-06-17 05:57:49,461] INFO Created log for partition docker-connect-offsets-14 in /var/lib/kafka/data/docker-connect-offsets-14 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
kafka      | [2025-06-17 05:57:49,462] INFO [Partition docker-connect-offsets-14 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-14 (kafka.cluster.Partition)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:49,462] INFO [Partition docker-connect-offsets-14 broker=1] Log loaded for partition docker-connect-offsets-14 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:49,462] INFO [Broker id=1] Leader docker-connect-offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.url = null
kafka      | [2025-06-17 05:57:49,505] INFO [LogLoader partition=docker-connect-offsets-10, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.oauthbearer.scope.claim.name = scope
kafka      | [2025-06-17 05:57:49,509] INFO Created log for partition docker-connect-offsets-10 in /var/lib/kafka/data/docker-connect-offsets-10 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   sasl.oauthbearer.sub.claim.name = sub
kafka      | [2025-06-17 05:57:49,510] INFO [Partition docker-connect-offsets-10 broker=1] No checkpointed highwatermark is found for partition docker-connect-offsets-10 (kafka.cluster.Partition)
connect    |   sasl.oauthbearer.token.endpoint.url = null
kafka      | [2025-06-17 05:57:49,510] INFO [Partition docker-connect-offsets-10 broker=1] Log loaded for partition docker-connect-offsets-10 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   security.protocol = PLAINTEXT
kafka      | [2025-06-17 05:57:49,510] INFO [Broker id=1] Leader docker-connect-offsets-10 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   security.providers = null
kafka      | [2025-06-17 05:57:49,549] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-7 (state.change.logger)
connect    |   send.buffer.bytes = 131072
kafka      | [2025-06-17 05:57:49,550] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-22 (state.change.logger)
connect    |   socket.connection.setup.timeout.max.ms = 30000
kafka      | [2025-06-17 05:57:49,552] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-3 (state.change.logger)
connect    |   socket.connection.setup.timeout.ms = 10000
kafka      | [2025-06-17 05:57:49,553] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-18 (state.change.logger)
connect    |   ssl.cipher.suites = null
kafka      | [2025-06-17 05:57:49,553] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-0 (state.change.logger)
connect    |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
kafka      | [2025-06-17 05:57:49,553] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-15 (state.change.logger)
connect    |   ssl.endpoint.identification.algorithm = https
kafka      | [2025-06-17 05:57:49,554] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-11 (state.change.logger)
connect    |   ssl.engine.factory.class = null
kafka      | [2025-06-17 05:57:49,556] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-8 (state.change.logger)
connect    |   ssl.key.password = null
kafka      | [2025-06-17 05:57:49,556] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-23 (state.change.logger)
connect    |   ssl.keymanager.algorithm = SunX509
kafka      | [2025-06-17 05:57:49,556] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-4 (state.change.logger)
connect    |   ssl.keystore.certificate.chain = null
kafka      | [2025-06-17 05:57:49,556] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-19 (state.change.logger)
connect    |   ssl.keystore.key = null
kafka      | [2025-06-17 05:57:49,556] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-16 (state.change.logger)
connect    |   ssl.keystore.location = null
kafka      | [2025-06-17 05:57:49,556] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-12 (state.change.logger)
connect    |   ssl.keystore.password = null
kafka      | [2025-06-17 05:57:49,556] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-24 (state.change.logger)
connect    |   ssl.keystore.type = JKS
kafka      | [2025-06-17 05:57:49,556] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-5 (state.change.logger)
connect    |   ssl.protocol = TLSv1.3
kafka      | [2025-06-17 05:57:49,556] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-20 (state.change.logger)
connect    |   ssl.provider = null
kafka      | [2025-06-17 05:57:49,556] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-1 (state.change.logger)
connect    |   ssl.secure.random.implementation = null
kafka      | [2025-06-17 05:57:49,556] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-13 (state.change.logger)
connect    |   ssl.trustmanager.algorithm = PKIX
kafka      | [2025-06-17 05:57:49,556] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-9 (state.change.logger)
connect    |   ssl.truststore.certificates = null
kafka      | [2025-06-17 05:57:49,556] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-6 (state.change.logger)
connect    |   ssl.truststore.location = null
kafka      | [2025-06-17 05:57:49,556] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-21 (state.change.logger)
connect    |   ssl.truststore.password = null
kafka      | [2025-06-17 05:57:49,556] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-2 (state.change.logger)
connect    |   ssl.truststore.type = JKS
kafka      | [2025-06-17 05:57:49,556] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-17 (state.change.logger)
connect    |  (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,557] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-14 (state.change.logger)
connect    | [2025-06-17 05:57:46,442] WARN The configuration 'config.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,557] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-offsets-10 (state.change.logger)
connect    | [2025-06-17 05:57:46,442] WARN The configuration 'rest.advertised.host.name' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,601] INFO [Broker id=1] Finished LeaderAndIsr request in 2045ms correlationId 1 from controller 1 for 25 partitions (state.change.logger)
connect    | [2025-06-17 05:57:46,442] WARN The configuration 'group.id' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,622] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=EEtvj3MmSFm8qT8N2dU9Gw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=11, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=13, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=15, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=17, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=18, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=20, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=22, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=24, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=10, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=12, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=14, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=16, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=19, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=21, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=23, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 1 sent to broker kafka:29092 (id: 1 rack: null) (state.change.logger)
connect    | [2025-06-17 05:57:46,442] WARN The configuration 'status.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,028] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,442] WARN The configuration 'plugin.path' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,028] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,442] WARN The configuration 'offset.flush.interval.ms' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,029] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,442] WARN The configuration 'rest.port' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,029] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,442] WARN The configuration 'config.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,029] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,442] WARN The configuration 'key.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,029] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,442] WARN The configuration 'zookeeper.connect' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,029] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,442] WARN The configuration 'status.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,029] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,442] WARN The configuration 'value.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,029] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,442] WARN The configuration 'offset.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,029] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=18, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,443] WARN The configuration 'offset.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,029] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,443] WARN The configuration 'value.converter' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,029] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=22, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,443] WARN The configuration 'key.converter' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,029] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,444] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,030] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=10, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,445] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,030] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,445] INFO Kafka startTimeMs: 1750139866443 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,030] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,471] INFO Kafka cluster ID: giJkw9-kTvOOXXJyYfUXQw (org.apache.kafka.connect.util.ConnectUtils)
kafka      | [2025-06-17 05:57:49,030] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=16, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,472] INFO App info kafka.admin.client for adminclient-5 unregistered (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,030] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,477] INFO Metrics scheduler closed (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:49,030] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,477] INFO Closing reporter org.apache.kafka.common.metrics.JmxReporter (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:49,030] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,478] INFO Metrics reporters closed (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:49,031] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,486] INFO Creating Kafka admin client (org.apache.kafka.connect.util.ConnectUtils)
kafka      | [2025-06-17 05:57:49,031] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    | [2025-06-17 05:57:46,487] INFO AdminClientConfig values:
kafka      | [2025-06-17 05:57:49,031] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    |   bootstrap.servers = [kafka:29092]
kafka      | [2025-06-17 05:57:49,031] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    |   client.dns.lookup = use_all_dns_ips
kafka      | [2025-06-17 05:57:49,031] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    |   client.id =
kafka      | [2025-06-17 05:57:49,037] INFO [Broker id=1] Add 25 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
connect    |   connections.max.idle.ms = 300000
kafka      | [2025-06-17 05:57:49,066] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 2 sent to broker kafka:29092 (id: 1 rack: null) (state.change.logger)
connect    |   default.api.timeout.ms = 60000
kafka      | [2025-06-17 05:57:48,843] INFO Creating topic docker-connect-status with configuration {cleanup.policy=compact} and initial partition assignment HashMap(0 -> ArrayBuffer(1), 1 -> ArrayBuffer(1), 2 -> ArrayBuffer(1), 3 -> ArrayBuffer(1), 4 -> ArrayBuffer(1)) (kafka.zk.AdminZkClient)
connect    |   metadata.max.age.ms = 300000
kafka      | [2025-06-17 05:57:48,915] INFO [Controller id=1] New topics: [Set(docker-connect-status)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(docker-connect-status,Some(DOYJ0f7gSmuuzUw0uWQTFw),HashMap(docker-connect-status-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-status-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-status-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-status-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), docker-connect-status-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
connect    |   metric.reporters = []
kafka      | [2025-06-17 05:57:48,915] INFO [Controller id=1] New partition creation callback for docker-connect-status-0,docker-connect-status-4,docker-connect-status-1,docker-connect-status-2,docker-connect-status-3 (kafka.controller.KafkaController)
connect    |   metrics.num.samples = 2
kafka      | [2025-06-17 05:57:48,916] INFO [Controller id=1 epoch=1] Changed partition docker-connect-status-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   metrics.recording.level = INFO
kafka      | [2025-06-17 05:57:48,916] INFO [Controller id=1 epoch=1] Changed partition docker-connect-status-4 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   metrics.sample.window.ms = 30000
kafka      | [2025-06-17 05:57:48,917] INFO [Controller id=1 epoch=1] Changed partition docker-connect-status-1 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   receive.buffer.bytes = 65536
kafka      | [2025-06-17 05:57:48,917] INFO [Controller id=1 epoch=1] Changed partition docker-connect-status-2 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   reconnect.backoff.max.ms = 1000
kafka      | [2025-06-17 05:57:48,917] INFO [Controller id=1 epoch=1] Changed partition docker-connect-status-3 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   reconnect.backoff.ms = 50
kafka      | [2025-06-17 05:57:48,917] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
connect    |   request.timeout.ms = 30000
kafka      | [2025-06-17 05:57:48,919] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-status-3 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   retries = 2147483647
kafka      | [2025-06-17 05:57:48,919] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-status-2 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:48,919] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-status-1 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   sasl.client.callback.handler.class = null
kafka      | [2025-06-17 05:57:48,919] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-status-4 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   sasl.jaas.config = null
kafka      | [2025-06-17 05:57:48,919] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-status-0 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
kafka      | [2025-06-17 05:57:48,919] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
connect    |   sasl.kerberos.min.time.before.relogin = 60000
kafka      | [2025-06-17 05:57:48,983] INFO [Controller id=1 epoch=1] Changed partition docker-connect-status-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.kerberos.service.name = null
kafka      | [2025-06-17 05:57:48,983] INFO [Controller id=1 epoch=1] Changed partition docker-connect-status-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.kerberos.ticket.renew.jitter = 0.05
kafka      | [2025-06-17 05:57:48,984] INFO [Controller id=1 epoch=1] Changed partition docker-connect-status-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.kerberos.ticket.renew.window.factor = 0.8
kafka      | [2025-06-17 05:57:48,984] INFO [Controller id=1 epoch=1] Changed partition docker-connect-status-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.login.callback.handler.class = null
kafka      | [2025-06-17 05:57:48,984] INFO [Controller id=1 epoch=1] Changed partition docker-connect-status-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.login.class = null
kafka      | [2025-06-17 05:57:48,985] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-status', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-status-1 (state.change.logger)
connect    |   sasl.login.connect.timeout.ms = null
kafka      | [2025-06-17 05:57:48,985] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-status', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-status-0 (state.change.logger)
connect    |   sasl.login.read.timeout.ms = null
kafka      | [2025-06-17 05:57:48,985] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-status', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-status-3 (state.change.logger)
connect    |   sasl.login.refresh.buffer.seconds = 300
kafka      | [2025-06-17 05:57:48,985] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-status', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-status-2 (state.change.logger)
connect    |   sasl.login.refresh.min.period.seconds = 60
kafka      | [2025-06-17 05:57:48,985] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-status', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-status-4 (state.change.logger)
connect    |   sasl.login.refresh.window.factor = 0.8
kafka      | [2025-06-17 05:57:48,985] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 5 become-leader and 0 become-follower partitions (state.change.logger)
connect    |   sasl.login.refresh.window.jitter = 0.05
web-ui     | 2025-06-17 05:57:56,172 INFO  io-executor-thread-2 org.akhq.log.access [Date: 2025-06-17T05:57:53.912827463Z] [Duration: 2348 ms] [Url: GET /api/docker-kafka-server/topic] [Status: 200] [Ip: /172.20.0.1] [User: -]
kafka      | [2025-06-17 05:57:48,986] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 5 partitions (state.change.logger)
connect    |   sasl.login.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:48,988] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-status-3 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.login.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:48,989] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-status-2 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.mechanism = GSSAPI
kafka      | [2025-06-17 05:57:48,989] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-status-1 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.oauthbearer.clock.skew.seconds = 30
kafka      | [2025-06-17 05:57:48,989] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-status-4 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.oauthbearer.expected.audience = null
kafka      | [2025-06-17 05:57:48,989] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-status-0 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.oauthbearer.expected.issuer = null
kafka      | [2025-06-17 05:57:48,991] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
kafka      | [2025-06-17 05:57:48,997] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 5 partitions (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:48,999] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-status', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 3 from controller 1 epoch 1 (state.change.logger)
web-ui     | 2025-06-17 05:57:56,335 INFO  io-executor-thread-1 org.akhq.log.access [Date: 2025-06-17T05:57:56.273152343Z] [Duration: 63 ms] [Url: GET /api/docker-kafka-server/group/topics] [Status: 200] [Ip: /172.20.0.1] [User: -]
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:49,000] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-status', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 3 from controller 1 epoch 1 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.url = null
kafka      | [2025-06-17 05:57:49,001] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-status', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 3 from controller 1 epoch 1 (state.change.logger)
connect    |   sasl.oauthbearer.scope.claim.name = scope
kafka      | [2025-06-17 05:57:49,001] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-status', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 3 from controller 1 epoch 1 (state.change.logger)
connect    |   sasl.oauthbearer.sub.claim.name = sub
kafka      | [2025-06-17 05:57:49,001] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-status', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 3 from controller 1 epoch 1 (state.change.logger)
connect    |   sasl.oauthbearer.token.endpoint.url = null
kafka      | [2025-06-17 05:57:49,010] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-status-1 (state.change.logger)
connect    |   security.protocol = PLAINTEXT
kafka      | [2025-06-17 05:57:49,012] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-status-2 (state.change.logger)
connect    |   security.providers = null
kafka      | [2025-06-17 05:57:49,013] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-status-0 (state.change.logger)
connect    |   send.buffer.bytes = 131072
kafka      | [2025-06-17 05:57:49,013] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-status-3 (state.change.logger)
connect    |   socket.connection.setup.timeout.max.ms = 30000
kafka      | [2025-06-17 05:57:49,014] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-status-4 (state.change.logger)
connect    |   socket.connection.setup.timeout.ms = 10000
kafka      | [2025-06-17 05:57:49,016] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions HashSet(docker-connect-status-0, docker-connect-status-4, docker-connect-status-1, docker-connect-status-2, docker-connect-status-3) (kafka.server.ReplicaFetcherManager)
connect    |   ssl.cipher.suites = null
kafka      | [2025-06-17 05:57:49,017] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 1 as part of the become-leader transition for 5 partitions (state.change.logger)
connect    |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
kafka      | [2025-06-17 05:57:49,033] INFO [LogLoader partition=docker-connect-status-1, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   ssl.endpoint.identification.algorithm = https
kafka      | [2025-06-17 05:57:49,039] INFO Created log for partition docker-connect-status-1 in /var/lib/kafka/data/docker-connect-status-1 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   ssl.engine.factory.class = null
kafka      | [2025-06-17 05:57:49,042] INFO [Partition docker-connect-status-1 broker=1] No checkpointed highwatermark is found for partition docker-connect-status-1 (kafka.cluster.Partition)
connect    |   ssl.key.password = null
kafka      | [2025-06-17 05:57:49,043] INFO [Partition docker-connect-status-1 broker=1] Log loaded for partition docker-connect-status-1 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   ssl.keymanager.algorithm = SunX509
kafka      | [2025-06-17 05:57:49,044] INFO [Broker id=1] Leader docker-connect-status-1 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   ssl.keystore.certificate.chain = null
kafka      | [2025-06-17 05:57:49,072] INFO [LogLoader partition=docker-connect-status-2, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   ssl.keystore.key = null
kafka      | [2025-06-17 05:57:49,077] INFO Created log for partition docker-connect-status-2 in /var/lib/kafka/data/docker-connect-status-2 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   ssl.keystore.location = null
kafka      | [2025-06-17 05:57:49,077] INFO [Partition docker-connect-status-2 broker=1] No checkpointed highwatermark is found for partition docker-connect-status-2 (kafka.cluster.Partition)
connect    |   ssl.keystore.password = null
kafka      | [2025-06-17 05:57:49,077] INFO [Partition docker-connect-status-2 broker=1] Log loaded for partition docker-connect-status-2 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   ssl.keystore.type = JKS
kafka      | [2025-06-17 05:57:49,078] INFO [Broker id=1] Leader docker-connect-status-2 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   ssl.protocol = TLSv1.3
kafka      | [2025-06-17 05:57:49,106] INFO [LogLoader partition=docker-connect-status-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   ssl.provider = null
kafka      | [2025-06-17 05:57:49,109] INFO Created log for partition docker-connect-status-0 in /var/lib/kafka/data/docker-connect-status-0 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   ssl.secure.random.implementation = null
kafka      | [2025-06-17 05:57:49,109] INFO [Partition docker-connect-status-0 broker=1] No checkpointed highwatermark is found for partition docker-connect-status-0 (kafka.cluster.Partition)
connect    |   ssl.trustmanager.algorithm = PKIX
kafka      | [2025-06-17 05:57:49,109] INFO [Partition docker-connect-status-0 broker=1] Log loaded for partition docker-connect-status-0 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   ssl.truststore.certificates = null
kafka      | [2025-06-17 05:57:49,110] INFO [Broker id=1] Leader docker-connect-status-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   ssl.truststore.location = null
kafka      | [2025-06-17 05:57:49,148] INFO [LogLoader partition=docker-connect-status-3, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   ssl.truststore.password = null
kafka      | [2025-06-17 05:57:49,151] INFO Created log for partition docker-connect-status-3 in /var/lib/kafka/data/docker-connect-status-3 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   ssl.truststore.type = JKS
kafka      | [2025-06-17 05:57:49,151] INFO [Partition docker-connect-status-3 broker=1] No checkpointed highwatermark is found for partition docker-connect-status-3 (kafka.cluster.Partition)
connect    |  (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,151] INFO [Partition docker-connect-status-3 broker=1] Log loaded for partition docker-connect-status-3 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:46,495] WARN The configuration 'config.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,152] INFO [Broker id=1] Leader docker-connect-status-3 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:46,496] WARN The configuration 'rest.advertised.host.name' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,185] INFO [LogLoader partition=docker-connect-status-4, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:46,496] WARN The configuration 'group.id' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,194] INFO Created log for partition docker-connect-status-4 in /var/lib/kafka/data/docker-connect-status-4 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:46,496] WARN The configuration 'status.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,195] INFO [Partition docker-connect-status-4 broker=1] No checkpointed highwatermark is found for partition docker-connect-status-4 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:46,496] WARN The configuration 'plugin.path' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,195] INFO [Partition docker-connect-status-4 broker=1] Log loaded for partition docker-connect-status-4 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:46,496] WARN The configuration 'offset.flush.interval.ms' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,196] INFO [Broker id=1] Leader docker-connect-status-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:46,496] WARN The configuration 'rest.port' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,209] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-status-1 (state.change.logger)
connect    | [2025-06-17 05:57:46,496] WARN The configuration 'config.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,209] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-status-2 (state.change.logger)
connect    | [2025-06-17 05:57:46,496] WARN The configuration 'key.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,210] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-status-0 (state.change.logger)
connect    | [2025-06-17 05:57:46,496] WARN The configuration 'zookeeper.connect' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,210] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-status-3 (state.change.logger)
connect    | [2025-06-17 05:57:46,496] WARN The configuration 'status.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,210] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-status-4 (state.change.logger)
connect    | [2025-06-17 05:57:46,496] WARN The configuration 'value.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,212] INFO [Broker id=1] Finished LeaderAndIsr request in 219ms correlationId 3 from controller 1 for 5 partitions (state.change.logger)
connect    | [2025-06-17 05:57:46,496] WARN The configuration 'offset.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,215] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=DOYJ0f7gSmuuzUw0uWQTFw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 3 sent to broker kafka:29092 (id: 1 rack: null) (state.change.logger)
connect    | [2025-06-17 05:57:46,496] WARN The configuration 'offset.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,218] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-status', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-status-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
connect    | [2025-06-17 05:57:46,496] WARN The configuration 'value.converter' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,218] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-status', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-status-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
connect    | [2025-06-17 05:57:46,496] WARN The configuration 'key.converter' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,218] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-status', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-status-1 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
connect    | [2025-06-17 05:57:46,496] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,219] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-status', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-status-3 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
connect    | [2025-06-17 05:57:46,496] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,219] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-status', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-status-4 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
connect    | [2025-06-17 05:57:46,496] INFO Kafka startTimeMs: 1750139866496 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,219] INFO [Broker id=1] Add 5 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
connect    | [2025-06-17 05:57:46,520] INFO Kafka cluster ID: giJkw9-kTvOOXXJyYfUXQw (org.apache.kafka.connect.util.ConnectUtils)
kafka      | [2025-06-17 05:57:49,226] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 4 sent to broker kafka:29092 (id: 1 rack: null) (state.change.logger)
connect    | [2025-06-17 05:57:46,521] INFO App info kafka.admin.client for adminclient-6 unregistered (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,415] INFO Creating topic docker-connect-configs with configuration {cleanup.policy=compact} and initial partition assignment HashMap(0 -> ArrayBuffer(1)) (kafka.zk.AdminZkClient)
connect    | [2025-06-17 05:57:46,524] INFO Metrics scheduler closed (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:49,459] INFO [Controller id=1] New topics: [Set(docker-connect-configs)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(docker-connect-configs,Some(FwJL2vqxT2m0nG4by2KINg),Map(docker-connect-configs-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
connect    | [2025-06-17 05:57:46,524] INFO Closing reporter org.apache.kafka.common.metrics.JmxReporter (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:49,459] INFO [Controller id=1] New partition creation callback for docker-connect-configs-0 (kafka.controller.KafkaController)
connect    | [2025-06-17 05:57:46,524] INFO Metrics reporters closed (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:49,460] INFO [Controller id=1 epoch=1] Changed partition docker-connect-configs-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
web-ui     | 2025-06-17 05:57:57,164 INFO  io-executor-thread-2 org.akhq.log.access [Date: 2025-06-17T05:57:56.273132536Z] [Duration: 892 ms] [Url: GET /api/docker-kafka-server/topic/last-record] [Status: 200] [Ip: /172.20.0.1] [User: -]
connect    | [2025-06-17 05:57:46,560] INFO Creating Kafka admin client (org.apache.kafka.connect.util.ConnectUtils)
kafka      | [2025-06-17 05:57:49,460] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
connect    | [2025-06-17 05:57:46,561] INFO AdminClientConfig values:
kafka      | [2025-06-17 05:57:49,462] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-configs-0 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   bootstrap.servers = [kafka:29092]
kafka      | [2025-06-17 05:57:49,463] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
connect    |   client.dns.lookup = use_all_dns_ips
kafka      | [2025-06-17 05:57:49,493] INFO [Controller id=1 epoch=1] Changed partition docker-connect-configs-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   client.id =
kafka      | [2025-06-17 05:57:49,493] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-configs', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition docker-connect-configs-0 (state.change.logger)
connect    |   connections.max.idle.ms = 300000
kafka      | [2025-06-17 05:57:49,494] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger)
connect    |   default.api.timeout.ms = 60000
kafka      | [2025-06-17 05:57:49,495] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 1 partitions (state.change.logger)
connect    |   metadata.max.age.ms = 300000
kafka      | [2025-06-17 05:57:49,498] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 for 1 partitions (state.change.logger)
connect    |   metric.reporters = []
kafka      | [2025-06-17 05:57:49,498] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition docker-connect-configs-0 from NewReplica to OnlineReplica (state.change.logger)
connect    |   metrics.num.samples = 2
kafka      | [2025-06-17 05:57:49,498] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='docker-connect-configs', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 5 from controller 1 epoch 1 (state.change.logger)
connect    |   metrics.recording.level = INFO
kafka      | [2025-06-17 05:57:49,499] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
connect    |   metrics.sample.window.ms = 30000
kafka      | [2025-06-17 05:57:49,502] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition docker-connect-configs-0 (state.change.logger)
connect    |   receive.buffer.bytes = 65536
kafka      | [2025-06-17 05:57:49,502] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(docker-connect-configs-0) (kafka.server.ReplicaFetcherManager)
connect    |   reconnect.backoff.max.ms = 1000
kafka      | [2025-06-17 05:57:49,502] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 1 epoch 1 as part of the become-leader transition for 1 partitions (state.change.logger)
connect    |   reconnect.backoff.ms = 50
kafka      | [2025-06-17 05:57:49,523] INFO [LogLoader partition=docker-connect-configs-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   request.timeout.ms = 30000
kafka      | [2025-06-17 05:57:49,527] INFO Created log for partition docker-connect-configs-0 in /var/lib/kafka/data/docker-connect-configs-0 with properties {cleanup.policy=compact} (kafka.log.LogManager)
connect    |   retries = 2147483647
kafka      | [2025-06-17 05:57:49,532] INFO [Partition docker-connect-configs-0 broker=1] No checkpointed highwatermark is found for partition docker-connect-configs-0 (kafka.cluster.Partition)
connect    |   retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:49,532] INFO [Partition docker-connect-configs-0 broker=1] Log loaded for partition docker-connect-configs-0 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.client.callback.handler.class = null
kafka      | [2025-06-17 05:57:49,533] INFO [Broker id=1] Leader docker-connect-configs-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   sasl.jaas.config = null
kafka      | [2025-06-17 05:57:49,550] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition docker-connect-configs-0 (state.change.logger)
connect    |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
kafka      | [2025-06-17 05:57:49,553] INFO [Broker id=1] Finished LeaderAndIsr request in 54ms correlationId 5 from controller 1 for 1 partitions (state.change.logger)
connect    |   sasl.kerberos.min.time.before.relogin = 60000
kafka      | [2025-06-17 05:57:49,557] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=FwJL2vqxT2m0nG4by2KINg, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 5 sent to broker kafka:29092 (id: 1 rack: null) (state.change.logger)
connect    |   sasl.kerberos.service.name = null
kafka      | [2025-06-17 05:57:49,565] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='docker-connect-configs', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition docker-connect-configs-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
connect    |   sasl.kerberos.ticket.renew.jitter = 0.05
kafka      | [2025-06-17 05:57:49,566] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
connect    |   sasl.kerberos.ticket.renew.window.factor = 0.8
kafka      | [2025-06-17 05:57:49,574] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 6 sent to broker kafka:29092 (id: 1 rack: null) (state.change.logger)
connect    |   sasl.login.callback.handler.class = null
kafka      | [2025-06-17 05:57:49,806] INFO Creating topic __consumer_offsets with configuration {compression.type=producer, cleanup.policy=compact, segment.bytes=104857600} and initial partition assignment HashMap(0 -> ArrayBuffer(1), 1 -> ArrayBuffer(1), 2 -> ArrayBuffer(1), 3 -> ArrayBuffer(1), 4 -> ArrayBuffer(1), 5 -> ArrayBuffer(1), 6 -> ArrayBuffer(1), 7 -> ArrayBuffer(1), 8 -> ArrayBuffer(1), 9 -> ArrayBuffer(1), 10 -> ArrayBuffer(1), 11 -> ArrayBuffer(1), 12 -> ArrayBuffer(1), 13 -> ArrayBuffer(1), 14 -> ArrayBuffer(1), 15 -> ArrayBuffer(1), 16 -> ArrayBuffer(1), 17 -> ArrayBuffer(1), 18 -> ArrayBuffer(1), 19 -> ArrayBuffer(1), 20 -> ArrayBuffer(1), 21 -> ArrayBuffer(1), 22 -> ArrayBuffer(1), 23 -> ArrayBuffer(1), 24 -> ArrayBuffer(1), 25 -> ArrayBuffer(1), 26 -> ArrayBuffer(1), 27 -> ArrayBuffer(1), 28 -> ArrayBuffer(1), 29 -> ArrayBuffer(1), 30 -> ArrayBuffer(1), 31 -> ArrayBuffer(1), 32 -> ArrayBuffer(1), 33 -> ArrayBuffer(1), 34 -> ArrayBuffer(1), 35 -> ArrayBuffer(1), 36 -> ArrayBuffer(1), 37 -> ArrayBuffer(1), 38 -> ArrayBuffer(1), 39 -> ArrayBuffer(1), 40 -> ArrayBuffer(1), 41 -> ArrayBuffer(1), 42 -> ArrayBuffer(1), 43 -> ArrayBuffer(1), 44 -> ArrayBuffer(1), 45 -> ArrayBuffer(1), 46 -> ArrayBuffer(1), 47 -> ArrayBuffer(1), 48 -> ArrayBuffer(1), 49 -> ArrayBuffer(1)) (kafka.zk.AdminZkClient)
connect    |   sasl.login.class = null
kafka      | [2025-06-17 05:57:49,862] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(YSQvTL6cSGiVXztL2RhWOA),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
connect    |   sasl.login.connect.timeout.ms = null
kafka      | [2025-06-17 05:57:49,863] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
connect    |   sasl.login.read.timeout.ms = null
kafka      | [2025-06-17 05:57:49,864] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-22 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.login.refresh.buffer.seconds = 300
kafka      | [2025-06-17 05:57:49,867] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-30 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.login.refresh.min.period.seconds = 60
kafka      | [2025-06-17 05:57:49,868] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-25 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.login.refresh.window.factor = 0.8
kafka      | [2025-06-17 05:57:49,869] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-35 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.login.refresh.window.jitter = 0.05
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-37 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.login.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-38 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.login.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-13 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.mechanism = GSSAPI
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-8 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.oauthbearer.clock.skew.seconds = 30
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-21 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.oauthbearer.expected.audience = null
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-4 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.oauthbearer.expected.issuer = null
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-27 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-7 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-9 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-46 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.url = null
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-41 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.oauthbearer.scope.claim.name = scope
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-33 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.oauthbearer.sub.claim.name = sub
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-23 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   sasl.oauthbearer.token.endpoint.url = null
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-49 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   security.protocol = PLAINTEXT
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-47 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   security.providers = null
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-16 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   send.buffer.bytes = 131072
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-28 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   socket.connection.setup.timeout.max.ms = 30000
kafka      | [2025-06-17 05:57:49,872] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-31 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   socket.connection.setup.timeout.ms = 10000
kafka      | [2025-06-17 05:57:49,873] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-36 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.cipher.suites = null
kafka      | [2025-06-17 05:57:49,873] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-42 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
kafka      | [2025-06-17 05:57:49,875] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-3 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.endpoint.identification.algorithm = https
kafka      | [2025-06-17 05:57:49,876] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-18 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.engine.factory.class = null
kafka      | [2025-06-17 05:57:49,876] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-15 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.key.password = null
kafka      | [2025-06-17 05:57:49,876] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-24 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.keymanager.algorithm = SunX509
kafka      | [2025-06-17 05:57:49,876] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-17 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.keystore.certificate.chain = null
kafka      | [2025-06-17 05:57:49,876] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-48 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.keystore.key = null
kafka      | [2025-06-17 05:57:49,876] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-19 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.keystore.location = null
kafka      | [2025-06-17 05:57:49,876] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-11 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.keystore.password = null
kafka      | [2025-06-17 05:57:49,876] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-2 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.keystore.type = JKS
kafka      | [2025-06-17 05:57:49,876] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-43 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.protocol = TLSv1.3
kafka      | [2025-06-17 05:57:49,876] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-6 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.provider = null
kafka      | [2025-06-17 05:57:49,876] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-14 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.secure.random.implementation = null
kafka      | [2025-06-17 05:57:49,876] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-20 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.trustmanager.algorithm = PKIX
kafka      | [2025-06-17 05:57:49,876] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.truststore.certificates = null
kafka      | [2025-06-17 05:57:49,876] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-44 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.truststore.location = null
kafka      | [2025-06-17 05:57:49,877] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-39 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.truststore.password = null
kafka      | [2025-06-17 05:57:49,877] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-12 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |   ssl.truststore.type = JKS
kafka      | [2025-06-17 05:57:49,877] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-45 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    |  (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,877] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-1 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,564] WARN The configuration 'config.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,877] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-5 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,565] WARN The configuration 'rest.advertised.host.name' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,877] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-26 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,565] WARN The configuration 'group.id' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,877] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-29 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,565] WARN The configuration 'status.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,877] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-34 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,565] WARN The configuration 'plugin.path' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,877] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-10 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,565] WARN The configuration 'offset.flush.interval.ms' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,877] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-32 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,565] WARN The configuration 'rest.port' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,877] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-40 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
connect    | [2025-06-17 05:57:46,565] WARN The configuration 'config.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,877] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
connect    | [2025-06-17 05:57:46,565] WARN The configuration 'key.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,880] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-32 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,565] WARN The configuration 'zookeeper.connect' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,880] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-5 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,565] WARN The configuration 'status.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-44 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,565] WARN The configuration 'value.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-48 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,565] WARN The configuration 'offset.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-46 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,565] WARN The configuration 'offset.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-20 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,565] WARN The configuration 'value.converter' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-43 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,565] WARN The configuration 'key.converter' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-24 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,565] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-6 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,565] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-18 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,565] INFO Kafka startTimeMs: 1750139866565 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-21 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,585] INFO Kafka cluster ID: giJkw9-kTvOOXXJyYfUXQw (org.apache.kafka.connect.util.ConnectUtils)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-1 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,586] INFO App info kafka.admin.client for adminclient-7 unregistered (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-14 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,589] INFO Metrics scheduler closed (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-34 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,589] INFO Closing reporter org.apache.kafka.common.metrics.JmxReporter (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-16 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,589] INFO Metrics reporters closed (org.apache.kafka.common.metrics.Metrics)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-29 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,637] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-11 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,637] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-0 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,637] INFO Kafka startTimeMs: 1750139866637 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-22 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,649] INFO Kafka Connect distributed worker initialization took 21576ms (org.apache.kafka.connect.cli.ConnectDistributed)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-47 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,649] INFO Kafka Connect starting (org.apache.kafka.connect.runtime.Connect)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-36 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,654] INFO Initializing REST resources (org.apache.kafka.connect.runtime.rest.RestServer)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-28 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,655] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Herder starting (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-42 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,655] INFO Worker starting (org.apache.kafka.connect.runtime.Worker)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-9 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,656] INFO Starting KafkaOffsetBackingStore (org.apache.kafka.connect.storage.KafkaOffsetBackingStore)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-37 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,656] INFO Starting KafkaBasedLog with topic docker-connect-offsets (org.apache.kafka.connect.util.KafkaBasedLog)
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-13 from NonExistentReplica to NewReplica (state.change.logger)
connect    | [2025-06-17 05:57:46,660] INFO AdminClientConfig values:
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-30 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   bootstrap.servers = [kafka:29092]
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-35 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   client.dns.lookup = use_all_dns_ips
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-39 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   client.id =
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-12 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   connections.max.idle.ms = 300000
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-27 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   default.api.timeout.ms = 60000
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-45 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   metadata.max.age.ms = 300000
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-19 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   metric.reporters = []
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-49 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   metrics.num.samples = 2
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-40 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   metrics.recording.level = INFO
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-41 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   metrics.sample.window.ms = 30000
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-38 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   receive.buffer.bytes = 65536
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-8 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   reconnect.backoff.max.ms = 1000
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-7 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   reconnect.backoff.ms = 50
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-33 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   request.timeout.ms = 30000
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-25 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   retries = 2147483647
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-31 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-23 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   sasl.client.callback.handler.class = null
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-10 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   sasl.jaas.config = null
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-2 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-17 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   sasl.kerberos.min.time.before.relogin = 60000
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-4 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   sasl.kerberos.service.name = null
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-15 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   sasl.kerberos.ticket.renew.jitter = 0.05
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-26 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   sasl.kerberos.ticket.renew.window.factor = 0.8
kafka      | [2025-06-17 05:57:49,881] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-3 from NonExistentReplica to NewReplica (state.change.logger)
connect    |   sasl.login.callback.handler.class = null
kafka      | [2025-06-17 05:57:49,882] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
connect    |   sasl.login.class = null
kafka      | [2025-06-17 05:57:50,336] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-22 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.login.connect.timeout.ms = null
kafka      | [2025-06-17 05:57:50,337] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-30 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.login.read.timeout.ms = null
kafka      | [2025-06-17 05:57:50,338] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-25 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.login.refresh.buffer.seconds = 300
kafka      | [2025-06-17 05:57:50,338] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-35 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.login.refresh.min.period.seconds = 60
kafka      | [2025-06-17 05:57:50,338] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-37 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.login.refresh.window.factor = 0.8
kafka      | [2025-06-17 05:57:50,338] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-38 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.login.refresh.window.jitter = 0.05
kafka      | [2025-06-17 05:57:50,338] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-13 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.login.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:50,338] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-8 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.login.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:50,338] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-21 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.mechanism = GSSAPI
kafka      | [2025-06-17 05:57:50,338] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.oauthbearer.clock.skew.seconds = 30
kafka      | [2025-06-17 05:57:50,338] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-27 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.oauthbearer.expected.audience = null
kafka      | [2025-06-17 05:57:50,338] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-7 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.oauthbearer.expected.issuer = null
kafka      | [2025-06-17 05:57:50,338] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-9 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
kafka      | [2025-06-17 05:57:50,338] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-46 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:50,338] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-41 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:50,338] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-33 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.url = null
kafka      | [2025-06-17 05:57:50,339] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-23 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.oauthbearer.scope.claim.name = scope
kafka      | [2025-06-17 05:57:50,339] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-49 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.oauthbearer.sub.claim.name = sub
kafka      | [2025-06-17 05:57:50,339] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-47 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   sasl.oauthbearer.token.endpoint.url = null
kafka      | [2025-06-17 05:57:50,339] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-16 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   security.protocol = PLAINTEXT
kafka      | [2025-06-17 05:57:50,339] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-28 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   security.providers = null
kafka      | [2025-06-17 05:57:50,339] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-31 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   send.buffer.bytes = 131072
kafka      | [2025-06-17 05:57:50,339] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-36 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   socket.connection.setup.timeout.max.ms = 30000
kafka      | [2025-06-17 05:57:50,339] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-42 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   socket.connection.setup.timeout.ms = 10000
kafka      | [2025-06-17 05:57:50,339] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.cipher.suites = null
kafka      | [2025-06-17 05:57:50,339] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-18 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
kafka      | [2025-06-17 05:57:50,339] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-15 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.endpoint.identification.algorithm = https
kafka      | [2025-06-17 05:57:50,339] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-24 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.engine.factory.class = null
kafka      | [2025-06-17 05:57:50,339] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-17 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.key.password = null
kafka      | [2025-06-17 05:57:50,339] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-48 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.keymanager.algorithm = SunX509
kafka      | [2025-06-17 05:57:50,339] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-19 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.keystore.certificate.chain = null
kafka      | [2025-06-17 05:57:50,339] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-11 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.keystore.key = null
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.keystore.location = null
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-43 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.keystore.password = null
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-6 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.keystore.type = JKS
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-14 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.protocol = TLSv1.3
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-20 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.provider = null
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.secure.random.implementation = null
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-44 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.trustmanager.algorithm = PKIX
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-39 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.truststore.certificates = null
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-12 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.truststore.location = null
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-45 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.truststore.password = null
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |   ssl.truststore.type = JKS
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-5 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    |  (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-26 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    | [2025-06-17 05:57:46,665] WARN The configuration 'config.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-29 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    | [2025-06-17 05:57:46,665] WARN The configuration 'metrics.context.connect.group.id' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-34 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    | [2025-06-17 05:57:46,665] WARN The configuration 'rest.advertised.host.name' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-10 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    | [2025-06-17 05:57:46,665] WARN The configuration 'group.id' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,340] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-32 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    | [2025-06-17 05:57:46,665] WARN The configuration 'status.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,341] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-40 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, zkVersion=0) (state.change.logger)
connect    | [2025-06-17 05:57:46,666] WARN The configuration 'plugin.path' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,342] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-13 (state.change.logger)
connect    | [2025-06-17 05:57:46,666] WARN The configuration 'offset.flush.interval.ms' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,342] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-46 (state.change.logger)
connect    | [2025-06-17 05:57:46,666] WARN The configuration 'rest.port' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,342] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-9 (state.change.logger)
connect    | [2025-06-17 05:57:46,666] WARN The configuration 'config.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,342] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-42 (state.change.logger)
connect    | [2025-06-17 05:57:46,666] WARN The configuration 'key.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,342] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-21 (state.change.logger)
connect    | [2025-06-17 05:57:46,666] WARN The configuration 'zookeeper.connect' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,342] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
connect    | [2025-06-17 05:57:46,666] WARN The configuration 'metrics.context.connect.kafka.cluster.id' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,342] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-30 (state.change.logger)
connect    | [2025-06-17 05:57:46,666] WARN The configuration 'status.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,342] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-26 (state.change.logger)
connect    | [2025-06-17 05:57:46,666] WARN The configuration 'value.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,342] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
connect    | [2025-06-17 05:57:46,666] WARN The configuration 'offset.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,342] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-38 (state.change.logger)
connect    | [2025-06-17 05:57:46,666] WARN The configuration 'offset.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,342] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-1 (state.change.logger)
connect    | [2025-06-17 05:57:46,666] WARN The configuration 'value.converter' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,342] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-34 (state.change.logger)
connect    | [2025-06-17 05:57:46,666] WARN The configuration 'key.converter' was supplied but isn't a known config. (org.apache.kafka.clients.admin.AdminClientConfig)
kafka      | [2025-06-17 05:57:50,343] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-16 (state.change.logger)
connect    | [2025-06-17 05:57:46,667] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:50,343] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-45 (state.change.logger)
connect    | [2025-06-17 05:57:46,667] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:50,343] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-12 (state.change.logger)
connect    | [2025-06-17 05:57:46,668] INFO Kafka startTimeMs: 1750139866666 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:50,343] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
connect    | [2025-06-17 05:57:46,821] INFO Adding admin resources to main listener (org.apache.kafka.connect.runtime.rest.RestServer)
kafka      | [2025-06-17 05:57:50,343] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-24 (state.change.logger)
connect    | [2025-06-17 05:57:47,130] INFO DefaultSessionIdManager workerName=node0 (org.eclipse.jetty.server.session)
kafka      | [2025-06-17 05:57:50,343] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-20 (state.change.logger)
connect    | [2025-06-17 05:57:47,131] INFO No SessionScavenger set, using defaults (org.eclipse.jetty.server.session)
kafka      | [2025-06-17 05:57:50,343] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-49 (state.change.logger)
connect    | [2025-06-17 05:57:47,144] INFO node0 Scavenging every 660000ms (org.eclipse.jetty.server.session)
kafka      | [2025-06-17 05:57:50,343] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-0 (state.change.logger)
connect    | Jun 17, 2025 5:57:49 AM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
kafka      | [2025-06-17 05:57:50,343] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
connect    | WARNING: A provider org.apache.kafka.connect.runtime.rest.resources.RootResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider org.apache.kafka.connect.runtime.rest.resources.RootResource will be ignored.
kafka      | [2025-06-17 05:57:50,343] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-25 (state.change.logger)
connect    | Jun 17, 2025 5:57:49 AM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
kafka      | [2025-06-17 05:57:50,343] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-8 (state.change.logger)
connect    | WARNING: A provider org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource will be ignored.
kafka      | [2025-06-17 05:57:50,343] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-37 (state.change.logger)
connect    | Jun 17, 2025 5:57:49 AM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
kafka      | [2025-06-17 05:57:50,343] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-4 (state.change.logger)
connect    | WARNING: A provider org.apache.kafka.connect.runtime.rest.resources.ConnectorPluginsResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider org.apache.kafka.connect.runtime.rest.resources.ConnectorPluginsResource will be ignored.
kafka      | [2025-06-17 05:57:50,344] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-33 (state.change.logger)
connect    | Jun 17, 2025 5:57:49 AM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
kafka      | [2025-06-17 05:57:50,344] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-15 (state.change.logger)
connect    | WARNING: A provider org.apache.kafka.connect.runtime.rest.resources.LoggingResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider org.apache.kafka.connect.runtime.rest.resources.LoggingResource will be ignored.
kafka      | [2025-06-17 05:57:50,344] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-48 (state.change.logger)
connect    | [2025-06-17 05:57:49,083] INFO Created topic (name=docker-connect-offsets, numPartitions=25, replicationFactor=1, replicasAssignments=null, configs={cleanup.policy=compact}) on brokers at kafka:29092 (org.apache.kafka.connect.util.TopicAdmin)
kafka      | [2025-06-17 05:57:50,344] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
connect    | [2025-06-17 05:57:49,108] INFO ProducerConfig values:
kafka      | [2025-06-17 05:57:50,344] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-44 (state.change.logger)
connect    |   acks = -1
kafka      | [2025-06-17 05:57:50,344] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
connect    |   batch.size = 16384
kafka      | [2025-06-17 05:57:50,344] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-19 (state.change.logger)
connect    |   bootstrap.servers = [kafka:29092]
kafka      | [2025-06-17 05:57:50,345] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-32 (state.change.logger)
connect    |   buffer.memory = 33554432
kafka      | [2025-06-17 05:57:50,345] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-28 (state.change.logger)
connect    |   client.dns.lookup = use_all_dns_ips
kafka      | [2025-06-17 05:57:50,345] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-7 (state.change.logger)
connect    |   client.id = producer-1
kafka      | [2025-06-17 05:57:50,345] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-40 (state.change.logger)
connect    |   compression.type = none
kafka      | [2025-06-17 05:57:50,345] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-3 (state.change.logger)
connect    |   connections.max.idle.ms = 540000
kafka      | [2025-06-17 05:57:50,345] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-36 (state.change.logger)
connect    |   delivery.timeout.ms = 2147483647
kafka      | [2025-06-17 05:57:50,345] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
connect    |   enable.idempotence = false
kafka      | [2025-06-17 05:57:50,345] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-14 (state.change.logger)
connect    |   interceptor.classes = []
kafka      | [2025-06-17 05:57:50,345] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-43 (state.change.logger)
connect    |   key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
kafka      | [2025-06-17 05:57:50,345] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-10 (state.change.logger)
connect    |   linger.ms = 0
kafka      | [2025-06-17 05:57:50,346] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-22 (state.change.logger)
connect    |   max.block.ms = 60000
kafka      | [2025-06-17 05:57:50,346] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-18 (state.change.logger)
connect    |   max.in.flight.requests.per.connection = 1
kafka      | [2025-06-17 05:57:50,346] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-31 (state.change.logger)
connect    |   max.request.size = 1048576
kafka      | [2025-06-17 05:57:50,346] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-27 (state.change.logger)
connect    |   metadata.max.age.ms = 300000
kafka      | [2025-06-17 05:57:50,346] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-39 (state.change.logger)
connect    |   metadata.max.idle.ms = 300000
kafka      | [2025-06-17 05:57:50,346] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-6 (state.change.logger)
connect    |   metric.reporters = []
kafka      | [2025-06-17 05:57:50,346] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
connect    |   metrics.num.samples = 2
kafka      | [2025-06-17 05:57:50,346] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) to broker 1 for partition __consumer_offsets-2 (state.change.logger)
connect    |   metrics.recording.level = INFO
kafka      | [2025-06-17 05:57:50,346] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 50 become-leader and 0 become-follower partitions (state.change.logger)
connect    |   metrics.sample.window.ms = 30000
kafka      | [2025-06-17 05:57:50,351] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 50 partitions (state.change.logger)
connect    |   partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
kafka      | [2025-06-17 05:57:50,361] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-32 from NewReplica to OnlineReplica (state.change.logger)
connect    |   receive.buffer.bytes = 32768
kafka      | [2025-06-17 05:57:50,361] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-5 from NewReplica to OnlineReplica (state.change.logger)
connect    |   reconnect.backoff.max.ms = 1000
kafka      | [2025-06-17 05:57:50,361] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-44 from NewReplica to OnlineReplica (state.change.logger)
connect    |   reconnect.backoff.ms = 50
kafka      | [2025-06-17 05:57:50,361] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-48 from NewReplica to OnlineReplica (state.change.logger)
connect    |   request.timeout.ms = 30000
kafka      | [2025-06-17 05:57:50,361] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-46 from NewReplica to OnlineReplica (state.change.logger)
connect    |   retries = 2147483647
kafka      | [2025-06-17 05:57:50,361] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-20 from NewReplica to OnlineReplica (state.change.logger)
connect    |   retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:50,361] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-43 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.client.callback.handler.class = null
kafka      | [2025-06-17 05:57:50,361] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-24 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.jaas.config = null
kafka      | [2025-06-17 05:57:50,361] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-6 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
kafka      | [2025-06-17 05:57:50,361] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-18 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.kerberos.min.time.before.relogin = 60000
kafka      | [2025-06-17 05:57:50,361] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-21 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.kerberos.service.name = null
kafka      | [2025-06-17 05:57:50,361] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-1 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.kerberos.ticket.renew.jitter = 0.05
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-14 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.kerberos.ticket.renew.window.factor = 0.8
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-34 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.login.callback.handler.class = null
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-16 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.login.class = null
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-29 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.login.connect.timeout.ms = null
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-11 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.login.read.timeout.ms = null
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-0 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.login.refresh.buffer.seconds = 300
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-22 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.login.refresh.min.period.seconds = 60
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-47 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.login.refresh.window.factor = 0.8
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-36 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.login.refresh.window.jitter = 0.05
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-28 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.login.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-42 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.login.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-9 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.mechanism = GSSAPI
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-37 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.oauthbearer.clock.skew.seconds = 30
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-13 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.oauthbearer.expected.audience = null
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-30 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.oauthbearer.expected.issuer = null
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-35 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-39 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-12 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-27 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.url = null
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-45 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.oauthbearer.scope.claim.name = scope
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-19 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.oauthbearer.sub.claim.name = sub
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-49 from NewReplica to OnlineReplica (state.change.logger)
connect    |   sasl.oauthbearer.token.endpoint.url = null
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-40 from NewReplica to OnlineReplica (state.change.logger)
connect    |   security.protocol = PLAINTEXT
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-41 from NewReplica to OnlineReplica (state.change.logger)
connect    |   security.providers = null
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-38 from NewReplica to OnlineReplica (state.change.logger)
connect    |   send.buffer.bytes = 131072
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-8 from NewReplica to OnlineReplica (state.change.logger)
connect    |   socket.connection.setup.timeout.max.ms = 30000
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-7 from NewReplica to OnlineReplica (state.change.logger)
connect    |   socket.connection.setup.timeout.ms = 10000
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-33 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.cipher.suites = null
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-25 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-31 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.endpoint.identification.algorithm = https
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-23 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.engine.factory.class = null
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-10 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.key.password = null
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-2 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.keymanager.algorithm = SunX509
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-17 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.keystore.certificate.chain = null
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-4 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.keystore.key = null
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-15 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.keystore.location = null
kafka      | [2025-06-17 05:57:50,362] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-26 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.keystore.password = null
kafka      | [2025-06-17 05:57:50,363] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-3 from NewReplica to OnlineReplica (state.change.logger)
connect    |   ssl.keystore.type = JKS
kafka      | [2025-06-17 05:57:50,363] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
connect    |   ssl.protocol = TLSv1.3
kafka      | [2025-06-17 05:57:50,363] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 for 50 partitions (state.change.logger)
connect    |   ssl.provider = null
kafka      | [2025-06-17 05:57:50,369] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   ssl.secure.random.implementation = null
kafka      | [2025-06-17 05:57:50,369] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   ssl.trustmanager.algorithm = PKIX
kafka      | [2025-06-17 05:57:50,369] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   ssl.truststore.certificates = null
kafka      | [2025-06-17 05:57:50,369] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   ssl.truststore.location = null
kafka      | [2025-06-17 05:57:50,370] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   ssl.truststore.password = null
kafka      | [2025-06-17 05:57:50,370] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   ssl.truststore.type = JKS
kafka      | [2025-06-17 05:57:50,370] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   transaction.timeout.ms = 60000
kafka      | [2025-06-17 05:57:50,370] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   transactional.id = null
kafka      | [2025-06-17 05:57:50,370] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
kafka      | [2025-06-17 05:57:50,370] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |  (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,370] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,248] WARN The configuration 'group.id' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,370] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'plugin.path' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,370] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'metrics.context.connect.kafka.cluster.id' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,370] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'status.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,370] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'offset.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,370] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'value.converter' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,370] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'key.converter' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'config.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'metrics.context.connect.group.id' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'rest.advertised.host.name' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'status.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'offset.flush.interval.ms' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'rest.port' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'config.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'key.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'zookeeper.connect' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'value.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,250] WARN The configuration 'offset.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,251] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,251] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:49,251] INFO Kafka startTimeMs: 1750139869250 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    | [2025-06-17 05:57:48,063] INFO ConsumerConfig values:
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   allow.auto.create.topics = true
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   auto.commit.interval.ms = 5000
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   auto.offset.reset = earliest
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   bootstrap.servers = [kafka:29092]
kafka      | [2025-06-17 05:57:50,371] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   check.crcs = true
kafka      | [2025-06-17 05:57:50,372] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   client.dns.lookup = use_all_dns_ips
kafka      | [2025-06-17 05:57:50,372] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   client.id = consumer-compose-connect-group-1
kafka      | [2025-06-17 05:57:50,372] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   client.rack =
kafka      | [2025-06-17 05:57:50,372] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   connections.max.idle.ms = 540000
kafka      | [2025-06-17 05:57:50,372] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   default.api.timeout.ms = 60000
kafka      | [2025-06-17 05:57:50,372] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   enable.auto.commit = false
kafka      | [2025-06-17 05:57:50,372] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   exclude.internal.topics = true
kafka      | [2025-06-17 05:57:50,372] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   fetch.max.bytes = 52428800
kafka      | [2025-06-17 05:57:50,372] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   fetch.max.wait.ms = 500
kafka      | [2025-06-17 05:57:50,372] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   fetch.min.bytes = 1
kafka      | [2025-06-17 05:57:50,372] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   group.id = compose-connect-group
kafka      | [2025-06-17 05:57:50,372] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   group.instance.id = null
kafka      | [2025-06-17 05:57:50,372] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0) correlation id 7 from controller 1 epoch 1 (state.change.logger)
connect    |   heartbeat.interval.ms = 3000
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-3 (state.change.logger)
connect    |   interceptor.classes = []
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-18 (state.change.logger)
connect    |   internal.leave.group.on.close = true
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
connect    |   internal.throw.on.fetch.stable.offset.unsupported = false
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-10 (state.change.logger)
connect    |   isolation.level = read_uncommitted
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-33 (state.change.logger)
connect    |   key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
connect    |   max.partition.fetch.bytes = 1048576
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-19 (state.change.logger)
connect    |   max.poll.interval.ms = 300000
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-34 (state.change.logger)
connect    |   max.poll.records = 500
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
connect    |   metadata.max.age.ms = 300000
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
connect    |   metric.reporters = []
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
connect    |   metrics.num.samples = 2
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-49 (state.change.logger)
connect    |   metrics.recording.level = INFO
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-39 (state.change.logger)
connect    |   metrics.sample.window.ms = 30000
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-9 (state.change.logger)
connect    |   partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
connect    |   receive.buffer.bytes = 65536
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-31 (state.change.logger)
connect    |   reconnect.backoff.max.ms = 1000
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-46 (state.change.logger)
connect    |   reconnect.backoff.ms = 50
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-1 (state.change.logger)
connect    |   request.timeout.ms = 30000
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
connect    |   retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
connect    |   sasl.client.callback.handler.class = null
kafka      | [2025-06-17 05:57:50,563] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-25 (state.change.logger)
connect    |   sasl.jaas.config = null
kafka      | [2025-06-17 05:57:50,564] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
connect    |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
kafka      | [2025-06-17 05:57:50,564] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
connect    |   sasl.kerberos.min.time.before.relogin = 60000
kafka      | [2025-06-17 05:57:50,564] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
connect    |   sasl.kerberos.service.name = null
kafka      | [2025-06-17 05:57:50,564] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
connect    |   sasl.kerberos.ticket.renew.jitter = 0.05
kafka      | [2025-06-17 05:57:50,564] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-37 (state.change.logger)
connect    |   sasl.kerberos.ticket.renew.window.factor = 0.8
kafka      | [2025-06-17 05:57:50,564] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-7 (state.change.logger)
connect    |   sasl.login.callback.handler.class = null
kafka      | [2025-06-17 05:57:50,564] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-22 (state.change.logger)
connect    |   sasl.login.class = null
kafka      | [2025-06-17 05:57:50,564] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
connect    |   sasl.login.connect.timeout.ms = null
kafka      | [2025-06-17 05:57:50,564] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
connect    |   sasl.login.read.timeout.ms = null
kafka      | [2025-06-17 05:57:50,564] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
connect    |   sasl.login.refresh.buffer.seconds = 300
kafka      | [2025-06-17 05:57:50,564] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
connect    |   sasl.login.refresh.min.period.seconds = 60
kafka      | [2025-06-17 05:57:50,564] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
connect    |   sasl.login.refresh.window.factor = 0.8
kafka      | [2025-06-17 05:57:50,564] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
connect    |   sasl.login.refresh.window.jitter = 0.05
kafka      | [2025-06-17 05:57:50,566] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-45 (state.change.logger)
connect    |   sasl.login.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:50,566] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-15 (state.change.logger)
connect    |   sasl.login.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:50,566] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-30 (state.change.logger)
connect    |   sasl.mechanism = GSSAPI
kafka      | [2025-06-17 05:57:50,567] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
connect    |   sasl.oauthbearer.clock.skew.seconds = 30
kafka      | [2025-06-17 05:57:50,568] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
connect    |   sasl.oauthbearer.expected.audience = null
kafka      | [2025-06-17 05:57:50,569] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
connect    |   sasl.oauthbearer.expected.issuer = null
kafka      | [2025-06-17 05:57:50,569] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
kafka      | [2025-06-17 05:57:50,569] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-27 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:50,569] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-42 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:50,569] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.url = null
kafka      | [2025-06-17 05:57:50,569] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-21 (state.change.logger)
connect    |   sasl.oauthbearer.scope.claim.name = scope
kafka      | [2025-06-17 05:57:50,569] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
connect    |   sasl.oauthbearer.sub.claim.name = sub
kafka      | [2025-06-17 05:57:50,569] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-6 (state.change.logger)
connect    |   sasl.oauthbearer.token.endpoint.url = null
kafka      | [2025-06-17 05:57:50,569] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-43 (state.change.logger)
connect    |   security.protocol = PLAINTEXT
kafka      | [2025-06-17 05:57:50,570] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-13 (state.change.logger)
connect    |   security.providers = null
kafka      | [2025-06-17 05:57:50,570] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
connect    |   send.buffer.bytes = 131072
kafka      | [2025-06-17 05:57:50,571] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions HashSet(__consumer_offsets-22, __consumer_offsets-30, __consumer_offsets-25, __consumer_offsets-35, __consumer_offsets-37, __consumer_offsets-38, __consumer_offsets-13, __consumer_offsets-8, __consumer_offsets-21, __consumer_offsets-4, __consumer_offsets-27, __consumer_offsets-7, __consumer_offsets-9, __consumer_offsets-46, __consumer_offsets-41, __consumer_offsets-33, __consumer_offsets-23, __consumer_offsets-49, __consumer_offsets-47, __consumer_offsets-16, __consumer_offsets-28, __consumer_offsets-31, __consumer_offsets-36, __consumer_offsets-42, __consumer_offsets-3, __consumer_offsets-18, __consumer_offsets-15, __consumer_offsets-24, __consumer_offsets-17, __consumer_offsets-48, __consumer_offsets-19, __consumer_offsets-11, __consumer_offsets-2, __consumer_offsets-43, __consumer_offsets-6, __consumer_offsets-14, __consumer_offsets-20, __consumer_offsets-0, __consumer_offsets-44, __consumer_offsets-39, __consumer_offsets-12, __consumer_offsets-45, __consumer_offsets-1, __consumer_offsets-5, __consumer_offsets-26, __consumer_offsets-29, __consumer_offsets-34, __consumer_offsets-10, __consumer_offsets-32, __consumer_offsets-40) (kafka.server.ReplicaFetcherManager)
connect    |   session.timeout.ms = 45000
kafka      | [2025-06-17 05:57:50,571] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 7 from controller 1 epoch 1 as part of the become-leader transition for 50 partitions (state.change.logger)
connect    |   socket.connection.setup.timeout.max.ms = 30000
kafka      | [2025-06-17 05:57:50,593] INFO [LogLoader partition=__consumer_offsets-3, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   socket.connection.setup.timeout.ms = 10000
kafka      | [2025-06-17 05:57:50,597] INFO Created log for partition __consumer_offsets-3 in /var/lib/kafka/data/__consumer_offsets-3 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   ssl.cipher.suites = null
kafka      | [2025-06-17 05:57:50,600] INFO [Partition __consumer_offsets-3 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-3 (kafka.cluster.Partition)
connect    |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
kafka      | [2025-06-17 05:57:50,601] INFO [Partition __consumer_offsets-3 broker=1] Log loaded for partition __consumer_offsets-3 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   ssl.endpoint.identification.algorithm = https
kafka      | [2025-06-17 05:57:50,603] INFO [Broker id=1] Leader __consumer_offsets-3 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   ssl.engine.factory.class = null
kafka      | [2025-06-17 05:57:50,746] INFO [LogLoader partition=__consumer_offsets-18, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   ssl.key.password = null
kafka      | [2025-06-17 05:57:50,749] INFO Created log for partition __consumer_offsets-18 in /var/lib/kafka/data/__consumer_offsets-18 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   ssl.keymanager.algorithm = SunX509
kafka      | [2025-06-17 05:57:50,749] INFO [Partition __consumer_offsets-18 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-18 (kafka.cluster.Partition)
connect    |   ssl.keystore.certificate.chain = null
kafka      | [2025-06-17 05:57:50,750] INFO [Partition __consumer_offsets-18 broker=1] Log loaded for partition __consumer_offsets-18 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   ssl.keystore.key = null
kafka      | [2025-06-17 05:57:50,750] INFO [Broker id=1] Leader __consumer_offsets-18 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   ssl.keystore.location = null
kafka      | [2025-06-17 05:57:50,797] INFO [LogLoader partition=__consumer_offsets-41, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   ssl.keystore.password = null
kafka      | [2025-06-17 05:57:50,802] INFO Created log for partition __consumer_offsets-41 in /var/lib/kafka/data/__consumer_offsets-41 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   ssl.keystore.type = JKS
kafka      | [2025-06-17 05:57:50,802] INFO [Partition __consumer_offsets-41 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-41 (kafka.cluster.Partition)
connect    |   ssl.protocol = TLSv1.3
kafka      | [2025-06-17 05:57:50,803] INFO [Partition __consumer_offsets-41 broker=1] Log loaded for partition __consumer_offsets-41 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   ssl.provider = null
kafka      | [2025-06-17 05:57:50,803] INFO [Broker id=1] Leader __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   ssl.secure.random.implementation = null
kafka      | [2025-06-17 05:57:50,842] INFO [LogLoader partition=__consumer_offsets-10, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   ssl.trustmanager.algorithm = PKIX
kafka      | [2025-06-17 05:57:50,852] INFO Created log for partition __consumer_offsets-10 in /var/lib/kafka/data/__consumer_offsets-10 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   ssl.truststore.certificates = null
kafka      | [2025-06-17 05:57:50,853] INFO [Partition __consumer_offsets-10 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-10 (kafka.cluster.Partition)
connect    |   ssl.truststore.location = null
kafka      | [2025-06-17 05:57:50,853] INFO [Partition __consumer_offsets-10 broker=1] Log loaded for partition __consumer_offsets-10 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   ssl.truststore.password = null
kafka      | [2025-06-17 05:57:50,853] INFO [Broker id=1] Leader __consumer_offsets-10 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   ssl.truststore.type = JKS
kafka      | [2025-06-17 05:57:50,888] INFO [LogLoader partition=__consumer_offsets-33, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
kafka      | [2025-06-17 05:57:50,891] INFO Created log for partition __consumer_offsets-33 in /var/lib/kafka/data/__consumer_offsets-33 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |  (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:50,893] INFO [Partition __consumer_offsets-33 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-33 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,070] INFO [Producer clientId=producer-1] Cluster ID: giJkw9-kTvOOXXJyYfUXQw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:50,894] INFO [Partition __consumer_offsets-33 broker=1] Log loaded for partition __consumer_offsets-33 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,349] WARN The configuration 'config.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:50,895] INFO [Broker id=1] Leader __consumer_offsets-33 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,350] WARN The configuration 'metrics.context.connect.group.id' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:50,938] INFO [LogLoader partition=__consumer_offsets-48, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,350] WARN The configuration 'rest.advertised.host.name' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:50,942] INFO Created log for partition __consumer_offsets-48 in /var/lib/kafka/data/__consumer_offsets-48 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,350] WARN The configuration 'status.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:50,942] INFO [Partition __consumer_offsets-48 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-48 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,350] WARN The configuration 'plugin.path' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:50,943] INFO [Partition __consumer_offsets-48 broker=1] Log loaded for partition __consumer_offsets-48 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,350] WARN The configuration 'offset.flush.interval.ms' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:50,943] INFO [Broker id=1] Leader __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,350] WARN The configuration 'rest.port' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:50,994] INFO [LogLoader partition=__consumer_offsets-19, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,350] WARN The configuration 'config.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:50,999] INFO Created log for partition __consumer_offsets-19 in /var/lib/kafka/data/__consumer_offsets-19 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,350] WARN The configuration 'key.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:50,999] INFO [Partition __consumer_offsets-19 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-19 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,350] WARN The configuration 'zookeeper.connect' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:51,000] INFO [Partition __consumer_offsets-19 broker=1] Log loaded for partition __consumer_offsets-19 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,350] WARN The configuration 'metrics.context.connect.kafka.cluster.id' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:51,001] INFO [Broker id=1] Leader __consumer_offsets-19 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,350] WARN The configuration 'status.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:51,027] INFO [LogLoader partition=__consumer_offsets-34, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,350] WARN The configuration 'value.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:51,031] INFO Created log for partition __consumer_offsets-34 in /var/lib/kafka/data/__consumer_offsets-34 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,350] WARN The configuration 'offset.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:51,034] INFO [Partition __consumer_offsets-34 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-34 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,351] WARN The configuration 'offset.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:51,034] INFO [Partition __consumer_offsets-34 broker=1] Log loaded for partition __consumer_offsets-34 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,351] WARN The configuration 'value.converter' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:51,035] INFO [Broker id=1] Leader __consumer_offsets-34 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,351] WARN The configuration 'key.converter' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:51,076] INFO [LogLoader partition=__consumer_offsets-4, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,351] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:51,079] INFO Created log for partition __consumer_offsets-4 in /var/lib/kafka/data/__consumer_offsets-4 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,351] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:51,080] INFO [Partition __consumer_offsets-4 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-4 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,351] INFO Kafka startTimeMs: 1750139868351 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:51,080] INFO [Partition __consumer_offsets-4 broker=1] Log loaded for partition __consumer_offsets-4 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,394] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Cluster ID: giJkw9-kTvOOXXJyYfUXQw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,080] INFO [Broker id=1] Leader __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,489] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Subscribed to partition(s): docker-connect-offsets-0, docker-connect-offsets-5, docker-connect-offsets-10, docker-connect-offsets-20, docker-connect-offsets-15, docker-connect-offsets-9, docker-connect-offsets-11, docker-connect-offsets-16, docker-connect-offsets-4, docker-connect-offsets-17, docker-connect-offsets-3, docker-connect-offsets-24, docker-connect-offsets-23, docker-connect-offsets-13, docker-connect-offsets-18, docker-connect-offsets-22, docker-connect-offsets-2, docker-connect-offsets-8, docker-connect-offsets-12, docker-connect-offsets-19, docker-connect-offsets-14, docker-connect-offsets-1, docker-connect-offsets-6, docker-connect-offsets-7, docker-connect-offsets-21 (org.apache.kafka.clients.consumer.KafkaConsumer)
kafka      | [2025-06-17 05:57:51,104] INFO [LogLoader partition=__consumer_offsets-11, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,512] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-0 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,110] INFO Created log for partition __consumer_offsets-11 in /var/lib/kafka/data/__consumer_offsets-11 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,514] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-5 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,110] INFO [Partition __consumer_offsets-11 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-11 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,514] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-10 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,110] INFO [Partition __consumer_offsets-11 broker=1] Log loaded for partition __consumer_offsets-11 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,514] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-20 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,110] INFO [Broker id=1] Leader __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,514] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-15 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,134] INFO [LogLoader partition=__consumer_offsets-26, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,514] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-9 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,137] INFO Created log for partition __consumer_offsets-26 in /var/lib/kafka/data/__consumer_offsets-26 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,514] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-11 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,138] INFO [Partition __consumer_offsets-26 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-26 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,514] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-16 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,138] INFO [Partition __consumer_offsets-26 broker=1] Log loaded for partition __consumer_offsets-26 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,514] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-4 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,139] INFO [Broker id=1] Leader __consumer_offsets-26 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,515] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-17 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,164] INFO [LogLoader partition=__consumer_offsets-49, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,515] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-3 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,169] INFO Created log for partition __consumer_offsets-49 in /var/lib/kafka/data/__consumer_offsets-49 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,515] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-24 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,170] INFO [Partition __consumer_offsets-49 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-49 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,515] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-23 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,171] INFO [Partition __consumer_offsets-49 broker=1] Log loaded for partition __consumer_offsets-49 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,515] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-13 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,172] INFO [Broker id=1] Leader __consumer_offsets-49 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,515] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-18 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,199] INFO [LogLoader partition=__consumer_offsets-39, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,515] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-22 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,201] INFO Created log for partition __consumer_offsets-39 in /var/lib/kafka/data/__consumer_offsets-39 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,515] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-2 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,201] INFO [Partition __consumer_offsets-39 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-39 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,515] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-8 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,202] INFO [Partition __consumer_offsets-39 broker=1] Log loaded for partition __consumer_offsets-39 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,515] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-12 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,202] INFO [Broker id=1] Leader __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,515] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-19 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,229] INFO [LogLoader partition=__consumer_offsets-9, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,515] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-14 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,233] INFO Created log for partition __consumer_offsets-9 in /var/lib/kafka/data/__consumer_offsets-9 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,515] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-1 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,233] INFO [Partition __consumer_offsets-9 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-9 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,515] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-6 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,233] INFO [Partition __consumer_offsets-9 broker=1] Log loaded for partition __consumer_offsets-9 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,515] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-7 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,233] INFO [Broker id=1] Leader __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,515] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-offsets-21 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,266] INFO [LogLoader partition=__consumer_offsets-24, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | Jun 17, 2025 5:57:48 AM org.glassfish.jersey.internal.Errors logErrors
kafka      | [2025-06-17 05:57:51,270] INFO Created log for partition __consumer_offsets-24 in /var/lib/kafka/data/__consumer_offsets-24 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | WARNING: The following warnings have been detected: WARNING: The (sub)resource method listLoggers in org.apache.kafka.connect.runtime.rest.resources.LoggingResource contains empty path annotation.
kafka      | [2025-06-17 05:57:51,271] INFO [Partition __consumer_offsets-24 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-24 (kafka.cluster.Partition)
connect    | WARNING: The (sub)resource method listConnectors in org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource contains empty path annotation.
kafka      | [2025-06-17 05:57:51,271] INFO [Partition __consumer_offsets-24 broker=1] Log loaded for partition __consumer_offsets-24 with initial high watermark 0 (kafka.cluster.Partition)
connect    | WARNING: The (sub)resource method createConnector in org.apache.kafka.connect.runtime.rest.resources.ConnectorsResource contains empty path annotation.
kafka      | [2025-06-17 05:57:51,272] INFO [Broker id=1] Leader __consumer_offsets-24 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | WARNING: The (sub)resource method listConnectorPlugins in org.apache.kafka.connect.runtime.rest.resources.ConnectorPluginsResource contains empty path annotation.
kafka      | [2025-06-17 05:57:51,310] INFO [LogLoader partition=__consumer_offsets-31, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | WARNING: The (sub)resource method serverInfo in org.apache.kafka.connect.runtime.rest.resources.RootResource contains empty path annotation.
kafka      | [2025-06-17 05:57:51,318] INFO Created log for partition __consumer_offsets-31 in /var/lib/kafka/data/__consumer_offsets-31 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |
kafka      | [2025-06-17 05:57:51,319] INFO [Partition __consumer_offsets-31 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-31 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,626] INFO Started o.e.j.s.ServletContextHandler@69438db0{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
kafka      | [2025-06-17 05:57:51,322] INFO [Partition __consumer_offsets-31 broker=1] Log loaded for partition __consumer_offsets-31 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,629] INFO REST resources initialized; server is started and ready to handle requests (org.apache.kafka.connect.runtime.rest.RestServer)
kafka      | [2025-06-17 05:57:51,323] INFO [Broker id=1] Leader __consumer_offsets-31 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,630] INFO Kafka Connect started (org.apache.kafka.connect.runtime.Connect)
kafka      | [2025-06-17 05:57:51,355] INFO [LogLoader partition=__consumer_offsets-46, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,724] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-0 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,359] INFO Created log for partition __consumer_offsets-46 in /var/lib/kafka/data/__consumer_offsets-46 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,726] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-5 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,360] INFO [Partition __consumer_offsets-46 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-46 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,726] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-10 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,360] INFO [Partition __consumer_offsets-46 broker=1] Log loaded for partition __consumer_offsets-46 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,726] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-20 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,360] INFO [Broker id=1] Leader __consumer_offsets-46 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,726] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-15 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,399] INFO [LogLoader partition=__consumer_offsets-1, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,726] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-9 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,402] INFO Created log for partition __consumer_offsets-1 in /var/lib/kafka/data/__consumer_offsets-1 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,726] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-11 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,402] INFO [Partition __consumer_offsets-1 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-1 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,726] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-16 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,403] INFO [Partition __consumer_offsets-1 broker=1] Log loaded for partition __consumer_offsets-1 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,726] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-4 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,407] INFO [Broker id=1] Leader __consumer_offsets-1 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,727] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-17 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,434] INFO [LogLoader partition=__consumer_offsets-16, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,727] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-3 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,437] INFO Created log for partition __consumer_offsets-16 in /var/lib/kafka/data/__consumer_offsets-16 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,727] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-24 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,438] INFO [Partition __consumer_offsets-16 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-16 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,727] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-23 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,438] INFO [Partition __consumer_offsets-16 broker=1] Log loaded for partition __consumer_offsets-16 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,727] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-13 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,439] INFO [Broker id=1] Leader __consumer_offsets-16 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,727] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-18 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,468] INFO [LogLoader partition=__consumer_offsets-2, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,727] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-22 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,471] INFO Created log for partition __consumer_offsets-2 in /var/lib/kafka/data/__consumer_offsets-2 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,727] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-2 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,472] INFO [Partition __consumer_offsets-2 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-2 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,727] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-8 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,472] INFO [Partition __consumer_offsets-2 broker=1] Log loaded for partition __consumer_offsets-2 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,727] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-12 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,472] INFO [Broker id=1] Leader __consumer_offsets-2 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,727] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-19 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,514] INFO [LogLoader partition=__consumer_offsets-25, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,728] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-14 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,519] INFO Created log for partition __consumer_offsets-25 in /var/lib/kafka/data/__consumer_offsets-25 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,728] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-1 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,519] INFO [Partition __consumer_offsets-25 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-25 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,728] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-6 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,519] INFO [Partition __consumer_offsets-25 broker=1] Log loaded for partition __consumer_offsets-25 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,728] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-7 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,519] INFO [Broker id=1] Leader __consumer_offsets-25 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,728] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-21 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:51,557] INFO [LogLoader partition=__consumer_offsets-40, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,769] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-11 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,563] INFO Created log for partition __consumer_offsets-40 in /var/lib/kafka/data/__consumer_offsets-40 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,774] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-13 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,565] INFO [Partition __consumer_offsets-40 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-40 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,775] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-15 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,567] INFO [Partition __consumer_offsets-40 broker=1] Log loaded for partition __consumer_offsets-40 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,776] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-17 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,568] INFO [Broker id=1] Leader __consumer_offsets-40 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,778] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,631] INFO [LogLoader partition=__consumer_offsets-47, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,781] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,635] INFO Created log for partition __consumer_offsets-47 in /var/lib/kafka/data/__consumer_offsets-47 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,782] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,637] INFO [Partition __consumer_offsets-47 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-47 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,783] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,640] INFO [Partition __consumer_offsets-47 broker=1] Log loaded for partition __consumer_offsets-47 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,783] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,640] INFO [Broker id=1] Leader __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,784] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-18 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,706] INFO [LogLoader partition=__consumer_offsets-17, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,784] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-20 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,713] INFO Created log for partition __consumer_offsets-17 in /var/lib/kafka/data/__consumer_offsets-17 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,784] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-22 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,714] INFO [Partition __consumer_offsets-17 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-17 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,785] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-24 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,714] INFO [Partition __consumer_offsets-17 broker=1] Log loaded for partition __consumer_offsets-17 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,785] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-10 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,714] INFO [Broker id=1] Leader __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,785] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-12 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,757] INFO [LogLoader partition=__consumer_offsets-32, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,785] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-14 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,767] INFO Created log for partition __consumer_offsets-32 in /var/lib/kafka/data/__consumer_offsets-32 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,785] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-16 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,768] INFO [Partition __consumer_offsets-32 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-32 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,785] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,769] INFO [Partition __consumer_offsets-32 broker=1] Log loaded for partition __consumer_offsets-32 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,785] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,769] INFO [Broker id=1] Leader __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,786] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,816] INFO [LogLoader partition=__consumer_offsets-37, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,786] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,831] INFO Created log for partition __consumer_offsets-37 in /var/lib/kafka/data/__consumer_offsets-37 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,786] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,831] INFO [Partition __consumer_offsets-37 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-37 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,786] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-19 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,831] INFO [Partition __consumer_offsets-37 broker=1] Log loaded for partition __consumer_offsets-37 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,786] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-21 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,832] INFO [Broker id=1] Leader __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,786] INFO [Consumer clientId=consumer-compose-connect-group-1, groupId=compose-connect-group] Resetting offset for partition docker-connect-offsets-23 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:51,870] INFO [LogLoader partition=__consumer_offsets-7, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:48,791] INFO Finished reading KafkaBasedLog for topic docker-connect-offsets (org.apache.kafka.connect.util.KafkaBasedLog)
kafka      | [2025-06-17 05:57:51,874] INFO Created log for partition __consumer_offsets-7 in /var/lib/kafka/data/__consumer_offsets-7 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:48,791] INFO Started KafkaBasedLog for topic docker-connect-offsets (org.apache.kafka.connect.util.KafkaBasedLog)
kafka      | [2025-06-17 05:57:51,874] INFO [Partition __consumer_offsets-7 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-7 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,791] INFO Finished reading offsets topic and starting KafkaOffsetBackingStore (org.apache.kafka.connect.storage.KafkaOffsetBackingStore)
kafka      | [2025-06-17 05:57:51,875] INFO [Partition __consumer_offsets-7 broker=1] Log loaded for partition __consumer_offsets-7 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:48,802] INFO Worker started (org.apache.kafka.connect.runtime.Worker)
kafka      | [2025-06-17 05:57:51,875] INFO [Broker id=1] Leader __consumer_offsets-7 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:48,802] INFO Starting KafkaBasedLog with topic docker-connect-status (org.apache.kafka.connect.util.KafkaBasedLog)
kafka      | [2025-06-17 05:57:51,913] INFO [LogLoader partition=__consumer_offsets-22, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:49,226] INFO Created topic (name=docker-connect-status, numPartitions=5, replicationFactor=1, replicasAssignments=null, configs={cleanup.policy=compact}) on brokers at kafka:29092 (org.apache.kafka.connect.util.TopicAdmin)
kafka      | [2025-06-17 05:57:51,919] INFO Created log for partition __consumer_offsets-22 in /var/lib/kafka/data/__consumer_offsets-22 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:49,228] INFO ProducerConfig values:
kafka      | [2025-06-17 05:57:51,919] INFO [Partition __consumer_offsets-22 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-22 (kafka.cluster.Partition)
connect    |   acks = -1
kafka      | [2025-06-17 05:57:51,919] INFO [Partition __consumer_offsets-22 broker=1] Log loaded for partition __consumer_offsets-22 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   batch.size = 16384
kafka      | [2025-06-17 05:57:51,920] INFO [Broker id=1] Leader __consumer_offsets-22 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   bootstrap.servers = [kafka:29092]
kafka      | [2025-06-17 05:57:51,985] INFO [LogLoader partition=__consumer_offsets-29, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   buffer.memory = 33554432
kafka      | [2025-06-17 05:57:51,987] INFO Created log for partition __consumer_offsets-29 in /var/lib/kafka/data/__consumer_offsets-29 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   client.dns.lookup = use_all_dns_ips
kafka      | [2025-06-17 05:57:51,988] INFO [Partition __consumer_offsets-29 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-29 (kafka.cluster.Partition)
connect    |   client.id = producer-2
kafka      | [2025-06-17 05:57:51,988] INFO [Partition __consumer_offsets-29 broker=1] Log loaded for partition __consumer_offsets-29 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   compression.type = none
kafka      | [2025-06-17 05:57:51,988] INFO [Broker id=1] Leader __consumer_offsets-29 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   connections.max.idle.ms = 540000
kafka      | [2025-06-17 05:57:52,022] INFO [LogLoader partition=__consumer_offsets-44, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   delivery.timeout.ms = 120000
kafka      | [2025-06-17 05:57:52,027] INFO Created log for partition __consumer_offsets-44 in /var/lib/kafka/data/__consumer_offsets-44 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   enable.idempotence = false
kafka      | [2025-06-17 05:57:52,027] INFO [Partition __consumer_offsets-44 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-44 (kafka.cluster.Partition)
connect    |   interceptor.classes = []
kafka      | [2025-06-17 05:57:52,027] INFO [Partition __consumer_offsets-44 broker=1] Log loaded for partition __consumer_offsets-44 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   key.serializer = class org.apache.kafka.common.serialization.StringSerializer
kafka      | [2025-06-17 05:57:52,028] INFO [Broker id=1] Leader __consumer_offsets-44 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   linger.ms = 0
kafka      | [2025-06-17 05:57:52,057] INFO [LogLoader partition=__consumer_offsets-14, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   max.block.ms = 60000
kafka      | [2025-06-17 05:57:52,067] INFO Created log for partition __consumer_offsets-14 in /var/lib/kafka/data/__consumer_offsets-14 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   max.in.flight.requests.per.connection = 1
kafka      | [2025-06-17 05:57:52,068] INFO [Partition __consumer_offsets-14 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-14 (kafka.cluster.Partition)
connect    |   max.request.size = 1048576
kafka      | [2025-06-17 05:57:52,069] INFO [Partition __consumer_offsets-14 broker=1] Log loaded for partition __consumer_offsets-14 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   metadata.max.age.ms = 300000
kafka      | [2025-06-17 05:57:52,070] INFO [Broker id=1] Leader __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   metadata.max.idle.ms = 300000
kafka      | [2025-06-17 05:57:52,102] INFO [LogLoader partition=__consumer_offsets-23, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   metric.reporters = []
kafka      | [2025-06-17 05:57:52,105] INFO Created log for partition __consumer_offsets-23 in /var/lib/kafka/data/__consumer_offsets-23 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   metrics.num.samples = 2
kafka      | [2025-06-17 05:57:52,105] INFO [Partition __consumer_offsets-23 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-23 (kafka.cluster.Partition)
connect    |   metrics.recording.level = INFO
kafka      | [2025-06-17 05:57:52,105] INFO [Partition __consumer_offsets-23 broker=1] Log loaded for partition __consumer_offsets-23 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   metrics.sample.window.ms = 30000
kafka      | [2025-06-17 05:57:52,106] INFO [Broker id=1] Leader __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
kafka      | [2025-06-17 05:57:52,147] INFO [LogLoader partition=__consumer_offsets-38, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   receive.buffer.bytes = 32768
kafka      | [2025-06-17 05:57:52,150] INFO Created log for partition __consumer_offsets-38 in /var/lib/kafka/data/__consumer_offsets-38 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   reconnect.backoff.max.ms = 1000
kafka      | [2025-06-17 05:57:52,151] INFO [Partition __consumer_offsets-38 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-38 (kafka.cluster.Partition)
connect    |   reconnect.backoff.ms = 50
kafka      | [2025-06-17 05:57:52,151] INFO [Partition __consumer_offsets-38 broker=1] Log loaded for partition __consumer_offsets-38 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   request.timeout.ms = 30000
kafka      | [2025-06-17 05:57:52,152] INFO [Broker id=1] Leader __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   retries = 0
kafka      | [2025-06-17 05:57:52,195] INFO [LogLoader partition=__consumer_offsets-8, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:52,199] INFO Created log for partition __consumer_offsets-8 in /var/lib/kafka/data/__consumer_offsets-8 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   sasl.client.callback.handler.class = null
kafka      | [2025-06-17 05:57:52,200] INFO [Partition __consumer_offsets-8 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-8 (kafka.cluster.Partition)
connect    |   sasl.jaas.config = null
kafka      | [2025-06-17 05:57:52,200] INFO [Partition __consumer_offsets-8 broker=1] Log loaded for partition __consumer_offsets-8 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
kafka      | [2025-06-17 05:57:52,200] INFO [Broker id=1] Leader __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   sasl.kerberos.min.time.before.relogin = 60000
kafka      | [2025-06-17 05:57:52,231] INFO [LogLoader partition=__consumer_offsets-45, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.kerberos.service.name = null
kafka      | [2025-06-17 05:57:52,233] INFO Created log for partition __consumer_offsets-45 in /var/lib/kafka/data/__consumer_offsets-45 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   sasl.kerberos.ticket.renew.jitter = 0.05
kafka      | [2025-06-17 05:57:52,233] INFO [Partition __consumer_offsets-45 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-45 (kafka.cluster.Partition)
connect    |   sasl.kerberos.ticket.renew.window.factor = 0.8
kafka      | [2025-06-17 05:57:52,234] INFO [Partition __consumer_offsets-45 broker=1] Log loaded for partition __consumer_offsets-45 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.login.callback.handler.class = null
kafka      | [2025-06-17 05:57:52,234] INFO [Broker id=1] Leader __consumer_offsets-45 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   sasl.login.class = null
kafka      | [2025-06-17 05:57:52,264] INFO [LogLoader partition=__consumer_offsets-15, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.login.connect.timeout.ms = null
kafka      | [2025-06-17 05:57:52,267] INFO Created log for partition __consumer_offsets-15 in /var/lib/kafka/data/__consumer_offsets-15 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   sasl.login.read.timeout.ms = null
kafka      | [2025-06-17 05:57:52,267] INFO [Partition __consumer_offsets-15 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-15 (kafka.cluster.Partition)
connect    |   sasl.login.refresh.buffer.seconds = 300
kafka      | [2025-06-17 05:57:52,267] INFO [Partition __consumer_offsets-15 broker=1] Log loaded for partition __consumer_offsets-15 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.login.refresh.min.period.seconds = 60
kafka      | [2025-06-17 05:57:52,268] INFO [Broker id=1] Leader __consumer_offsets-15 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   sasl.login.refresh.window.factor = 0.8
kafka      | [2025-06-17 05:57:52,311] INFO [LogLoader partition=__consumer_offsets-30, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.login.refresh.window.jitter = 0.05
kafka      | [2025-06-17 05:57:52,317] INFO Created log for partition __consumer_offsets-30 in /var/lib/kafka/data/__consumer_offsets-30 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   sasl.login.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:52,318] INFO [Partition __consumer_offsets-30 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-30 (kafka.cluster.Partition)
connect    |   sasl.login.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:52,318] INFO [Partition __consumer_offsets-30 broker=1] Log loaded for partition __consumer_offsets-30 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.mechanism = GSSAPI
kafka      | [2025-06-17 05:57:52,319] INFO [Broker id=1] Leader __consumer_offsets-30 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   sasl.oauthbearer.clock.skew.seconds = 30
kafka      | [2025-06-17 05:57:52,349] INFO [LogLoader partition=__consumer_offsets-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.oauthbearer.expected.audience = null
kafka      | [2025-06-17 05:57:52,352] INFO Created log for partition __consumer_offsets-0 in /var/lib/kafka/data/__consumer_offsets-0 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   sasl.oauthbearer.expected.issuer = null
kafka      | [2025-06-17 05:57:52,352] INFO [Partition __consumer_offsets-0 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-0 (kafka.cluster.Partition)
connect    |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
kafka      | [2025-06-17 05:57:52,352] INFO [Partition __consumer_offsets-0 broker=1] Log loaded for partition __consumer_offsets-0 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:52,352] INFO [Broker id=1] Leader __consumer_offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:52,417] INFO [LogLoader partition=__consumer_offsets-35, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   sasl.oauthbearer.jwks.endpoint.url = null
kafka      | [2025-06-17 05:57:52,420] INFO Created log for partition __consumer_offsets-35 in /var/lib/kafka/data/__consumer_offsets-35 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   sasl.oauthbearer.scope.claim.name = scope
kafka      | [2025-06-17 05:57:52,420] INFO [Partition __consumer_offsets-35 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-35 (kafka.cluster.Partition)
connect    |   sasl.oauthbearer.sub.claim.name = sub
kafka      | [2025-06-17 05:57:52,421] INFO [Partition __consumer_offsets-35 broker=1] Log loaded for partition __consumer_offsets-35 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   sasl.oauthbearer.token.endpoint.url = null
kafka      | [2025-06-17 05:57:52,421] INFO [Broker id=1] Leader __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   security.protocol = PLAINTEXT
kafka      | [2025-06-17 05:57:52,463] INFO [LogLoader partition=__consumer_offsets-5, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   security.providers = null
kafka      | [2025-06-17 05:57:52,468] INFO Created log for partition __consumer_offsets-5 in /var/lib/kafka/data/__consumer_offsets-5 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   send.buffer.bytes = 131072
kafka      | [2025-06-17 05:57:52,469] INFO [Partition __consumer_offsets-5 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-5 (kafka.cluster.Partition)
connect    |   socket.connection.setup.timeout.max.ms = 30000
kafka      | [2025-06-17 05:57:52,469] INFO [Partition __consumer_offsets-5 broker=1] Log loaded for partition __consumer_offsets-5 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   socket.connection.setup.timeout.ms = 10000
kafka      | [2025-06-17 05:57:52,469] INFO [Broker id=1] Leader __consumer_offsets-5 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   ssl.cipher.suites = null
kafka      | [2025-06-17 05:57:52,511] INFO [LogLoader partition=__consumer_offsets-20, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
kafka      | [2025-06-17 05:57:52,515] INFO Created log for partition __consumer_offsets-20 in /var/lib/kafka/data/__consumer_offsets-20 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   ssl.endpoint.identification.algorithm = https
kafka      | [2025-06-17 05:57:52,515] INFO [Partition __consumer_offsets-20 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-20 (kafka.cluster.Partition)
connect    |   ssl.engine.factory.class = null
kafka      | [2025-06-17 05:57:52,515] INFO [Partition __consumer_offsets-20 broker=1] Log loaded for partition __consumer_offsets-20 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   ssl.key.password = null
kafka      | [2025-06-17 05:57:52,515] INFO [Broker id=1] Leader __consumer_offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   ssl.keymanager.algorithm = SunX509
kafka      | [2025-06-17 05:57:52,553] INFO [LogLoader partition=__consumer_offsets-27, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   ssl.keystore.certificate.chain = null
kafka      | [2025-06-17 05:57:52,560] INFO Created log for partition __consumer_offsets-27 in /var/lib/kafka/data/__consumer_offsets-27 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   ssl.keystore.key = null
kafka      | [2025-06-17 05:57:52,560] INFO [Partition __consumer_offsets-27 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-27 (kafka.cluster.Partition)
connect    |   ssl.keystore.location = null
kafka      | [2025-06-17 05:57:52,560] INFO [Partition __consumer_offsets-27 broker=1] Log loaded for partition __consumer_offsets-27 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   ssl.keystore.password = null
kafka      | [2025-06-17 05:57:52,561] INFO [Broker id=1] Leader __consumer_offsets-27 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   ssl.keystore.type = JKS
kafka      | [2025-06-17 05:57:52,588] INFO [LogLoader partition=__consumer_offsets-42, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   ssl.protocol = TLSv1.3
kafka      | [2025-06-17 05:57:52,590] INFO Created log for partition __consumer_offsets-42 in /var/lib/kafka/data/__consumer_offsets-42 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   ssl.provider = null
kafka      | [2025-06-17 05:57:52,590] INFO [Partition __consumer_offsets-42 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-42 (kafka.cluster.Partition)
connect    |   ssl.secure.random.implementation = null
kafka      | [2025-06-17 05:57:52,592] INFO [Partition __consumer_offsets-42 broker=1] Log loaded for partition __consumer_offsets-42 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   ssl.trustmanager.algorithm = PKIX
kafka      | [2025-06-17 05:57:52,593] INFO [Broker id=1] Leader __consumer_offsets-42 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   ssl.truststore.certificates = null
kafka      | [2025-06-17 05:57:52,619] INFO [LogLoader partition=__consumer_offsets-12, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   ssl.truststore.location = null
kafka      | [2025-06-17 05:57:52,623] INFO Created log for partition __consumer_offsets-12 in /var/lib/kafka/data/__consumer_offsets-12 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   ssl.truststore.password = null
kafka      | [2025-06-17 05:57:52,623] INFO [Partition __consumer_offsets-12 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-12 (kafka.cluster.Partition)
connect    |   ssl.truststore.type = JKS
kafka      | [2025-06-17 05:57:52,624] INFO [Partition __consumer_offsets-12 broker=1] Log loaded for partition __consumer_offsets-12 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   transaction.timeout.ms = 60000
kafka      | [2025-06-17 05:57:52,626] INFO [Broker id=1] Leader __consumer_offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   transactional.id = null
kafka      | [2025-06-17 05:57:52,659] INFO [LogLoader partition=__consumer_offsets-21, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
kafka      | [2025-06-17 05:57:52,662] INFO Created log for partition __consumer_offsets-21 in /var/lib/kafka/data/__consumer_offsets-21 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |  (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,663] INFO [Partition __consumer_offsets-21 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-21 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:49,239] WARN The configuration 'group.id' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,663] INFO [Partition __consumer_offsets-21 broker=1] Log loaded for partition __consumer_offsets-21 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:49,240] WARN The configuration 'plugin.path' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,664] INFO [Broker id=1] Leader __consumer_offsets-21 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:49,240] WARN The configuration 'metrics.context.connect.kafka.cluster.id' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,687] INFO [LogLoader partition=__consumer_offsets-36, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:49,240] WARN The configuration 'status.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,689] INFO Created log for partition __consumer_offsets-36 in /var/lib/kafka/data/__consumer_offsets-36 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:49,240] WARN The configuration 'offset.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,689] INFO [Partition __consumer_offsets-36 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-36 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:49,240] WARN The configuration 'value.converter' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,690] INFO [Partition __consumer_offsets-36 broker=1] Log loaded for partition __consumer_offsets-36 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:49,240] WARN The configuration 'key.converter' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,690] INFO [Broker id=1] Leader __consumer_offsets-36 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:49,240] WARN The configuration 'config.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,724] INFO [LogLoader partition=__consumer_offsets-6, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:49,240] WARN The configuration 'metrics.context.connect.group.id' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,729] INFO Created log for partition __consumer_offsets-6 in /var/lib/kafka/data/__consumer_offsets-6 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:49,240] WARN The configuration 'rest.advertised.host.name' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,730] INFO [Partition __consumer_offsets-6 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-6 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:49,240] WARN The configuration 'status.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,730] INFO [Partition __consumer_offsets-6 broker=1] Log loaded for partition __consumer_offsets-6 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:49,243] WARN The configuration 'offset.flush.interval.ms' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,730] INFO [Broker id=1] Leader __consumer_offsets-6 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:49,243] WARN The configuration 'rest.port' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,766] INFO [LogLoader partition=__consumer_offsets-43, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:49,243] WARN The configuration 'config.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,773] INFO Created log for partition __consumer_offsets-43 in /var/lib/kafka/data/__consumer_offsets-43 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:49,243] WARN The configuration 'key.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,773] INFO [Partition __consumer_offsets-43 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-43 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:49,243] WARN The configuration 'zookeeper.connect' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,773] INFO [Partition __consumer_offsets-43 broker=1] Log loaded for partition __consumer_offsets-43 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:49,243] WARN The configuration 'value.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,773] INFO [Broker id=1] Leader __consumer_offsets-43 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    | [2025-06-17 05:57:49,243] WARN The configuration 'offset.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:52,814] INFO [LogLoader partition=__consumer_offsets-13, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    | [2025-06-17 05:57:49,244] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:52,817] INFO Created log for partition __consumer_offsets-13 in /var/lib/kafka/data/__consumer_offsets-13 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    | [2025-06-17 05:57:49,244] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:52,818] INFO [Partition __consumer_offsets-13 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-13 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:49,244] INFO Kafka startTimeMs: 1750139869244 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:52,818] INFO [Partition __consumer_offsets-13 broker=1] Log loaded for partition __consumer_offsets-13 with initial high watermark 0 (kafka.cluster.Partition)
connect    | [2025-06-17 05:57:49,248] INFO ConsumerConfig values:
kafka      | [2025-06-17 05:57:52,818] INFO [Broker id=1] Leader __consumer_offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   allow.auto.create.topics = true
kafka      | [2025-06-17 05:57:52,876] INFO [LogLoader partition=__consumer_offsets-28, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
connect    |   auto.commit.interval.ms = 5000
kafka      | [2025-06-17 05:57:52,886] INFO Created log for partition __consumer_offsets-28 in /var/lib/kafka/data/__consumer_offsets-28 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
connect    |   auto.offset.reset = earliest
kafka      | [2025-06-17 05:57:52,887] INFO [Partition __consumer_offsets-28 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-28 (kafka.cluster.Partition)
connect    |   bootstrap.servers = [kafka:29092]
kafka      | [2025-06-17 05:57:52,887] INFO [Partition __consumer_offsets-28 broker=1] Log loaded for partition __consumer_offsets-28 with initial high watermark 0 (kafka.cluster.Partition)
connect    |   check.crcs = true
kafka      | [2025-06-17 05:57:52,888] INFO [Broker id=1] Leader __consumer_offsets-28 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
connect    |   client.dns.lookup = use_all_dns_ips
kafka      | [2025-06-17 05:57:52,939] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-3 (state.change.logger)
connect    |   client.id = consumer-compose-connect-group-2
kafka      | [2025-06-17 05:57:52,939] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-18 (state.change.logger)
connect    |   client.rack =
kafka      | [2025-06-17 05:57:52,939] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
connect    |   connections.max.idle.ms = 540000
kafka      | [2025-06-17 05:57:52,939] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-10 (state.change.logger)
connect    |   default.api.timeout.ms = 60000
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-33 (state.change.logger)
connect    |   enable.auto.commit = false
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
connect    |   exclude.internal.topics = true
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-19 (state.change.logger)
connect    |   fetch.max.bytes = 52428800
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-34 (state.change.logger)
connect    |   fetch.max.wait.ms = 500
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
connect    |   fetch.min.bytes = 1
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
connect    |   group.id = compose-connect-group
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
connect    |   group.instance.id = null
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-49 (state.change.logger)
connect    |   heartbeat.interval.ms = 3000
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-39 (state.change.logger)
connect    |   interceptor.classes = []
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-9 (state.change.logger)
connect    |   internal.leave.group.on.close = true
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
connect    |   internal.throw.on.fetch.stable.offset.unsupported = false
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-31 (state.change.logger)
connect    |   isolation.level = read_uncommitted
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-46 (state.change.logger)
connect    |   key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-1 (state.change.logger)
connect    |   max.partition.fetch.bytes = 1048576
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
connect    |   max.poll.interval.ms = 300000
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
connect    |   max.poll.records = 500
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-25 (state.change.logger)
connect    |   metadata.max.age.ms = 300000
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
connect    |   metric.reporters = []
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
connect    |   metrics.num.samples = 2
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
connect    |   metrics.recording.level = INFO
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
connect    |   metrics.sample.window.ms = 30000
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-37 (state.change.logger)
connect    |   partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-7 (state.change.logger)
connect    |   receive.buffer.bytes = 65536
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-22 (state.change.logger)
connect    |   reconnect.backoff.max.ms = 1000
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
connect    |   reconnect.backoff.ms = 50
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
connect    |   request.timeout.ms = 30000
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
connect    |   retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
connect    |   sasl.client.callback.handler.class = null
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
connect    |   sasl.jaas.config = null
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
connect    |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-45 (state.change.logger)
connect    |   sasl.kerberos.min.time.before.relogin = 60000
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-15 (state.change.logger)
connect    |   sasl.kerberos.service.name = null
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-30 (state.change.logger)
connect    |   sasl.kerberos.ticket.renew.jitter = 0.05
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
connect    |   sasl.kerberos.ticket.renew.window.factor = 0.8
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
connect    |   sasl.login.callback.handler.class = null
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
connect    |   sasl.login.class = null
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
connect    |   sasl.login.connect.timeout.ms = null
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-27 (state.change.logger)
connect    |   sasl.login.read.timeout.ms = null
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-42 (state.change.logger)
connect    |   sasl.login.refresh.buffer.seconds = 300
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
connect    |   sasl.login.refresh.min.period.seconds = 60
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-21 (state.change.logger)
connect    |   sasl.login.refresh.window.factor = 0.8
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
connect    |   sasl.login.refresh.window.jitter = 0.05
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-6 (state.change.logger)
connect    |   sasl.login.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-43 (state.change.logger)
connect    |   sasl.login.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-13 (state.change.logger)
connect    |   sasl.mechanism = GSSAPI
kafka      | [2025-06-17 05:57:52,940] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
connect    |   sasl.oauthbearer.clock.skew.seconds = 30
kafka      | [2025-06-17 05:57:52,945] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 3 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   sasl.oauthbearer.expected.audience = null
kafka      | [2025-06-17 05:57:52,965] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-3 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   sasl.oauthbearer.expected.issuer = null
kafka      | [2025-06-17 05:57:52,976] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 18 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
kafka      | [2025-06-17 05:57:52,976] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-18 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:52,977] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 41 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:52,977] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-41 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   sasl.oauthbearer.jwks.endpoint.url = null
kafka      | [2025-06-17 05:57:52,977] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 10 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   sasl.oauthbearer.scope.claim.name = scope
kafka      | [2025-06-17 05:57:52,977] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-10 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   sasl.oauthbearer.sub.claim.name = sub
kafka      | [2025-06-17 05:57:52,977] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 33 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   sasl.oauthbearer.token.endpoint.url = null
kafka      | [2025-06-17 05:57:52,977] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-33 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   security.protocol = PLAINTEXT
kafka      | [2025-06-17 05:57:52,977] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 48 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   security.providers = null
kafka      | [2025-06-17 05:57:52,977] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-48 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   send.buffer.bytes = 131072
kafka      | [2025-06-17 05:57:52,977] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 19 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   session.timeout.ms = 45000
kafka      | [2025-06-17 05:57:52,977] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-19 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   socket.connection.setup.timeout.max.ms = 30000
kafka      | [2025-06-17 05:57:52,977] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 34 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   socket.connection.setup.timeout.ms = 10000
kafka      | [2025-06-17 05:57:52,977] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-34 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.cipher.suites = null
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 4 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-4 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.endpoint.identification.algorithm = https
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 11 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   ssl.engine.factory.class = null
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-11 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.key.password = null
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 26 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   ssl.keymanager.algorithm = SunX509
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-26 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.keystore.certificate.chain = null
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 49 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   ssl.keystore.key = null
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-49 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.keystore.location = null
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 39 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   ssl.keystore.password = null
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-39 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.keystore.type = JKS
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 9 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   ssl.protocol = TLSv1.3
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-9 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.provider = null
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 24 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   ssl.secure.random.implementation = null
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-24 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.trustmanager.algorithm = PKIX
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 31 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   ssl.truststore.certificates = null
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-31 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.truststore.location = null
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 46 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   ssl.truststore.password = null
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-46 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.truststore.type = JKS
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 1 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-1 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |  (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 16 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,265] WARN The configuration 'config.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-16 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,266] WARN The configuration 'metrics.context.connect.group.id' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 2 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,266] INFO [Producer clientId=producer-2] Cluster ID: giJkw9-kTvOOXXJyYfUXQw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-2 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,267] WARN The configuration 'rest.advertised.host.name' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 25 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,269] WARN The configuration 'status.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-25 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,269] WARN The configuration 'plugin.path' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 40 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,269] WARN The configuration 'offset.flush.interval.ms' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-40 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,269] WARN The configuration 'rest.port' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 47 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,269] WARN The configuration 'config.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-47 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,269] WARN The configuration 'key.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 17 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,269] WARN The configuration 'zookeeper.connect' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-17 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,269] WARN The configuration 'metrics.context.connect.kafka.cluster.id' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 32 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,269] WARN The configuration 'status.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-32 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,270] WARN The configuration 'value.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 37 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,270] WARN The configuration 'offset.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-37 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,270] WARN The configuration 'offset.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,978] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 7 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,270] WARN The configuration 'value.converter' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-7 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,270] WARN The configuration 'key.converter' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 22 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,270] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-22 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,270] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 29 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,270] INFO Kafka startTimeMs: 1750139869270 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-29 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,294] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Cluster ID: giJkw9-kTvOOXXJyYfUXQw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 44 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,304] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Subscribed to partition(s): docker-connect-status-0, docker-connect-status-1, docker-connect-status-4, docker-connect-status-2, docker-connect-status-3 (org.apache.kafka.clients.consumer.KafkaConsumer)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-44 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,305] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-status-0 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 14 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,305] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-status-1 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-14 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,305] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-status-4 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 23 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,305] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-status-2 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-23 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,305] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-status-3 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 38 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,344] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-status-0 to 0 since the associated topicId changed from null to DOYJ0f7gSmuuzUw0uWQTFw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-38 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,345] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-status-1 to 0 since the associated topicId changed from null to DOYJ0f7gSmuuzUw0uWQTFw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 8 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,345] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-status-4 to 0 since the associated topicId changed from null to DOYJ0f7gSmuuzUw0uWQTFw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-8 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,345] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-status-2 to 0 since the associated topicId changed from null to DOYJ0f7gSmuuzUw0uWQTFw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 45 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,345] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-status-3 to 0 since the associated topicId changed from null to DOYJ0f7gSmuuzUw0uWQTFw (org.apache.kafka.clients.Metadata)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-45 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,361] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Resetting offset for partition docker-connect-status-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 15 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,362] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Resetting offset for partition docker-connect-status-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-15 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,362] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Resetting offset for partition docker-connect-status-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 30 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,362] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Resetting offset for partition docker-connect-status-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-30 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,362] INFO [Consumer clientId=consumer-compose-connect-group-2, groupId=compose-connect-group] Resetting offset for partition docker-connect-status-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 0 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,363] INFO Finished reading KafkaBasedLog for topic docker-connect-status (org.apache.kafka.connect.util.KafkaBasedLog)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-0 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,364] INFO Started KafkaBasedLog for topic docker-connect-status (org.apache.kafka.connect.util.KafkaBasedLog)
kafka      | [2025-06-17 05:57:52,979] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 35 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,384] INFO Starting KafkaConfigBackingStore (org.apache.kafka.connect.storage.KafkaConfigBackingStore)
kafka      | [2025-06-17 05:57:52,980] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-35 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,385] INFO Starting KafkaBasedLog with topic docker-connect-configs (org.apache.kafka.connect.util.KafkaBasedLog)
kafka      | [2025-06-17 05:57:52,980] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 5 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    | [2025-06-17 05:57:49,575] INFO Created topic (name=docker-connect-configs, numPartitions=1, replicationFactor=1, replicasAssignments=null, configs={cleanup.policy=compact}) on brokers at kafka:29092 (org.apache.kafka.connect.util.TopicAdmin)
kafka      | [2025-06-17 05:57:52,980] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-5 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,576] INFO ProducerConfig values:
kafka      | [2025-06-17 05:57:52,980] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 20 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   acks = -1
kafka      | [2025-06-17 05:57:52,980] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-20 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   batch.size = 16384
kafka      | [2025-06-17 05:57:52,980] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 27 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   bootstrap.servers = [kafka:29092]
kafka      | [2025-06-17 05:57:52,980] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-27 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   buffer.memory = 33554432
kafka      | [2025-06-17 05:57:52,980] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 42 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   client.dns.lookup = use_all_dns_ips
kafka      | [2025-06-17 05:57:52,980] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-42 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   client.id = producer-3
kafka      | [2025-06-17 05:57:52,980] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 12 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   compression.type = none
kafka      | [2025-06-17 05:57:52,980] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-12 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   connections.max.idle.ms = 540000
kafka      | [2025-06-17 05:57:52,980] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 21 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   delivery.timeout.ms = 2147483647
kafka      | [2025-06-17 05:57:52,980] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-21 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   enable.idempotence = false
kafka      | [2025-06-17 05:57:52,980] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 36 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   interceptor.classes = []
kafka      | [2025-06-17 05:57:52,980] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-36 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   key.serializer = class org.apache.kafka.common.serialization.StringSerializer
kafka      | [2025-06-17 05:57:52,980] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 6 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   linger.ms = 0
kafka      | [2025-06-17 05:57:52,980] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-6 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   max.block.ms = 60000
kafka      | [2025-06-17 05:57:52,980] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 43 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   max.in.flight.requests.per.connection = 1
kafka      | [2025-06-17 05:57:52,980] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-43 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   max.request.size = 1048576
kafka      | [2025-06-17 05:57:52,980] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 13 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   metadata.max.age.ms = 300000
kafka      | [2025-06-17 05:57:52,980] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-13 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   metadata.max.idle.ms = 300000
kafka      | [2025-06-17 05:57:52,980] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 28 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
connect    |   metric.reporters = []
kafka      | [2025-06-17 05:57:52,981] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-28 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
connect    |   metrics.num.samples = 2
kafka      | [2025-06-17 05:57:52,981] INFO [Broker id=1] Finished LeaderAndIsr request in 2618ms correlationId 7 from controller 1 for 50 partitions (state.change.logger)
connect    |   metrics.recording.level = INFO
kafka      | [2025-06-17 05:57:52,988] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=YSQvTL6cSGiVXztL2RhWOA, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=13, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=46, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=42, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=21, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=17, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=30, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=26, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=38, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=34, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=16, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=45, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=12, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=41, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=24, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=20, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=49, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=29, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=25, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=37, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=33, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=15, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=48, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=11, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=44, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=23, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=19, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=32, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=28, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=40, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=36, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=47, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=14, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=43, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=10, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=22, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=18, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=31, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=27, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=39, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=35, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 7 sent to broker kafka:29092 (id: 1 rack: null) (state.change.logger)
connect    |   metrics.sample.window.ms = 30000
kafka      | [2025-06-17 05:57:53,021] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
kafka      | [2025-06-17 05:57:53,022] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   receive.buffer.bytes = 32768
kafka      | [2025-06-17 05:57:53,022] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   reconnect.backoff.max.ms = 1000
kafka      | [2025-06-17 05:57:53,022] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   reconnect.backoff.ms = 50
kafka      | [2025-06-17 05:57:53,022] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   request.timeout.ms = 30000
kafka      | [2025-06-17 05:57:53,023] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   retries = 2147483647
kafka      | [2025-06-17 05:57:53,023] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.client.callback.handler.class = null
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.jaas.config = null
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.kerberos.min.time.before.relogin = 60000
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.kerberos.service.name = null
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.kerberos.ticket.renew.jitter = 0.05
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.kerberos.ticket.renew.window.factor = 0.8
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.login.callback.handler.class = null
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.login.class = null
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.login.connect.timeout.ms = null
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.login.read.timeout.ms = null
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.login.refresh.buffer.seconds = 300
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.login.refresh.min.period.seconds = 60
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.login.refresh.window.factor = 0.8
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.login.refresh.window.jitter = 0.05
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.login.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.login.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.mechanism = GSSAPI
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.oauthbearer.clock.skew.seconds = 30
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.oauthbearer.expected.audience = null
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.oauthbearer.expected.issuer = null
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
kafka      | [2025-06-17 05:57:53,024] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.oauthbearer.jwks.endpoint.url = null
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.oauthbearer.scope.claim.name = scope
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.oauthbearer.sub.claim.name = sub
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   sasl.oauthbearer.token.endpoint.url = null
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   security.protocol = PLAINTEXT
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   security.providers = null
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   send.buffer.bytes = 131072
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   socket.connection.setup.timeout.max.ms = 30000
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   socket.connection.setup.timeout.ms = 10000
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   ssl.cipher.suites = null
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   ssl.endpoint.identification.algorithm = https
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   ssl.engine.factory.class = null
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   ssl.key.password = null
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   ssl.keymanager.algorithm = SunX509
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   ssl.keystore.certificate.chain = null
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   ssl.keystore.key = null
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   ssl.keystore.location = null
kafka      | [2025-06-17 05:57:53,025] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   ssl.keystore.password = null
kafka      | [2025-06-17 05:57:53,026] INFO [Broker id=1] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
connect    |   ssl.keystore.type = JKS
kafka      | [2025-06-17 05:57:53,050] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 8 sent to broker kafka:29092 (id: 1 rack: null) (state.change.logger)
connect    |   ssl.protocol = TLSv1.3
kafka      | [2025-06-17 05:57:53,068] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-3 in 90 milliseconds for epoch 0, of which 17 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.provider = null
kafka      | [2025-06-17 05:57:53,070] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-18 in 94 milliseconds for epoch 0, of which 93 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.secure.random.implementation = null
kafka      | [2025-06-17 05:57:53,072] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-41 in 95 milliseconds for epoch 0, of which 94 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.trustmanager.algorithm = PKIX
kafka      | [2025-06-17 05:57:53,073] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-10 in 96 milliseconds for epoch 0, of which 95 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.truststore.certificates = null
kafka      | [2025-06-17 05:57:53,074] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-33 in 97 milliseconds for epoch 0, of which 97 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.truststore.location = null
kafka      | [2025-06-17 05:57:53,076] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-48 in 99 milliseconds for epoch 0, of which 98 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.truststore.password = null
kafka      | [2025-06-17 05:57:53,080] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-19 in 103 milliseconds for epoch 0, of which 101 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   ssl.truststore.type = JKS
kafka      | [2025-06-17 05:57:53,085] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-34 in 108 milliseconds for epoch 0, of which 104 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   transaction.timeout.ms = 60000
kafka      | [2025-06-17 05:57:53,088] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-4 in 109 milliseconds for epoch 0, of which 108 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   transactional.id = null
kafka      | [2025-06-17 05:57:53,089] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-11 in 111 milliseconds for epoch 0, of which 110 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
kafka      | [2025-06-17 05:57:53,090] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-26 in 112 milliseconds for epoch 0, of which 111 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |  (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,091] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-49 in 113 milliseconds for epoch 0, of which 112 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,596] WARN The configuration 'group.id' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,092] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-39 in 114 milliseconds for epoch 0, of which 113 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,597] WARN The configuration 'plugin.path' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,095] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-9 in 117 milliseconds for epoch 0, of which 115 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] WARN The configuration 'metrics.context.connect.kafka.cluster.id' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,103] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-24 in 124 milliseconds for epoch 0, of which 121 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] WARN The configuration 'status.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,105] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-31 in 127 milliseconds for epoch 0, of which 127 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] WARN The configuration 'offset.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,106] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-46 in 128 milliseconds for epoch 0, of which 128 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] WARN The configuration 'value.converter' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,107] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-1 in 129 milliseconds for epoch 0, of which 129 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] WARN The configuration 'key.converter' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,109] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-16 in 131 milliseconds for epoch 0, of which 130 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] WARN The configuration 'config.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,110] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-2 in 132 milliseconds for epoch 0, of which 131 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] WARN The configuration 'metrics.context.connect.group.id' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,112] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-25 in 133 milliseconds for epoch 0, of which 132 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] WARN The configuration 'rest.advertised.host.name' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,115] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-40 in 137 milliseconds for epoch 0, of which 136 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] WARN The configuration 'status.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,117] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-47 in 139 milliseconds for epoch 0, of which 138 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] WARN The configuration 'offset.flush.interval.ms' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,120] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-17 in 142 milliseconds for epoch 0, of which 140 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] WARN The configuration 'rest.port' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,122] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-32 in 144 milliseconds for epoch 0, of which 143 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] WARN The configuration 'config.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,124] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-37 in 146 milliseconds for epoch 0, of which 145 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] WARN The configuration 'key.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,125] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-7 in 146 milliseconds for epoch 0, of which 145 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] WARN The configuration 'zookeeper.connect' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,126] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-22 in 147 milliseconds for epoch 0, of which 146 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] WARN The configuration 'value.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,127] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-29 in 147 milliseconds for epoch 0, of which 147 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] WARN The configuration 'offset.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.producer.ProducerConfig)
kafka      | [2025-06-17 05:57:53,128] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-44 in 148 milliseconds for epoch 0, of which 148 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:53,130] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-14 in 150 milliseconds for epoch 0, of which 149 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:53,131] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-23 in 152 milliseconds for epoch 0, of which 152 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,599] INFO Kafka startTimeMs: 1750139869599 (org.apache.kafka.common.utils.AppInfoParser)
kafka      | [2025-06-17 05:57:53,132] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-38 in 153 milliseconds for epoch 0, of which 153 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    | [2025-06-17 05:57:49,601] INFO ConsumerConfig values:
kafka      | [2025-06-17 05:57:53,133] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-8 in 154 milliseconds for epoch 0, of which 154 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   allow.auto.create.topics = true
kafka      | [2025-06-17 05:57:53,135] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-45 in 156 milliseconds for epoch 0, of which 155 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   auto.commit.interval.ms = 5000
kafka      | [2025-06-17 05:57:53,136] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-15 in 157 milliseconds for epoch 0, of which 157 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   auto.offset.reset = earliest
kafka      | [2025-06-17 05:57:53,141] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-30 in 160 milliseconds for epoch 0, of which 159 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   bootstrap.servers = [kafka:29092]
kafka      | [2025-06-17 05:57:53,145] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-0 in 166 milliseconds for epoch 0, of which 165 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   check.crcs = true
kafka      | [2025-06-17 05:57:53,147] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-35 in 167 milliseconds for epoch 0, of which 166 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   client.dns.lookup = use_all_dns_ips
kafka      | [2025-06-17 05:57:53,148] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-5 in 168 milliseconds for epoch 0, of which 168 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   client.id = consumer-compose-connect-group-3
kafka      | [2025-06-17 05:57:53,149] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-20 in 169 milliseconds for epoch 0, of which 169 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   client.rack =
kafka      | [2025-06-17 05:57:53,151] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-27 in 170 milliseconds for epoch 0, of which 170 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   connections.max.idle.ms = 540000
kafka      | [2025-06-17 05:57:53,151] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-42 in 171 milliseconds for epoch 0, of which 171 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   default.api.timeout.ms = 60000
kafka      | [2025-06-17 05:57:53,154] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-12 in 174 milliseconds for epoch 0, of which 172 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   enable.auto.commit = false
kafka      | [2025-06-17 05:57:53,156] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-21 in 176 milliseconds for epoch 0, of which 175 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   exclude.internal.topics = true
kafka      | [2025-06-17 05:57:53,159] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-36 in 179 milliseconds for epoch 0, of which 178 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   fetch.max.bytes = 52428800
kafka      | [2025-06-17 05:57:53,163] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-6 in 182 milliseconds for epoch 0, of which 180 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   fetch.max.wait.ms = 500
kafka      | [2025-06-17 05:57:53,164] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-43 in 184 milliseconds for epoch 0, of which 183 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   fetch.min.bytes = 1
kafka      | [2025-06-17 05:57:53,166] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-13 in 186 milliseconds for epoch 0, of which 185 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   group.id = compose-connect-group
kafka      | [2025-06-17 05:57:53,167] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-28 in 186 milliseconds for epoch 0, of which 186 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
connect    |   group.instance.id = null
kafka      | [2025-06-17 05:57:53,233] INFO [GroupCoordinator 1]: Dynamic member with unknown member id joins group compose-connect-group in Empty state. Created a new member id connect-1-0ce5fff5-bfea-4ff6-b12d-6cdc5f6aad91 and request the member to rejoin with this id. (kafka.coordinator.group.GroupCoordinator)
connect    |   heartbeat.interval.ms = 3000
kafka      | [2025-06-17 05:57:53,274] INFO [GroupCoordinator 1]: Preparing to rebalance group compose-connect-group in state PreparingRebalance with old generation 0 (__consumer_offsets-37) (reason: Adding new member connect-1-0ce5fff5-bfea-4ff6-b12d-6cdc5f6aad91 with group instance id None; client reason: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)) (kafka.coordinator.group.GroupCoordinator)
connect    |   interceptor.classes = []
kafka      | [2025-06-17 05:57:53,311] INFO [GroupCoordinator 1]: Stabilized group compose-connect-group generation 1 (__consumer_offsets-37) with 1 members (kafka.coordinator.group.GroupCoordinator)
connect    |   internal.leave.group.on.close = true
kafka      | [2025-06-17 05:57:53,469] INFO [GroupCoordinator 1]: Assignment received from leader connect-1-0ce5fff5-bfea-4ff6-b12d-6cdc5f6aad91 for group compose-connect-group for generation 1. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
connect    |   internal.throw.on.fetch.stable.offset.unsupported = false
connect    |   isolation.level = read_uncommitted
connect    |   key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
connect    |   max.partition.fetch.bytes = 1048576
connect    |   max.poll.interval.ms = 300000
connect    |   max.poll.records = 500
connect    |   metadata.max.age.ms = 300000
connect    |   metric.reporters = []
connect    |   metrics.num.samples = 2
connect    |   metrics.recording.level = INFO
connect    |   metrics.sample.window.ms = 30000
connect    |   partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
connect    |   receive.buffer.bytes = 65536
connect    |   reconnect.backoff.max.ms = 1000
connect    |   reconnect.backoff.ms = 50
connect    |   request.timeout.ms = 30000
connect    |   retry.backoff.ms = 100
connect    |   sasl.client.callback.handler.class = null
connect    |   sasl.jaas.config = null
connect    |   sasl.kerberos.kinit.cmd = /usr/bin/kinit
connect    |   sasl.kerberos.min.time.before.relogin = 60000
connect    |   sasl.kerberos.service.name = null
connect    |   sasl.kerberos.ticket.renew.jitter = 0.05
connect    |   sasl.kerberos.ticket.renew.window.factor = 0.8
connect    |   sasl.login.callback.handler.class = null
connect    |   sasl.login.class = null
connect    |   sasl.login.connect.timeout.ms = null
connect    |   sasl.login.read.timeout.ms = null
connect    |   sasl.login.refresh.buffer.seconds = 300
connect    |   sasl.login.refresh.min.period.seconds = 60
connect    |   sasl.login.refresh.window.factor = 0.8
connect    |   sasl.login.refresh.window.jitter = 0.05
connect    |   sasl.login.retry.backoff.max.ms = 10000
connect    |   sasl.login.retry.backoff.ms = 100
connect    |   sasl.mechanism = GSSAPI
connect    |   sasl.oauthbearer.clock.skew.seconds = 30
connect    |   sasl.oauthbearer.expected.audience = null
connect    |   sasl.oauthbearer.expected.issuer = null
connect    |   sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
connect    |   sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
connect    |   sasl.oauthbearer.jwks.endpoint.url = null
connect    |   sasl.oauthbearer.scope.claim.name = scope
connect    |   sasl.oauthbearer.sub.claim.name = sub
connect    |   sasl.oauthbearer.token.endpoint.url = null
connect    |   security.protocol = PLAINTEXT
connect    |   security.providers = null
connect    |   send.buffer.bytes = 131072
connect    |   session.timeout.ms = 45000
connect    |   socket.connection.setup.timeout.max.ms = 30000
connect    |   socket.connection.setup.timeout.ms = 10000
connect    |   ssl.cipher.suites = null
connect    |   ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
connect    |   ssl.endpoint.identification.algorithm = https
connect    |   ssl.engine.factory.class = null
connect    |   ssl.key.password = null
connect    |   ssl.keymanager.algorithm = SunX509
connect    |   ssl.keystore.certificate.chain = null
connect    |   ssl.keystore.key = null
connect    |   ssl.keystore.location = null
connect    |   ssl.keystore.password = null
connect    |   ssl.keystore.type = JKS
connect    |   ssl.protocol = TLSv1.3
connect    |   ssl.provider = null
connect    |   ssl.secure.random.implementation = null
connect    |   ssl.trustmanager.algorithm = PKIX
connect    |   ssl.truststore.certificates = null
connect    |   ssl.truststore.location = null
connect    |   ssl.truststore.password = null
connect    |   ssl.truststore.type = JKS
connect    |   value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
connect    |  (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,616] WARN The configuration 'config.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,617] WARN The configuration 'metrics.context.connect.group.id' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,618] WARN The configuration 'rest.advertised.host.name' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,618] WARN The configuration 'status.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,618] WARN The configuration 'plugin.path' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,618] WARN The configuration 'offset.flush.interval.ms' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,618] WARN The configuration 'rest.port' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,618] WARN The configuration 'config.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,618] WARN The configuration 'key.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,618] WARN The configuration 'zookeeper.connect' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,618] WARN The configuration 'metrics.context.connect.kafka.cluster.id' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,618] WARN The configuration 'status.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,618] WARN The configuration 'value.converter.schemas.enable' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,618] WARN The configuration 'offset.storage.replication.factor' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,618] WARN The configuration 'offset.storage.topic' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,618] WARN The configuration 'value.converter' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,618] WARN The configuration 'key.converter' was supplied but isn't a known config. (org.apache.kafka.clients.consumer.ConsumerConfig)
connect    | [2025-06-17 05:57:49,618] INFO Kafka version: 7.2.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
connect    | [2025-06-17 05:57:49,618] INFO Kafka commitId: 80334008361592c187b36a27536f10f33fe93aa3 (org.apache.kafka.common.utils.AppInfoParser)
connect    | [2025-06-17 05:57:49,618] INFO Kafka startTimeMs: 1750139869618 (org.apache.kafka.common.utils.AppInfoParser)
connect    | [2025-06-17 05:57:49,634] INFO [Producer clientId=producer-3] Cluster ID: giJkw9-kTvOOXXJyYfUXQw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,644] INFO [Consumer clientId=consumer-compose-connect-group-3, groupId=compose-connect-group] Cluster ID: giJkw9-kTvOOXXJyYfUXQw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,656] INFO [Consumer clientId=consumer-compose-connect-group-3, groupId=compose-connect-group] Subscribed to partition(s): docker-connect-configs-0 (org.apache.kafka.clients.consumer.KafkaConsumer)
connect    | [2025-06-17 05:57:49,657] INFO [Consumer clientId=consumer-compose-connect-group-3, groupId=compose-connect-group] Seeking to EARLIEST offset of partition docker-connect-configs-0 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
connect    | [2025-06-17 05:57:49,703] INFO [Consumer clientId=consumer-compose-connect-group-3, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-configs-0 to 0 since the associated topicId changed from null to FwJL2vqxT2m0nG4by2KINg (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,721] INFO [Consumer clientId=consumer-compose-connect-group-3, groupId=compose-connect-group] Resetting offset for partition docker-connect-configs-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:29092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
connect    | [2025-06-17 05:57:49,722] INFO Finished reading KafkaBasedLog for topic docker-connect-configs (org.apache.kafka.connect.util.KafkaBasedLog)
connect    | [2025-06-17 05:57:49,722] INFO Started KafkaBasedLog for topic docker-connect-configs (org.apache.kafka.connect.util.KafkaBasedLog)
connect    | [2025-06-17 05:57:49,722] INFO Started KafkaConfigBackingStore (org.apache.kafka.connect.storage.KafkaConfigBackingStore)
connect    | [2025-06-17 05:57:49,722] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Herder started (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
connect    | [2025-06-17 05:57:49,767] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-0 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,767] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-5 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,767] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-10 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,767] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-20 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,767] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-15 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,767] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-9 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,768] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-11 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,768] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-16 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,768] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-4 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,768] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-17 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,768] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-3 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,768] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-24 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,768] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-23 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,768] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-13 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,768] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-18 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,768] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-22 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,769] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-2 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,769] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-8 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,769] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-12 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,769] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-19 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,769] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-14 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,769] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-1 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,769] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-6 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,769] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-7 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,769] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-offsets-21 to 0 since the associated topicId changed from null to EEtvj3MmSFm8qT8N2dU9Gw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,769] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-configs-0 to 0 since the associated topicId changed from null to FwJL2vqxT2m0nG4by2KINg (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,769] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-status-0 to 0 since the associated topicId changed from null to DOYJ0f7gSmuuzUw0uWQTFw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,769] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-status-1 to 0 since the associated topicId changed from null to DOYJ0f7gSmuuzUw0uWQTFw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,769] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-status-4 to 0 since the associated topicId changed from null to DOYJ0f7gSmuuzUw0uWQTFw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,769] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-status-2 to 0 since the associated topicId changed from null to DOYJ0f7gSmuuzUw0uWQTFw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,769] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition docker-connect-status-3 to 0 since the associated topicId changed from null to DOYJ0f7gSmuuzUw0uWQTFw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:49,770] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Cluster ID: giJkw9-kTvOOXXJyYfUXQw (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,095] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-0 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,096] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-10 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,096] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-20 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,096] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-40 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,096] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-30 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,096] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-9 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,096] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-11 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,096] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-31 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,096] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-39 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,096] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-13 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,096] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-18 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,096] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-22 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,096] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-8 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,096] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-32 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,096] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-43 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,097] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-29 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,097] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-34 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,097] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-1 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,097] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-6 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,097] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-41 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,097] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-27 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,097] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-48 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,097] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-5 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,097] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-15 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,098] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-35 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,098] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-25 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,098] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-46 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,098] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-26 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,098] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-36 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,098] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-44 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,098] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-16 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,098] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-37 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,098] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-17 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,098] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-45 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,098] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-3 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,098] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-24 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,098] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-38 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,098] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-33 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,098] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-23 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,098] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-28 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,099] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-2 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,099] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-12 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,099] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-19 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,099] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-14 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,099] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-4 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,099] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-47 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,099] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-49 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,099] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-42 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,099] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-7 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,099] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Resetting the last seen epoch of partition __consumer_offsets-21 to 0 since the associated topicId changed from null to YSQvTL6cSGiVXztL2RhWOA (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:53,125] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Discovered group coordinator kafka:29092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
connect    | [2025-06-17 05:57:53,144] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Rebalance started (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
connect    | [2025-06-17 05:57:53,146] INFO [Worker clientId=connect-1, groupId=compose-connect-group] (Re-)joining group (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
connect    | [2025-06-17 05:57:53,245] INFO [Worker clientId=connect-1, groupId=compose-connect-group] (Re-)joining group (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
connect    | [2025-06-17 05:57:53,331] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Successfully joined group with generation Generation{generationId=1, memberId='connect-1-0ce5fff5-bfea-4ff6-b12d-6cdc5f6aad91', protocol='sessioned'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
connect    | [2025-06-17 05:57:53,782] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Successfully synced group in generation Generation{generationId=1, memberId='connect-1-0ce5fff5-bfea-4ff6-b12d-6cdc5f6aad91', protocol='sessioned'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
connect    | [2025-06-17 05:57:53,784] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Joined group at generation 1 with protocol version 2 and got assignment: Assignment{error=0, leader='connect-1-0ce5fff5-bfea-4ff6-b12d-6cdc5f6aad91', leaderUrl='http://connect:8083/', offset=-1, connectorIds=[], taskIds=[], revokedConnectorIds=[], revokedTaskIds=[], delay=0} with rebalance delay: 0 (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
connect    | [2025-06-17 05:57:53,786] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Starting connectors and tasks using config offset -1 (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
connect    | [2025-06-17 05:57:53,786] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Finished starting connectors and tasks (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
connect    | [2025-06-17 05:57:53,864] INFO [Producer clientId=producer-3] Resetting the last seen epoch of partition docker-connect-configs-0 to 0 since the associated topicId changed from null to FwJL2vqxT2m0nG4by2KINg (org.apache.kafka.clients.Metadata)
connect    | [2025-06-17 05:57:54,244] INFO [Worker clientId=connect-1, groupId=compose-connect-group] Session key updated (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
kafka      | [2025-06-17 06:02:08,772] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
kafka      | [2025-06-17 06:02:08,772] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
kafka      | [2025-06-17 06:02:08,782] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
kafka      | [2025-06-17 06:02:08,786] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
connect    | [2025-06-17 06:02:29,241] INFO [AdminClient clientId=adminclient-8] Node -1 disconnected. (org.apache.kafka.clients.NetworkClient)
